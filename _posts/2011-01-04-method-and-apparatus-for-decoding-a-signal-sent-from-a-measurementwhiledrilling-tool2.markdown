---

title: Method and apparatus for decoding a signal sent from a measurement-while-drilling tool
abstract: Disclosed are a method and an apparatus for decoding a signal sent from a measurement-while-drilling tool. In order to decode the signal, a decoder implementation that is communicative according to a decoder implementation protocol and that is configured to decode the signal into a decoded signal is instantiated. The decoder implementation protocol is then conformed to a transmission protocol. The signal is sent to the decoder implementation according to the transmission protocol. Because the decoder implementation protocol has been conformed to the transmission protocol, the decoder implementation can receive the signal and can decode it. One way in which the decoder implementation protocol can be conformed to the transmission protocol is through the use of a translation layer between the module that sends the signal to be decoded and the decoder implementation.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09618643&OS=09618643&RS=09618643
owner: PASON SYSTEMS CORP.
number: 09618643
owner_city: Calgary
owner_country: CA
publication_date: 20110104
---
Pursuant to 35 U.S.C. 119 e this application claims the benefit of provisional U.S. Patent Application No. 61 292 120 filed Jan. 4 2009 and entitled Method and Apparatus for Decoding a Signal Sent from a Measurement While Drilling Tool which is hereby incorporated by reference in its entirety.

The present disclosure is directed at a method and apparatus for decoding a signal sent from a measurement while drilling tool. More particularly the present disclosure is directed at a method and apparatus for facilitating use of multiple decoding units to decode differently encoded signals.

When drilling for oil or gas accurately and precisely tracking the position of the borehole can be vitally important. For example a directional driller may need to orient the borehole such that it either avoids or intersects one or more existing boreholes. Knowing the position of the borehole also allows the borehole to be drilled at an angle such that oil recovery from a reservoir can be increased by ensuring that the area of intersection between the borehole and the reservoir is relatively high. Furthermore knowing the position of the borehole may be important to ensure that drilling does not occur in a prohibited area such as an area in which only a competitor has rights to drill. Even when the borehole is intended to extend vertically tracking the position of the borehole can be important to ensure that the borehole is in fact being drilled vertically.

To track borehole position a measurement while drilling MWD tool can be used. A MWD tool contains measurement instruments that are located within a drill string and typically near a drill bit. The MWD tool typically measures a variety of parameters relevant in directional drilling such as 

The MWD tool communicates measured parameters by sending a signal to the surface using any one of a variety of known transmission techniques such as mud pulse telemetry electromagnetic telemetry and wired pipe. The transmitted information is then used by any one or more of the directional driller a geologist and a MWD technician to drill the borehole according to a predetermined trajectory.

The signal the MWD tool transmits can be encoded according to a cipher that is proprietary to the MWD tool manufacturer. Consequently in order to decode the signal a decoder that the MWD tool manufacturer provides is required. In other words a one to one dependence typically exists between the MWD tool and the decoder used to decode signals that the MWD tool transmits. This setup can be cumbersome when a user wants to use a single piece of hardware to decode signals sent from a variety of different MWD tools.

Accordingly there exists a need for at least one of a method and apparatus for decoding a signal sent from a MWD tool that improves on the prior art.

According to one aspect there is provided a method for decoding a signal sent from a measurement while drilling tool. The method includes instantiating a decoder implementation configured to decode the signal into a decoded signal and communicative according to a decoder implementation protocol conforming the decoder implementation protocol to a transmission protocol used to send the signal such that the decoder implementation can receive the signal wherein the decoder implementation is unable to receive and therefore unable to decode the signal prior to the decoder implementation protocol being conformed sending the signal according to the transmission protocol to the decoder implementation and decoding the signal into the decoded signal using the decoder implementation.

The method may also include following decoding sending the decoded signal to a signal processing unit communicative according to a signal processing unit protocol for processing.

The transmission protocol may be the signal processing unit protocol and the signal processing unit may send the signal to the decoder implementation for decoding.

Sending the signal according to the transmission protocol may include sending the signal on a per sample basis. Sending the signal according to the transmission protocol may also include sending a sampling rate at which the signal was sampled to the decoder implementation to facilitate decoding.

The decoded signal may include parameters measured by the measurement while drilling tool. Sending the decoded signal to the signal processing unit may be done by asynchronously sending the parameters from the decoder implementation to the signal processing unit. Listener modules may be instantiated to asynchronously send the parameters.

Asynchronously sent parameters may be selected from a group consisting of a type of a measurement while drilling word a value of the measurement while drilling word a checksum of the measurement while drilling word quality of the measurement while drilling word a time at which the measurement while drilling word was decoded a type of error encountered when decoding the measurement while drilling word a percentage of expected measurement while drilling words that have been successfully decoded a quality rating of the signal status of the decoder implementation height of pressure pulses detected by the decoder implementation a current mode in which the measurement while drilling tool is configured to operate mud pump state whether a change in measurement while drilling tool mode has occurred and a new mode in which the measurement while drilling tool is to operate.

Parameters may also be synchronously sent by sending a synchronous request from the signal processing unit to the decoder implementation requesting at least one of the parameters and by then synchronously responding to the synchronous request. Synchronously sent parameters may be selected from a group consisting of current status of the decoder implementation current pulse height current mud pump state current quality rating of the signal percentage of expected words from the measurement while drilling tool that have been successfully decoded and current mode in which the measurement while drilling tool is configured to operate.

The method may also include sending to the decoder implementation information regarding a tool mode in which the measurement while drilling tool was operating when sampling the signal.

The decoded signal may include data that the signal processing unit can use to display mud pulses sent by the measurement while drilling tool.

Instantiating the decoder implementation may be performed by accessing a decoder definition list file containing a listing of decoder definition files corresponding to first and second decoder implementations wherein the first and second decoder implementations are configured to decode differently encoded signals and instantiating the decoder implementation corresponding to the encoding of the signal. A user may provide input via for example a graphical user interface indicating which of the decoder implementations he or she wants to use to decode the signal. The selected decoder implementation may then be used to decode the signal.

According to another aspect there is provided an apparatus for decoding a signal sent from a measurement while drilling tool. The apparatus includes a processor and a computer readable medium communicatively coupled to the processor. The computer readable medium has encoded thereon statements and instructions to cause the processor to perform any or the foregoing methods or particular variants aspects or embodiments thereof.

According to another aspect there is provided a computer readable medium having encoded thereon statements and instructions to cause a processor to perform a method for decoding a signal sent from a measurement while drilling tool. The computer readable medium has encoded thereon statements and instructions to cause the processor to perform any or the foregoing methods or particular variants aspects or embodiments thereof.

According to another aspect there is provided an apparatus for decoding a signal sent from a measurement while drilling tool. The apparatus includes a signal processing unit communicatively coupled to the measurement while drilling tool and having a downstream interface configured to communicate according to a signal processing unit protocol wherein the downstream interface is for sending the signal for decoding and for receiving a decoded signal and a decoding unit. The decoding unit includes a decoder implementation configured to decode the signal into the decoded signal the decoder implementation also has an upstream interface configured to communicate according to a decoder implementation protocol that differs from the signal processing unit protocol wherein the upstream interface is for receiving the signal for decoding and for sending the decoded signal. The decoding unit also includes a translation layer communicatively coupled between the downstream interface of the signal processing unit and the upstream interface of the decoding unit which is configured to translate the signal processing unit protocol to the decoder implementation protocol such that the signal processing unit and the decoding unit are communicatively coupled.

A MWD tool is commonly used to acquire data that is relevant in directional drilling. Referring now to there is depicted a drilling rig that is being used in directional drilling. Extending below the drilling rig is a drill string having a drill bit at one end that is used to drill a borehole . The drill string includes bent sections such that the borehole that is drilled is non vertical. Located near the drill bit is the MWD tool . The MWD tool is used to measure a variety of parameters that are relevant in directional drilling such as drill string inclination drill string azimuth toolface gamma ray intensity the resistivity of the surrounding rock and various other pieces of diagnostic information. The MWD tool then transmits the measured parameters back to the surface.

In the MWD tool uses mud pulses to transmit the measured parameters to the surface. On the surface is a pump that pumps drilling fluid mud down through the interior of the drill string . At the drill bit the mud exits the drill string and returns to the surface through the annular cavity between the drill string and the interior surface of the borehole . The flow of the mud from the pump through the drill string and back to the surface is indicated by the arrows that extend along the mud flow path. The flow of the mud through the MWD tool is intermittently restricted by a mud pulser within the MWD tool that creates pressure pulses in the mud flow input into the drill string from the pump input mud flow . Communicating the signal using pressure pulses in the input mud flow is referred to as mud pulse telemetry . While the present embodiment is utilized in conjunction with mud pulse telemetry in alternative embodiments other suitable forms of telemetry can be used. For example electromagnetic telemetry and wired pipe can be used to communicate the signal.

The pressure pulses constitute a signal that represents the measured parameters that are measured by the MWD tool and are encoded according to a cipher that is proprietary to the manufacturer of the MWD tool . The pressure pulses are transmitted up to the surface through the mud and are measured by a pressure sensor that senses pressure changes in the input mud flow. The output of the pressure sensor is a 4 mA to 20 mA electrical analog signal that is transmitted to and digitized by an analog to digital converter ADC . The ADC digitizes the analog signal at a rate of 50 Hz. The pressure sensor and the ADC form part of a system that is used to automatically record measured parameters sent by the MWD tool an example of such a system is the Pason Electronic Drilling Recorder. The digital signal that the ADC outputs is then sent to a doghouse computer over a RS422 connection. The doghouse computer transmits the digital signal over a network to an apparatus for decoding the signal. The network may be for example a packet switched wide or local area network communicative using TCP IP.

Referring now to there is depicted a block diagram of the apparatus that is used to decode the signal. The signal enters the apparatus through a communications port which is any port suitable to receive the signal sent from the doghouse computer . When the signal is sent from the doghouse computer using TCP IP the communications port may be an Ethernet port. Communicatively coupled to the communications port is a signal processing unit that receives the signal. Once the signal is decoded the signal processing unit is configured to use the measured parameters that are contained in the signal. For example the signal processing unit may include a graphical user interface that displays measured parameters such as drill string inclination drill string azimuth and toolface to a directional driller such that the directional driller can ensure drilling proceeds according to a drilling plan.

The signal processing unit includes a downstream interface that is used to send the signal to a decoding unit for decoding. The downstream interface sends the signal according to a signal processing unit protocol which includes method calls to an Application Programming Interface API as discussed in greater detail below.

Each of the decoding units includes a decoder implementation that is used to decode the signal into a decoded signal. The decoder implementation is typically supplied by the manufacturer of the MWD tool and is consequently able to decode the signal sent by the MWD tool that is encoded using the proprietary cipher. One example of the decoder implementation is the GE Tensor Tolteq decoder implementation available from Tolteq. Each of the decoder implementations has an upstream interface that is used to receive the signal for decoding and to send the decoded signal. Just as each of the different decoder implementations is able to decode a differently encoded signal the upstream interfaces of each of the decoder implementations each communicate according to its own decoder implementation protocol. The decoder implementation protocol is not the same as the signal processing unit protocol. Consequently the decoder implementations and the signal processing unit are not able to directly communicate.

In order to enable communication between the signal processing unit and the decoder implementations the upstream interface of each of the decoder implementations communicates with the downstream interface of the signal processing unit through a translation layer . Each of the decoding units has one translation layer configured specifically to facilitate communication with the decoder implementation of that decoding unit . For each of the decoding units the translation layer conforms the decoder implementation protocol used by the upstream interface of the decoder implementation to the signal processing unit protocol used by the downstream interface of the signal processing unit . In the present embodiment when the signal processing unit protocol is an API the translation layer interfaces with the decoder implementation according to the decoder implementation protocol and interfaces with the signal processing unit according to the API.

The API includes different methods that the signal processing unit calls in order to decode the signal as follows the indicates a wildcard 

The methods that are included in the add Listener remove Listener get and set Consumer family of methods are as follows 

Also depicted in is a decoder configuration manager that is used to instantiate the decoding units . The decoder configuration manager is communicatively coupled to the signal processing unit and has access to a file system of the apparatus . Stored within the file system are a decoder definition list file and various decoder definition files that are referred to within the decoder definition list file . An exemplary decoder definition list file in XML format follows 

The decoder definition list file lists the decoder definition files for the available decoder implementations . In this embodiment two decoder implementations are available one GE Tensor Tolteq decoder implementation and one Pason Tensor decoder implementation.

An exemplary decoder definition file written in XML for the GE Tensor Tolteq decoder implementation follows 

An exemplary decoder definition file written in XML for the Pason Tensor decoder implementation follows 

Regardless of the specific decoder implementation used the decoder definitions files utilize a layout as follows 

The id field is an identifier for the decoder implementation that is used internally by the signal processing unit . The description field is a human readable description of the decoder implementation the description field is presented to the user when the user is selecting which of the decoder implementations to use. When the Java programming language is used to instantiate the decoding unit the factory field is the name of a fully qualified Java class of the factory used to instantiate the decoding unit . The defaultConfigurationFile field is the name and location of the default configuration file to be used by the decoder implementation the configuration file is typically supplied by the manufacturer of the decoder implementation . The user may modify the configuration file if so desired. The configurationFileType field is the type of configuration file that is used to program the decoder implementation . The parameters field contains a list of parameters if any used by the decoder implementation .

In order to instantiate one of the decoder implementations the decoder configuration manager first accesses the decoder definition list file and in turn each of the decoder definition files to obtain the description field from each of the decoder definition files . The decoder configuration manager sends the description fields to the signal processing unit which displays them to the user in a drop down list. The user is able to select which of the decoder implementations is to be instantiated. This information is returned to the decoder configuration manager via the signal processing unit . In the present embodiment the GE Tensor Tolteq decoder implementation is selected which forms part of a first decoding unit in .

The decoder configuration manager then instantiates the first decoding unit using the TensorDecoderFactory Java factory as identified in the factory field in the decoder definition file for the GE Tensor Tolteq decoder implementation . The decoder configuration manager calls two methods included in the TensorDecoderFactory interface setConfigurationInputStreamFactory which sets the input stream factory to be used for communicating configuration information specific to the decoder implementation and setParams which sets parameters defined for the TensorDecoderFactory that are specific to the GE Tensor Tolteq decoder implementation as specified in the decoder definition file for the GE Tensor Tolteq decoder implementation . The decoder configuration manager then calls the getDecoder method that also forms part of the interface of the TensorDecoderFactory this creates the translation layer that conforms the upstream interface of the decoder implementation to the downstream interface of the signal processing unit . In other words following execution of the getDecoder method the translation layer is created and the signal processing unit can communicate with the decoder implementation by calling the methods that are included in the API. Following the calling of getDecoder the first decoding unit is considered instantiated. Referring to which depicts a method for decoding a signal sent from the MWD tool following instantiation of the first decoding unit the processes described in blocks and of are complete. That is instantiating the first decoding unit involves instantiating the GE Tensor Tolteq decoder implementation which is configured to decode the signal into a decoded signal and which is communicative according to a protocol that differs from the API that the signal processing unit is configured to use block . Instantiating the first decoding unit also results in the translation layer which conforms the native protocol of the GE Tensor Tolteq decoder implementation to the API used by the signal processing unit block . Notably block in refers to a transmission protocol while the present embodiment contemplates the transmission protocol being the same as the signal processing unit protocol in alternative embodiments the first decoding unit may communicate with a module other than the signal processing unit that communicates according to the transmission protocol.

Following instantiation of the first decoding unit the GE Tensor Tolteq decoder implementation is initialized. The signal processing unit calls the sampleRateChanged method in the API to instruct the decoder implementation that the sampling rate is 50 Hz if the sampling rate of the ADC changes the sampleRateChanged method can be called again. The signal processing unit then calls each method in the add Listener family of methods to instantiate the listener modules the MWD data listener the property change listener the pump state listener and the tool mode change listener. More than one of each of these listener modules can be instantiated if so desired. In the present embodiment in which the first decoding unit sends the decoded signal only to the signal processing unit only one of each of the listener modules is instantiated. In alternative embodiments in which the decoder unit sends the decoded signal to a variety of different destinations e.g. the signal processing unit and a different device for recording the decoded signal such as the Pason Electronic Data Recorder another set of the listener modules can be instantiated to asynchronously send the measured parameters to the different device. This is graphically depicted in which illustrates the various listener modules that that facilitate communication between the signal processing unit and the decoder implementation . In the present embodiment each of the listener modules added using the methods in the add Listener family of methods is instantiated as part of the signal processing unit . However in alternative embodiments the listener modules can form part of the first decoder unit or be distinct from the first decoder unit and the signal processing unit . One of the two methods in the set Consumer family of methods is also called to obtain a desired graphical view of the signal. The signal processing unit then calls each of the methods in the get family of methods to obtain the initial state from each of the listener modules . The start method is then called and decoding of the signal can begin.

In order to decode the signal sent from the MWD tool and following instantiation of the first decoding unit the signal processing unit calls the consumeSample method and sends one sample of the signal to the first decoding unit . Again referring to this completes the process described in block . The first decoding unit accepts the sample through the translation layer and decodes it using the decoder implementation as described in the process described in block of . Multiple samples may have to be sent from the signal processing unit to the first decoding unit and decoded in order for a usable portion of the decoded signal to be generated. When the decoded signal is generated the first decoding unit sends it back to the signal processing unit using one of the listener modules if the decoded signal is a MWD word it is sent via one of the MWD data listeners if it contains pump state information it is sent via one of the pump state listeners if it contains property state information it is sent via one of the property state listeners and if it contains tool mode information it is sent via one of the tool mode listeners. In this way the encoded signal sent from the MWD tool is decoded by the decoder implementation and the decoded signal is returned to the signal processing unit for for example display to the user.

The stippled lines in which all of the decoding units in are depicted apart from the first decoding unit indicate that although the signal processing unit of the present embodiment sends the signal from the MWD tool to only one of the decoding units at any given time multiple of the decoding units can be instantiated and used with the signal processing unit .

Instantiating a second decoding unit is done analogously to instantiating the first decoding unit the process for which is described above. As with instantiating the first decoding unit the user first selects one of the decoder implementations enumerated in the decoder definition list file . The user may for example select the Pason Tensor decoder implementation . As described above in respect of the first decoding unit and blocks and of the second decoding unit is instantiated and conformed to the signal processing unit protocol. The second decoding unit is also initialized as described above. The signal can then be sent from the signal processing unit to the second decoding unit instead of the first decoding unit for decoding.

Any multiple decoding units that are instantiated can either all be resident in memory simultaneously or alternatively the apparatus can be configured such that only one of the decoding units is resident in memory at any given time.

Enabling the use of multiple of the decoding units as described above is advantageous for several reasons. First it allows the apparatus to be used to decode signals sent from several different MWD tools simply by selecting a different one of the decoder implementations in software. No hardware needs to be physically changed or swapped in order to decode signals sent from different MWD tools which facilitates ease of use. Second as the upstream interfaces of all of the decoder implementations are each conformed to the API used by the downstream interface of the signal processing unit the signal processing unit can treat each of the decoding units as a black box. This results in a modular design which allows changes to be made to any one of the decoding units without affecting other modules within the apparatus .

In the present embodiment the decoder configuration manager translation layer the signal processing unit and the decoder implementation are implemented as modules in the Java programming language but in alternative embodiments any or all may be implemented according to any suitable programming language such as C and C . In the present embodiment the decoder configuration manager translation layer signal processing unit and the decoder implementation are all executed using a single processor not shown that forms part of the apparatus . The apparatus also includes a computer readable medium not shown that is communicatively coupled to the processor and that stores information useful for implementation of the decoder configuration manager translation layer signal processing unit and decoder implementation such as software code. However in alternative embodiments any one or more of the decoder configuration manager translation layer signal processing unit and decoder implementation may be implemented using a standalone processor and computer readable medium physically removed from yet still in communication with the other modules of the apparatus as depicted in . Furthermore although the apparatus of the present embodiment relies on a processor other devices as known to skilled persons such as microcontrollers programmable logic devices and general purpose computers can be used to implement the modules of the apparatus . A suitable computer readable medium includes any medium that is known to be suitable to skilled persons such as suitable forms of disc based and semiconductor based media including RAM ROM flash memory hard disk drives CD ROMs and DVDs.

For the sake of convenience the embodiments above are described as various interconnected functional blocks or distinct software modules. This is not necessary however and there may be cases where these functional blocks or modules are equivalently aggregated into a single logic device program or operation with unclear boundaries. For example the translation layer and the decoder implementation can be implemented separately such that they are able to be instantiated at different times in independent modules implemented on the same or different pieces of hardware and such that they do not form a single decoding unit . In any event the functional blocks and software modules or features of the flexible interface can be implemented by themselves or in combination with other operations in either hardware or software.

While particular embodiments have been described in the foregoing it is to be understood that other embodiments are possible and are intended to be included herein. It will be clear to any person skilled in the art that modifications of and adjustments to the foregoing embodiments not shown are possible.

