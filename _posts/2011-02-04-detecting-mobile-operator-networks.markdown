---

title: Detecting mobile operator networks
abstract: Various embodiments are disclosed that relate to detecting mobile operator networks. For example, one disclosed embodiment provides a method of operating a catalog server to which a mobile computing device connects via a computer network path that traverses a mobile operator network. The method may include receiving data from a mobile device, the data including a locale and a mobile operator identifier stored in memory on the mobile device; searching a database to find a store based on the mobile operator identifier and the locale; if a store is found, populating settings based on the store; and sending configuration information to the mobile device based on the settings.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08914408&OS=08914408&RS=08914408
owner: Microsoft Corporation
number: 08914408
owner_city: Redmond
owner_country: US
publication_date: 20110204
---
Digital assets and content e.g. applications music videos games etc. may be offered to users of computing devices such as cell phones PDAs personal digital assistants mobile devices personal computers etc. by third party publishers. Mobile operators which operate the access networks to which mobile computing devices wirelessly connect to enable them to communicate with the Internet may also in some instances desire to make content available to their user base as third party publishers. Additionally manufacturers of operating systems running on the computing devices may provide access to general content for users of the devices and may operate an online marketplace from which content from the operating system manufacture itself as well as from the third party publishers may be downloaded by users.

One drawback of these online marketplaces however is that when a vast array of content is made available it can sometimes be difficult for a user to locate relevant content from a particular third party publisher of relevance to the user such as from the user s mobile operator. Due to this difficulty the user may be unaware of content offers to which the user is entitled. Further the mobile operators cannot effectively utilize the application catalog to present valuable content to their users.

Detecting mobile operator networks is useful in activating features such as mobile operator billing and in enabling a mobile operator to offer exclusive content to its users. However without having in depth knowledge of specific encrypted keys it may be difficult to determine what mobile network a specific mobile device is using to access the Internet particularly given the many different mobile network providers.

Various embodiments are disclosed that relate to detecting mobile operator networks. For example one disclosed embodiment provides a method of operating a catalog server to which a mobile computing device connects via a computer network path that traverses a mobile operator network. The method may include receiving data from a mobile device the data including a locale and a mobile operator identifier stored in memory on the mobile device searching a database to find a store based on the mobile operator identifier and the locale if a store is found populating settings based on the store and sending configuration information to the mobile device based on the settings.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter. Furthermore the claimed subject matter is not limited to implementations that solve any or all disadvantages noted in any part of this disclosure.

Turning now to an embodiment of a computing system in accordance with this disclosure is schematically shown.

Computing system includes a catalog server . The catalog server includes a catalog database configured to store digital content such as applications games music videos and the like provided by first party publishers and third party publishers. For example a first party publisher may be a manufacturer or a provider of an operating system running on a client device such a client device which interfaces with catalog server via network . In one embodiment the third party publishers are mobile operators which operate mobile networks via which mobile computing devices access network . In other embodiments third party publishers such as device manufacturers carrier service providers wireless service providers network providers etc. may also make content available on the catalog server. Network is typically a WAN and may for example include the Internet and is accessed via a clientside access network such as a mobile operator network.

By way of example catalog database includes a general catalog a mobile operator MO catalog and an OEM catalog . The general catalog includes content provided by a first party publisher. For example a manufacturer of an operating system running on client device may provide content via catalog server to a user of client device . Such first party publisher provided content is referred to herein as general content which may be stored in the general catalog . Further content in the catalog database may be periodically updated by both first and third party publishers.

There may be a business desire for a computing device operating system manufacturer to support exclusive content offers by third party content publishers such as mobile operators in addition to first party or general content. Additionally a mobile operator may wish to provide incentives for users to be a part of their user base by offering special content and discounts on content.

In order to properly offer third party exclusive content to users e.g. a user of client device users may need to be identified as fulfilling various publisher specific requirements set forth by a third party publisher of content. Further it may be desirable to provide a user with a combination of content offered by the general catalog in addition to the content offered by third party publishers so that a user may browse and possibly purchase or view the content.

The general and third party content in the catalog database may be displayed to a user of a client device e.g. client device in a marketplace environment wherein the user may browse available content. However in order to identify a mobile operator network of a client device catalog server includes a discovery API for identifying which catalogues or stores a user of client device is part of or subscribed to.

The discovery API may include various variables and values used to detect users of client devices who should be offered specific third party content e.g. as specified by a third party publisher. When a client device connects to the marketplace the client device passes up these values through a configuration step and the client will be returned a list of API endpoints and a list of third party catalogs they have access to.

The client device is typically a mobile computing device such as a cell phone tablet computing device personal data assistant PDA laptop computing device or other mobile personal computer and interacts with the catalog server via a network as discussed above. Thus herein in some instances client device may alternatively be referred to as a mobile device. The client device may be used to access multiple stores or catalogues with content from a plurality of publishers.

Client device may be a mobile device configured to use a variety of different mobile operator network types. For example the client device may be a GSM or CDMA mobile device with a single SIM and dual SIM memory component. Memory components of the client device may include a variety of data stored thereon and used to identify the device and the mobile operator network.

For example the mobile device may include a mobile network code MNC used in combination with a mobile country code MCC also known as a MCC MNC tuple to uniquely identify a mobile phone operator carrier. In some examples the mobile device may include a mobile operator key MO key stored thereon which may be used for identification. Additionally a client device may include an OEM ID stored thereon to identify a manufacturer of the device.

A locale of a client device may be used in addition to the mobile operator identifiers and OEM IDs described above to find mobile operator or OEM specific stores in the catalog database. A client device locale may be determined in a variety of ways. For example a locale may be cached and stored on catalog server based on an initial configuration or setup step of the client device e.g. a call to register the device. In other examples a locale may be stored on a memory component of the client device. For example upon initially accessing the catalog server the user may be prompted to enter a country and language pair so that future interactions with the server may be tailored to the user s geographic setting. Such a country and language pair or in some cases country alone may be stored as locale data on the catalog server and in some instances may also be downloaded to the mobile client device. Further the mobile client device may include software configured to query such locale data from the user and forward it to the catalog server.

In order to find stores in catalog database based on data received from the client device and a locale of the client device discovery API includes a find store function configured to search the catalog database to find a store based on a mobile operator identifier and or OEM ID and a locale of client device . The discovery API further includes a populate settings function for populating settings based on a store if found by the find store function .

Turning now to an embodiment of a method for detecting mobile operator networks on a computing device e.g. catalog server is shown.

At method includes receiving data from a mobile device where the data includes a locale and a mobile operator identifier stored in a memory component on the mobile device. Locale data it will be appreciated may include a geographic identifier such as country code e.g. JP for Japan and or a language identifier e.g. Japanese .

At method includes determining whether the mobile operator identifier is a mobile operator MO key. If the mobile operator identifier is an MO key then method proceeds to step .

At method includes finding a store based on the MO key and locale. For example a database may be searched to find a store based on the MO key and the locale.

At method includes determining if a store was found based on the MO key. If an MO store is not found at then method proceeds to step described below. However if a store was found at then method proceeds to step .

At method includes populating settings based on the store. Populating settings based on a found store may include populating an xml template file with store specific configuration information which may be sent to the mobile device. Following population of store specific settings at method proceeds to step described below.

Returning to step if the data does not include an MO key at then method proceeds to step . At method includes finding a store based on a mobile country code mobile network code tuple and the locale. For example a database may be searched to find a store based on the mobile country code mobile network code tuples.

In some examples mobile country code mobile network code tuples may not be the same on every mobile device that is mobile country code mobile network code tuples may not be unique. Thus logic may be implemented to assist in finding a store based on a mobile country code mobile network code tuple. For example MCC and MNC values each may include three characters used for identification so that a mobile country code mobile network code tuple may be of the form 3 3. However in some examples the last character of a mobile country code mobile network code tuple may not be used in the identification of a mobile network. Thus in some examples the last character of a mobile country code mobile network code tuple may be removed to form a modified mobile country code mobile network code tuple of the form 3 2.

Thus in some examples if a store is not found based on the mobile country code mobile network code tuple the last character of the mobile country code mobile network code tuple may be removed to obtain a modified tuple and the database may be searched to find a store based on the modified tuple and the locale.

In other examples both a mobile country code mobile network code tuple of the form 3 3 and a modified tuple of the form 3 2 may be used in a search of the database to find a store based on the 3 3 and 3 2 tuples. In this example if a store is found for both the mobile country code mobile network code tuple and the modified tuple a fail message may be sent to the mobile device to disable a marketplace presentation on the mobile device since the identified mobile networks are ambiguous.

Thus at method includes determining if both tuples match or neither match. If both tuples match at then method proceeds to step described below. However if one tuple match is found at then method proceeds to step .

At method includes populating settings based on the found store values and then proceeding to step . At step method includes finding a store based on an OEM ID and locale. For example a database may be searched to find a store based on the OEM ID and the locale.

At method includes determining if an OEM store is found. If an OEM store is found at then method proceeds to step . At method includes populating settings based on the OEM store values.

At method includes returning valid tuner configuration values based on the found store settings where tuner refers to a software program e.g. browser on the mobile client device that is configured to access or tune in content from a remote server for example using the HTTP protocol. For example store specific configuration information may be sent to the mobile device based on the store settings. The configuration information may be in the form of an xml template file customized based on the populated store specific settings.

Returning to step if an OEM store is not found at then method proceeds to step . At method includes determining whether an MO key or MCC MNC store was found e.g. in one of the previous steps at and . If an MO key or MCC MNC store was found at then method proceeds to step .

At method includes returning valid tuner configuration values based on the found store settings. For example store specific configuration information may be sent to the mobile device based on the store settings.

However if at no store was found then method proceeds to step . At method includes returning or sending a fail message e.g. a 901 08 message to the mobile device e.g. to disable a marketplace presented to a user of the mobile device. In some examples fail messages may be stored on a log on catalog server in order to add data and improve future detection effectiveness

For example GUI may present a hybrid view of content from a general catalog content from an MO catalog and content from an OEM catalog . The marketplace may additionally include various browsing functions such as directories and a search box .

Each computing device disclosed herein includes a physical processor and an associated memory and mass storage device. The processor is configured to execute software stored on the mass storage device using portions of memory to implement the functions described above. In some embodiments the processor and memory may be integrated on a single chip. Each computing device may optionally include a user input device such as a keyboard touchpad touch screen or mouse and a display. Each computing device may further include a network communication system configured to enable the device to communicate with other devices over wired and or wireless networks including the Internet. The computing device may further include computer readable media storing instructions that when executed by the processor cause the computing device to perform the functions recited above

It is to be understood that virtually any computer architecture may be used without departing from the scope of this disclosure. In different embodiments computing system may take the form of a mainframe computer server computer desktop computer laptop computer tablet computer home entertainment computer network computing device mobile computing device mobile communication device gaming device etc. The methods and processes described below herein may be implemented as a computer application computer service computer API computer library and or other computer program products

It is to be appreciated that a data holding subsystem includes one or more physical non transitory devices. In contrast in some embodiments aspects of the instructions described herein may be propagated in a transitory fashion by a pure signal e.g. an electromagnetic signal an optical signal etc. that is not held by a physical device for at least a finite duration. Furthermore data and or other forms of information pertaining to the present disclosure may be propagated by a pure signal.

The terms module program and engine may be used to describe an aspect of a computing device that is implemented to perform one or more particular functions. In some cases such a module program or engine may be instantiated via a processor executing instructions held by memory or mass storage. It is to be understood that different modules programs and or engines may be instantiated from the same application service code block object library routine API function etc. Likewise the same module program and or engine may be instantiated by different applications services code blocks objects routines APIs functions etc. The terms module program and engine are meant to encompass individual or groups of executable files data files libraries drivers scripts database records etc.

It is to be understood that the configurations and or approaches described herein are exemplary in nature and that these specific embodiments or examples are not to be considered in a limiting sense because numerous variations are possible. The specific routines or methods described herein may represent one or more of any number of processing strategies. As such various acts illustrated may be performed in the sequence illustrated in other sequences in parallel or in some cases omitted. Likewise the order of the above described processes may be changed.

The subject matter of the present disclosure includes all novel and nonobvious combinations and subcombinations of the various processes systems and configurations and other features functions acts and or properties disclosed herein as well as any and all equivalents thereof.

