---

title: Methods and apparatus providing intelligent radio selection for legacy and non-legacy applications
abstract: Methods and apparatus providing intelligent interface selection for legacy and non-legacy applications. The method includes intercepting a networking function call from an application desiring radio access, selecting a radio from a plurality of candidate radios based on selection criteria, and binding the radio to the application. To facilitate flow mobility, the method includes allocating an ephemeral port to the radio, generating a flow binding rule based only on the ephemeral port, and signaling the flow binding rule to a home agent.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09603085&OS=09603085&RS=09603085
owner: QUALCOMM Incorporated
number: 09603085
owner_city: San Diego
owner_country: US
publication_date: 20110215
---
The present Application for Patent claims priority to U.S. Provisional Application No. 61 305 087 entitled MAFISLN LA filed Feb. 16 2010 and assigned to the assignee hereof and hereby expressly incorporated by reference herein.

The present Application for Patent claims priority to U.S. Provisional Application No. 61 305 091 entitled S AMFFM filed Feb. 16 2010 and assigned to the assignee hereof and hereby expressly incorporated by reference herein.

The present application relates generally to the operation of wireless communication systems and more particularly to methods and apparatus providing intelligent radio selection for legacy and non legacy applications.

Applications Apps or device applets are now available that operate to provide a wide range of add on services and features to wireless devices. For example it is now possible for wireless devices to download and launch device applets to perform value added functions such as shopping searching position location driving navigation or an array of other functions. Network and application providers generally offer these device applets to device users for additional fees. Thus the use of device applets increases the functionality and usability of wireless devices and offers device users features and convenience not originally available on the devices themselves.

Typically a wireless device interfaces with one or more communication networks using any of a plurality of radios. For example the wireless device may include a variety of radios providing communications using Cellular WiFi Bluetooth or other types of radio access technologies. Accordingly applications executing on the wireless device are typically provided with a default routing that determine the radio and associated radio channel the applications will use to communicate with the appropriate network.

However there is an increased interest in intelligently selecting the radio through which a given application communicates. This is due in part to an increase in the number of multi radio devices e.g. 3G WiFi devices and an increase in network traffic that can create capacity problems for operators. Thus with respect to such capacity problems it would be desirable to offload traffic to alternative radios where such offloading is possible and does not significantly degrade application performance or where application performance actually may be improved based on intelligent radio selection.

Unfortunately proposed solutions to affect radio selection may be inefficient costly and may not be applicable to legacy applications. For example one proposed solution would require all applications to be changed to explicitly indicate a preferred radio for use. This solution would be very inefficient and costly in that applications at each wireless device would need to be upgraded to specify a radio preference and would have to account for radio resources available at each device. Furthermore such a solution may not be feasible with legacy applications where such upgrades are not possible.

Therefore it would be desirable to have an efficient and cost effective mechanism that operates to provide intelligent radio selection for both legacy and non legacy applications so that each application utilizes the most desirable radio available.

In one or more aspects an intelligent radio selection system comprising methods and apparatus operates to provide intelligent radio selection for both legacy and non legacy applications so that each application utilizes the most desirable radio available.

In an aspect a method is provided for intelligent radio selection at a device. The method comprises intercepting a networking function call from an application desiring radio access selecting a radio from a plurality of candidate radios based on selection criteria and binding the radio to the application.

In an aspect an apparatus is provided for intelligent radio selection at a device. The apparatus comprises means for intercepting a networking function call from an application desiring radio access means for selecting a radio from a plurality of candidate radios based on selection criteria and means for binding the radio to the application.

In an aspect an apparatus is provided for intelligent radio selection at a device. The apparatus comprises a connectivity engine configured to intercept a networking function call from an application desiring radio access and select a radio from a plurality of candidate radios based on selection criteria and a socket component configured to bind the radio to the application.

In an aspect a computer program product is provided for intelligent radio selection at a device. The computer program product comprises a computer readable medium embodying codes executable by a processor to intercept a networking function call from an application desiring radio access select a radio from a plurality of candidate radios based on selection criteria and bind the radio to the application.

Other aspects will become apparent after review of the hereinafter set forth Brief Description of the Drawings Description and the Claims.

The following description describes implementations of an intelligent radio selection system that operates to provide intelligent radio selection for both legacy and non legacy applications so that each application utilizes the most desirable radio available.

The techniques described herein may be used for various wireless communication networks such as Code Division Multiple Access CDMA networks Time Division Multiple Access TDMA networks Frequency Division Multiple Access FDMA networks Orthogonal FDMA OFDMA networks Single Carrier FDMA SC FDMA networks etc. The terms networks and systems are often used interchangeably. A CDMA network may implement a radio technology such as Universal Terrestrial Radio Access UTRA CDMA2000 etc. UTRA includes Wideband CDMA W CDMA and Low Chip Rate LCR . CDMA2000 covers IS 2000 IS 95 and IS 856 standards. A TDMA network may implement a radio technology such as Global System for Mobile Communications GSM . An OFDMA network may implement a radio technology such as Evolved UTRA E UTRA IEEE 802.11 IEEE 802.15 IEEE 802.16 IEEE 802.20 Flash OFDM etc. UTRA E UTRA and GSM are part of Universal Mobile Telecommunication System UMTS . Long Term Evolution LTE is an upcoming release of UMTS that uses E UTRA. UTRA E UTRA GSM UMTS and LTE are described in documents from an organization named 3rd Generation Partnership Project 3GPP . CDMA2000 is described in documents from an organization named 3rd Generation Partnership Project 2 3GPP2 . These various radio technologies and standards are known in the art.

During operation the device executes applications which can interface with the network using any of the plurality of radios. For example an executing application issues a networking function call such as a socket layer call to request a network resource for communication with the network . Conventional systems typically process the socket layer call based on a default routing configuration to bind a pre determined radio resource to the application.

However in various implementations the intelligent radio selection system operates to intercept the networking function call from the application and select the appropriate radio for use by the application. A binding process is then performed to bind the application to the network resource i.e. the radio that has been selected . Since the intelligent radio selection system performs in response to the normal operations of the applications to use a radio resource the system can operate with both legacy and non legacy applications without any application changes or upgrades. A more detailed description of the intelligent radio selection system is provided below.

During operation the connectivity engine intercepts networking function calls such as socket layer calls from an application at the application layer . Once the networking function calls are intercepted the connectivity engine operates to select an ideal radio interface from the plurality of candidate radios within radio unit . For example the connectivity engine selects the radio based on a variety of selection criteria. When a radio interface is selected the connectivity engine uses socket layer functions of the socket layer to establish a connection between the application and the radio interface that has been selected. For example the socket layer functions may include a connect function Connect a bind function Bind a set socket option function Setsockopt and or any other suitable socket layer functions.

Thus the device architecture provides for intelligent radio selection so that both legacy and non legacy applications executing at a device can be bound to the most preferred radio interface.

In one aspect processor comprises at least one of a CPU processor gate array hardware logic memory elements and or hardware executing software. The processor operates to control the operation of the device so that applications executing at the device can be bound to the most desirable radio. In one implementation the processor is configured to execute computer readable instructions related to performing any of a plurality of functions. For example the processor operates to analyze information received or communicated from the device to effectuate intelligent radio selection. In another aspect the processor operates to generate information that can be utilized by the memory radio component application layer component socket layer component and or connectivity engine component to effectuate intelligent radio selection.

The radio component comprises hardware and or a processor executing software that is configured to provide a plurality of radios interfaces that can be used to interface the device with a plurality of external entities such as external communication networks using a plurality of radio channels . For instance radio component provides radios interfaces to communicate using Cellular WiFi Bluetooth or any other technologies to communicate with communication networks using the radio channels .

The application layer component comprises hardware and or a processor executing software that is configured to store and or execute one or more applications on the device . In one implementation the application layer component is configured to allow applications to initiate networking function calls to request networking services such as requesting connection to a radio interface for the purpose of communicating with an external network or system.

The socket layer component comprises hardware and or a processor executing software that is configured to perform socket layer functions. In one implementation the socket layer functions comprise such functions as Connect Bind and Setsockopt . A Connect function operates to establish a connection between an application and a particular radio interface. For example the particular radio interface can be selected from the plurality of candidate radios provided by the radio component . In an aspect socket layer component is configured to perform a variety of socket layer functions or commands.

The connectivity engine component comprises hardware and or a processor executing software that is configured to perform an assessment of system resources to select a particular radio for use by an application. In various implementations the connectivity engine component is configured as a centralized radio controller to select the particular radio based on one or more of the following selection criteria.

The memory comprises RAM ROM EEPROM or any other type of memory device that operates to allow information to be stored and retrieved at the device . In one implementation the memory is configured to store computer readable instructions executed by processor . Memory may also be configured to store any of a plurality of other types of data including data generated by any of the processor radio component application layer component socket layer component and or connectivity engine component . Memory can be configured in a number of different configurations including as random access memory battery backed memory hard disk magnetic tape etc. Various features can also be implemented upon memory such as compression and automatic back up.

The memory is configured to store a pre load library and a networking library . In one implementation the networking library comprises the POSIX or Berkeley sockets application programming interface API that includes functions for developing applications in the C programming language that perform inter process communication most commonly for communications across a computer network. For example the POSIX API comprises functions such as Connect Bind and Setsockopt .

The pre load library is used to intercept socket calls from applications at the application layer . For example the pre load library comprises at least a subset of the API functions provided by the networking library and is linked into the execution environment at a higher priority than the networking library .

During operation the system configures the environment that a linker uses when the device first boots up. In one implementation the linker operates to check the environment for libraries to load before starting normal library linking. Typically the linker loads the networking library that provides the networking API. Applications use that interface to create and connect sockets to establish network communications. For example in one implementation the linker scans an application and its dependencies so everything is loaded into memory. The linker is configured to load the pre load library before other libraries and populates the look ups so libraries loaded subsequently are satisfied and can use the pre load library .

The pre load library comprises at least a subset of the API sockets that the networking library provides. When the application makes a networking function call to create or connect a socket this call is processed or intercepted by the pre load library . For example the application provides a function pointer for the Connect function with arguments or attributes such as an IP Address Destination and File Descriptor that are provided to the Connect function.

The pre load library then generates a request to a centralized radio control entity to choose the most appropriate network interface for the specified connection. For example the pre load library sends the request to the connectivity engine component to determine the appropriate radio to be used. After the appropriate radio is selected calls to the networking library sockets API are performed to complete the connection setup before control is returned to the pre load library . For example the connectivity engine component operates to call functions of the networking library to bind the radio that has been selected to the requesting application.

The connectivity engine component is configured to intelligently select a radio from the plurality of candidate radios in various ways. For example the connectivity engine component may be configured to select a radio using one or more of the above selection criteria. Once a radio is selected the connectivity engine component binds the radio to the application. For example in one implementation binding is performed by calling into the original networking library . The runtime linker provides an expert interface where it is possible to specify specific library identifiers and function identifiers and store this information. Thus functions at the connectivity engine component and the pre load library can easily access functions such as a Bind function in the networking library to bind the radio that has been selected to the application. A more detailed description of the operation of the device to provide intelligent radio selection is provided below.

In various implementations the intelligent radio selection system comprises a computer program product having one or more program instructions instructions or sets of codes stored or embodied on a computer readable medium. When the codes are executed by at least one processor for instance processor their execution causes the processor to control the device to provide the functions of the intelligent interface selection system described herein. For example the computer readable medium comprises a floppy disk CDROM memory card FLASH memory device RAM ROM or any other type of memory device or computer readable medium that interfaces to the device . In another aspect the sets of codes may be downloaded into the device from an external device or communication network resource. The sets of codes when executed operate to provide aspects of the intelligent interface selection system described herein.

At block an application is launched. The application may be a legacy or non legacy application that is part of the application layer component . For example the application may be a network browser that generates a networking function call to connect to a wireless network using a radio available at the radio component .

At block a pre load library is configured and loaded. For example the pre load library comprises a subset of the networking functions that are provided in the networking library typically used by applications to assess communication networks. The networking functions in the pre load library are configured to intercept networking function calls from applications executing at a device. For example the pre load library comprises POSIX socket functions that can be used to intercept socket calls by applications executing at the device . In one implementation the pre load library in stored in memory .

In one implementation the pre load library functions are configured to receive arguments passed from calling applications and use these arguments to generate a request to the connectivity engine component to select the radio best suited for the application s purpose.

At block the pre load library is linked into the execution environment. For example the processor links the pre load library into the execution environment at a higher priority than the networking library . Thus networking functions calls by applications will be intercepted and processed by functions in the pre load library and not processed by similar functions in the networking library .

At block a networking function call from the application is intercepted. For example the networking function call may be a POSIX socket function call such as the Connect function. The application generates the networking function call to connect to a radio to allow communication with external networks. Due to the linking of the pre load library into the execution environment at a higher priority than the networking library the networking function call is intercepted or processed by the functions in the pre load library .

At block the called function in the pre load library generates a selection request to the connectivity engine component to select the appropriate radio for use by the application. The request includes any information that is part of the selection criteria used by the connectivity engine component to select the appropriate radio for use by the application.

At block selection criteria are assessed. In one implementation the connectivity engine component operates to assess the selection criteria described above. For example the connectivity engine communicates with the radio component to assess radio metrics that are part of the selection criteria.

At block a radio is selected based on the assessment of the selection criteria. For example the connectivity engine component operates to select the radio that best matches the selection criteria.

At block the radio that has been selected is bound to the application. For example in one implementation the connectivity engine component calls a Bind function of the networking library to bind the radio that has been selected to the application. For example the connectivity engine component is aware of the networking library and how to access its functions directly without being intercepted by the pre load library .

In an optional operation the method proceeds to block where the connectivity engine component operates to perform periodic assessment of the selection criteria to determine if the current radio best matches the selection criteria. If it is determined after another assessment of the selection criteria that a radio other than the current radio best matches the selection criteria then the connectivity engine can destroy the connection as a means to trigger the application into restarting the connection to select a different radio for the new connection. Thus the optional operation allows the selection criteria to be periodically assessed to assure that the most appropriate radio is selected to conduct the desired communication.

Therefore the method provides intelligent radio selection for use with legacy and non legacy applications. It should be noted that the method is just one implementation and that the operations of the method may be rearranged or otherwise modified such that other implementations are possible.

The apparatus comprises a first module comprising means for intercepting a networking function call from an application desiring radio access which in an aspect comprises the pre load library .

The apparatus also comprises a second module comprising means for selecting a radio from a plurality of candidate radios based on selection criteria which in an aspect comprises the connectivity engine module .

The apparatus also comprises a third module comprising means for binding the radio to the application which in an aspect comprises the connectivity engine module .

In addition to intelligent interface selection the system operates to provide flow mobility as described below.

During operation an application at the device generates a connection request to communicate with a network resource. As discussed above the system performs an intelligent interface selection to satisfy the request. To provide aspects of flow mobility the system operate to dynamically generate a flow binding rule that specifies a particular communication interface selected from the interfaces to encapsulate packets for routing between a home agent and the device .

In conventional systems the IP flow binding is usually described in a 5 tuple comprising a source IP address destination IP address source port destination port and protocol. Thus this description is provided by the handset to the home agent and packets matching this description will be routed accordingly by the home agent . Unfortunately registering flows using the 5 tuple may not be bandwidth efficient since all the elements of the 5 tuple are transmitted even though the only tuple that changes may be the source port.

In various implementations the system operates to dynamically generate a flow binding rule when a connection is started so that a data flow can be transmitted over the most appropriate radio interface. For example in one implementation the system allocates an ephemeral port to be used by the application for network communications. The system then dynamically generates a flow binding rule based only on the ephemeral port which indicates that a particular data flow is to be associated with the ephemeral port and be transmitted on a particular radio interface. By utilizing only the ephemeral port in the binding rule it is not necessary to transmit the entire 5 tuple to the home agent which is more efficient than conventional systems since it saves transmission bandwidth.

In another implementation an IPv6 address is dynamically generated for the connection. For example a per connection IPv6 address belonging to the mobile node prefix is generated and assigned to the mobile IP address. Next a flow binding rule based only on the per connection IPv6 address is dynamically generated.

In either of the above cases the binding rule is then signaled to a Home Agent HA on the network . The HA operates to route packets to the device according to the binding rule. For example data packets sent from a correspondent node CN to the device are received at the HA and then routed to the device using the binding rule. The following methods describe aspects of flow mobility provided by the intelligent selection system.

At block a socket is created by an application. For example an application executing at the device creates a socket to receive a data flow from a network resource that is part of the network .

At block a networking function call from the application is intercepted. For example the networking function call may be a POSIX socket function call such as the Connect function. The application generates the networking function call to connect to a radio to allow communication with external networks. Due to the linking of the pre load library into the execution environment at a higher priority than the networking library the networking function call is intercepted or processed by the functions in the pre load library .

At block intelligent interface selection is performed to satisfy the networking function call. For example blocks to of the method are performed to select a radio interface for use by the application. Thus one of the interfaces provided by the device is selected for use by the application.

At block an ephemeral local port is allocated. In one implementation the connectivity engine operates to allocate an ephemeral local port to the application. For example an ephemeral i.e. short lived port is a transport protocol port for IP communications that is selected from a pre defined range. The allocation is temporary and only valid for the duration of the communication session. After completion of the communication session the port becomes available for reuse.

At block a flow binding rule is dynamically generated based only on the ephemeral port. In one implementation the connectivity engine operates to dynamically generate the binding rule based only on the allocated ephemeral local port.

At block the flow binding rule is signaled to a Home Agent associated with the device. For example the connectivity engine operates to transmit the flow binding rule to the home agent . The home agent then uses the flow binding rule to route flows the device using the appropriate radio interface.

Therefore the method provides flow mobility in an intelligent radio selection system. It should be noted that the method is just one implementation and that the operations of the method may be rearranged or otherwise modified such that other implementations are possible.

At block a socket is created by an application. For example an application executing at the device creates a socket to receive a data flow from a network resource that is part of the network .

At block a networking function call from the application is intercepted. For example the networking function call may be a POSIX socket function call such as the Connect function. The application generates the networking function call to connect to a radio to allow communication with external networks. Due to the linking of the pre load library into the execution environment at a higher priority than the networking library the networking function call is intercepted or processed by the functions in the pre load library .

At block intelligent interface selection is performed to satisfy the networking function call. For example blocks to of the method are performed to select a radio interface for use by the application. Thus one of the interfaces provided by the device are selected.

At block a per connection IPv6 address belonging to the mobile node prefix is generated. For example the per connection IPv6 address is generated by the connectivity engine .

At block the per connection IPv6 address is assigned to the mobile IP address. For example the assignment is performed by the connectivity engine .

At block a flow binding rule is dynamically generated based only on the per connection IPv6 address. In one implementation the connectivity engine operates to dynamically generate the binding rule based only on the per connection IPv6 address. This achieves efficient bandwidth utilization since other parameters such as port or destination address are not necessary and would consume processing resources of the home agent.

At block the flow binding rule is signaled to a Home Agent associated with the device. For example the connectivity engine operates to transmit the flow binding rule to the home agent . The home agent then uses the flow binding rule to route flows the device using the appropriate radio interface.

Therefore the method provides flow mobility in an intelligent radio selection system. It should be noted that the method is just one implementation and that the operations of the method may be rearranged or otherwise modified such that other implementations are possible.

Those of skill in the art would understand that information and signals may be represented using any of a variety of different technologies and techniques. For example data instructions commands information signals bits symbols and chips that may be referenced throughout the above description may be represented by voltages currents electromagnetic waves magnetic fields or particles optical fields or particles or any combination thereof.

Those of skill would further appreciate that the various illustrative logical blocks modules circuits and algorithm steps described in connection with the embodiments disclosed herein may be implemented as electronic hardware computer software or combinations of both. To clearly illustrate this interchangeability of hardware and software various illustrative components blocks modules circuits and steps have been described above generally in terms of their functionality. Whether such functionality is implemented as hardware or software depends upon the particular application and design constraints imposed on the overall system. Skilled artisans may implement the described functionality in varying ways for each particular application but such implementation decisions should not be interpreted as causing a departure from the scope of the exemplary embodiments of the invention.

The various illustrative logical blocks modules and circuits described in connection with the embodiments disclosed herein may be implemented or performed with a general purpose processor a Digital Signal Processor DSP an Application Specific Integrated Circuit ASIC a Field Programmable Gate Array FPGA or other programmable logic device discrete gate or transistor logic discrete hardware components or any combination thereof designed to perform the functions described herein. A general purpose processor may be a microprocessor but in the alternative the processor may be any conventional processor controller microcontroller or state machine. A processor may also be implemented as a combination of computing devices e.g. a combination of a DSP and a microprocessor a plurality of microprocessors one or more microprocessors in conjunction with a DSP core or any other such configuration.

The steps of a method or algorithm described in connection with the embodiments disclosed herein may be embodied directly in hardware in a software module executed by a processor or in a combination of the two. A software module may reside in Random Access Memory RAM flash memory Read Only Memory ROM Electrically Programmable ROM EPROM Electrically Erasable Programmable ROM EEPROM registers hard disk a removable disk a CD ROM or any other form of storage medium known in the art. An exemplary storage medium is coupled to the processor such that the processor can read information from and write information to the storage medium. In the alternative the storage medium may be integral to the processor. The processor and the storage medium may reside in an ASIC. The ASIC may reside in a user terminal. In the alternative the processor and the storage medium may reside as discrete components in a user terminal.

In one or more exemplary embodiments the functions described may be implemented in hardware software firmware or any combination thereof. If implemented in software the functions may be stored on or transmitted over as one or more instructions or code on a computer readable medium. Computer readable media includes both computer storage media and communication media including any medium that facilitates transfer of a computer program from one place to another. A storage media may be any available media that can be accessed by a computer. By way of example and not limitation such computer readable media can comprise RAM ROM EEPROM CD ROM or other optical disk storage magnetic disk storage or other magnetic storage devices or any other medium that can be used to carry or store desired program code in the form of instructions or data structures and that can be accessed by a computer. Also any connection is properly termed a computer readable medium. For example if the software is transmitted from a website server or other remote source using a coaxial cable fiber optic cable twisted pair digital subscriber line DSL or wireless technologies such as infrared radio and microwave then the coaxial cable fiber optic cable twisted pair DSL or wireless technologies such as infrared radio and microwave are included in the definition of medium. Disk and disc as used herein includes compact disc CD laser disc optical disc digital versatile disc DVD floppy disk and blu ray disc where disks usually reproduce data magnetically while discs reproduce data optically with lasers. Combinations of the above should also be included within the scope of computer readable media.

The previous description of the disclosed exemplary embodiments is provided to enable any person skilled in the art to make or use the invention. Various modifications to these exemplary embodiments will be readily apparent to those skilled in the art and the generic principles defined herein may be applied to other embodiments without departing from the spirit or scope of the invention. Thus the invention is not intended to be limited to the exemplary embodiments shown herein but is to be accorded the widest scope consistent with the principles and novel features disclosed herein.

