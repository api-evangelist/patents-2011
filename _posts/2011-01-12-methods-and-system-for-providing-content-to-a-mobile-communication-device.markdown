---

title: Methods and system for providing content to a mobile communication device
abstract: A method and server for facilitating the transmission of content to a mobile communication device connected to a host computer are provided. The method comprises: sending a content queue request to the mobile communication device from a web application running within a web browser; in response to sending the content queue request, receiving at the host computer a content queue from the mobile communication device, the content queue identifying one or more locations of remote servers associated with content; retrieving content, by the web application, in accordance with the one or more locations identified in the content queue; and sending the content from the host computer to the mobile communication device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08996662&OS=08996662&RS=08996662
owner: BlackBerry Limited
number: 08996662
owner_city: Waterloo, Ontario
owner_country: unknown
publication_date: 20110112
---
The present disclosure relates to content delivery systems and more particularly to a method and system for providing content from a content server to a mobile communication device.

Mobile devices may include applications for interacting with digital content. The digital content may include any information which is published or distributed in a digital form. The digital content may in various embodiments include video files audio files e books web pages images icons themes applications and or games. Other types of digital content are also possible.

Mobile devices such as mobile communication devices often permit digital content to be downloaded via wireless communication with one or more servers. For example Internet connected mobile communication devices may download digital content from one or more remote servers accessible through the Internet.

Obtaining content in this manner may in various systems be quite slow. Also in some situations the download of content in this manner may be costly since it results in the consumption of wireless bandwidth.

It will be noted that throughout the drawings and description similar features are identified by the same reference numerals.

The present disclosure describes a method for transmitting content to a device connected to a host computer. The method includes sending a content queue request to the device from a web application running within a web browser in response to sending the content queue request receiving at the host computer a content queue from the device the content queue identifying one or more locations of remote servers associated with content retrieving content by the web application in accordance with the one or more locations identified in the content queue and sending the content from the host computer to the device.

In another aspect the present disclosure describes a server. The server includes a memory storing a web application. The web application is configured to send a content queue request from the web application running within a web browser on a host computer to a device connected to the host computer in response to sending the content queue request receive at the host computer a content queue from the device the content queue identifying one or more locations of remote servers associated with content retrieve content in accordance with the one or more locations identified in the content queue and send the content from the host computer to the device.

In yet a further aspect the present disclosure describes a method for transmitting content to a device connected to a host computer. The method includes i receiving instructions through a web browser to download queued content and ii in response to receiving instructions to download queued content sending a request to the device from the web browser to obtain a content queue from the device the content queue identifying content which is stored on one or more remote servers receiving the content queue at the host computer retrieving by the host computer the content listed in the content queue from the one or more remote servers and transmitting the content from the host computer to the device.

Other example embodiments of the present application will be apparent to those of ordinary skill in the art from a review of the following detailed description in conjunction with the drawings.

Example embodiments of the present application are not limited to any particular operating system mobile device architecture server architecture or computer programming language.

In order to facilitate an understanding of one possible environment in which example embodiments described herein can operate reference is first made to which shows in block diagram form a communication system in which example embodiments of the present disclosure can be applied. The communication system includes a number of mobile communication devices which may be connected to the remainder of the system in any of several different ways. Accordingly several instances of mobile communication devices are depicted in employing different example ways of connecting to system . Mobile communication devices are connected to a wireless network which may include one or more of a Wireless Wide Area Network WWAN and a Wireless Local Area Network WLAN or other suitable network arrangements. In some example embodiments the mobile communication devices are configured to communicate over both the WWAN and WLAN and to roam between these networks. In some example embodiments the wireless network may include multiple WWANs and WLANs .

The WWAN may be implemented as any suitable wireless access network technology. By way of example but not limitation the WWAN may be implemented as a wireless network that includes a number of transceiver base stations one of which is shown in where each of the base stations provides wireless Radio Frequency RF coverage to a corresponding area or cell. The WWAN is typically operated by a mobile network service provider that provides subscription packages to users of the mobile communication devices . In some example embodiments the WWAN conforms to one or more of the following wireless network types Mobitex Radio Network DataTAC GSM Global System for Mobile Communication GPRS General Packet Radio System TDMA Time Division Multiple Access CDMA Code Division Multiple Access CDPD Cellular Digital Packet Data iDEN integrated Digital Enhanced Network EvDO Evolution Data Optimized CDMA2000 EDGE Enhanced Data rates for GSM Evolution UMTS Universal Mobile Telecommunication Systems HSPDA High Speed Downlink Packet Access IEEE 802.16e also referred to as Worldwide Interoperability for Microwave Access or WiMAX or various other networks. Although WWAN is described as a Wide Area network that term is intended herein also to incorporate wireless Metropolitan Area Networks WMAN and other similar technologies for providing coordinated service wirelessly over an area larger than that covered by typical WLANs.

The WWAN may further include a wireless network gateway which connects the mobile communication devices to transport facilities and through the transport facilities to a wireless connector system . Transport facilities may include one or more private networks or lines the public Internet a virtual private network or any other suitable network. The wireless connector system may be operated for example by an organization or enterprise such as a corporation university or governmental department which allows access to a network such as an internal or enterprise network and its resources or the wireless connector system may be operated by a mobile network provider. In some example embodiments the network may be realized using the Internet rather than an internal or enterprise network.

The wireless network gateway provides an interface between the wireless connector system and the WWAN which facilitates communication between the mobile communication devices and other devices not shown connected directly or indirectly to the WWAN . Accordingly communications sent via the mobile communication devices are transported via the WWAN and the wireless network gateway through transport facilities to the wireless connector system . Communications sent from the wireless connector system are received by the wireless network gateway and transported via the WWAN to the mobile communication devices .

The WLAN includes a wireless network which in some example embodiments conforms to IEEE 802.11x standards sometimes referred to as Wi Fi such as for example the IEEE 802.11a 802.11b and or 802.11g standard. Other communication protocols may be used for the WLAN in other example embodiments such as for example IEEE 802.11n IEEE 802.16e also referred to as Worldwide Interoperability for Microwave Access or WiMAX or IEEE 802.20 also referred to as Mobile Wireless Broadband Access . The WLAN includes one or more wireless RF Access Points AP one of which is shown in that collectively provide a WLAN coverage area.

The WLAN may be a personal network of the user an enterprise network or a hotspot offered by an Internet service provider ISP a mobile network provider or a property owner in a public or semi public area for example. The access points are connected to an access point AP interface which may connect to the wireless connector system directly for example if the access point is part of an enterprise WLAN in which the wireless connector system resides or indirectly via the transport facilities if the access point is a personal Wi Fi network or Wi Fi hotspot in which case a mechanism for securely connecting to the wireless connector system such as a virtual private network VPN may be used . The AP interface provides translation and routing services between the access points and the wireless connector system to facilitate communication directly or indirectly with the wireless connector system .

The wireless connector system may be implemented as one or more servers and is typically located behind a firewall . The wireless connector system manages communications including email communications to and from a set of managed mobile communication devices . The wireless connector system also provides administrative control and management capabilities over users and mobile communication devices which may connect to the wireless connector system .

The wireless connector system allows the mobile communication devices to access the network and connected resources and services such as a messaging server for example a Microsoft Exchange IBM Lotus Domino or Novell GroupWise email server and a content server for providing content such as Internet content or content from an organization s internal servers and application servers for implementing server based applications such as instant messaging IM applications to mobile communication devices .

The wireless connector system provides a secure exchange of data e.g. email messages personal information manager PIM data and IM data with the mobile communication devices . In some example embodiments communications between the wireless connector system and the mobile communication devices are encrypted. In some example embodiments communications are encrypted using a symmetric encryption key implemented using Advanced Encryption Standard AES or Triple Data Encryption Standard Triple DES encryption. Private encryption keys are generated in a secure two way authenticated environment and are used for both encryption and decryption of data. In some example embodiments the private encryption key is stored only in the user s mailbox on the messaging server and on the mobile communication device and can be regenerated by the user on mobile communication devices . Data sent to the mobile communication devices is encrypted by the wireless connector system using the private encryption key retrieved from the user s mailbox. The encrypted data when received on the mobile communication devices is decrypted using the private encryption key stored in memory. Similarly data sent to the wireless connector system from the mobile communication devices is encrypted using the private encryption key stored in the memory of the mobile communication device . The encrypted data when received on the wireless connector system is decrypted using the private encryption key retrieved from the user s mailbox.

The wireless network gateway is adapted to send data packets received from the mobile communication device over the WWAN to the wireless connector system . The wireless connector system then sends the data packets to the appropriate connection point such as the messaging server content server web based content queue download interface or application servers . Conversely the wireless connector system sends data packets received for example from the messaging server content server or application servers to the wireless network gateway which then transmit the data packets to the destination mobile communication device . The AP interfaces of the WLAN provide similar sending functions between the mobile communication device the wireless connector system and network connection point such as the messaging server content server and application server .

The network may include a private local area network metropolitan area network wide area network the public Internet or combinations thereof and may include virtual networks constructed using any of these alone or in combination.

A link may be provided for exchanging information between the mobile communication device and a host computer connected to a network such as the Internet. The link may include one or both of a physical interface and short range wireless communication interface. The physical interface may include one or combinations of an Ethernet connection Universal Serial Bus USB connection Firewire also known as an IEEE 1394 interface connection or other serial data connection via respective ports or interfaces of the mobile communication device and host computer . In one example embodiment the link is a USB connection to the mobile communication device . In at least some example embodiments the link is a Bluetooth connection.

The host computer has access to a web based content queue download interface through an Internet browser on the host computer . The Internet browser also known as a web browser on the host computer may access the web based content queue download interface by establishing a hypertext transfer protocol HTTP connection or hypertext transfer protocol secure HTTPS connection to the web based content queue download interface which is includes a web server accessible through the Internet. The web server includes memory which has stored thereon a web application for facilitating the download of content which has been queued for download on the device.

The web based content queue download interface may provide the web application to the Internet browser on the host computer . The web application facilitates the download of digital content to the device . More particularly content may be queued for download to the device by a user of the device . The web application uses the host computer s connection to the network to download content which has been queued for download to the device from one or more content servers .

The host computer typically connects to the network via a connection protocol which is typically cheaper than the connection protocol used to connect the device to the network. Accordingly by downloading content to the device using the host computer s connection rather than the wireless device s connection the cost of delivering the content to the device may be reduced.

Furthermore as will be explained in greater detail below by using a web application in order to facilitate the download of content to the device content may be downloaded to the device using most if not all host computers . By using a web application which operates in an Internet browser content may be downloaded to the device without having to install large software on the host computer .

Accordingly the web application permits content to be downloaded from a content server to a device connected to the host computer via the link . The web application is a web based client for end users which is described in greater detail below. In some example embodiments the web application may provide functions or features in addition to or instead of the ability to download queued to the device . In some example embodiments the web application may provide other device management functions. In such example embodiments the web application may also be referred to as a web based application management application.

The web application may be received for example by the host computer when the Internet browser on the host computer navigates to a location associated with the web based content queue download interface. For example the Internet browser may navigate to the web based content queue download interface using a uniform resource locator URL associated with the web based content queue download interface .

The content server is configured to deliver digital content to the host computer upon request by the host computer . The content server may in at least some example embodiments be a publicly accessible server which hosts digital content. The content server is in at least some example embodiments a web server which delivers content using the Hypertext Transfer Protocol HTTP or another suitable protocol over the World Wide Web. The content server may host one or more web pages or other digital content. The web pages may in at least some example embodiments provide an interface for accessing other digital content. For example the web pages may include one or more links to other content such as for example audio files images video files etc.

Accordingly the content server is configured to serve digital content. The digital content may in various example embodiments include video files audio files documents podcasts e books web pages images such as photographs icons themes applications and or games. Other types of digital content are also possible. The digital content may include any information which is published or distributed in a digital form.

The host computer typically includes a controller having at least one processor i.e. microprocessor for controlling its operation a communications subsystem connected to the processor for communicating with the communication system a display screen or monitor connected to the processor one or more user input devices such as a keyboard and mouse connected to the processor for sending user input signals to the processor in response to user inputs a memory or storage element connected to the processor such as a hard disk drive HDD RAM ROM and or other suitable memory connected to the processor and other suitable input and output devices as desired or required. The memory has data and instructions stored thereon for configuring the processor and host computer . Operating system software software applications and data used by the processor are stored in the memory. The software and data configure the operation of the host computer . Other features of the host computer for implementing the processes and functions described herein will be appreciated by persons ordinarily skilled in the art.

It will be appreciated that the above described communication system is provided for the purpose of illustration only and that the above described communication system includes one possible communication network configuration of a multitude of possible configurations for use with the mobile communication devices . The teachings of the present disclosure may be employed in connection with other types of networks and associated devices that are effective in implementing or facilitating wireless communication. Suitable variations of the communication system will be understood to a person of skill in the art and are intended to fall within the scope of the present disclosure.

Reference is now made to which illustrates a mobile communication device in which example embodiments described in the present disclosure can be applied. The mobile communication device is a two way communication device having at least data and possibly also voice communication capabilities and the capability to communicate with other computer systems for example via the Internet. Depending on the functionality provided by the mobile communication device in various example embodiments the mobile communications device may be a data communication device a multiple mode communication device configured for both data and voice communication a smartphone a mobile telephone or a PDA personal digital assistant enabled for wireless communication or a computer system with a wireless modem. The mobile communications device may also be referred to as a mobile device and in some cases as a device .

The mobile communication device includes a controller including at least one processor such as a microprocessor which controls the overall operation of the mobile communication device and a wireless communication subsystem for exchanging radio frequency signals with the wireless network . The processor interacts with the communication subsystem which performs communication functions. The processor interacts with additional device subsystems. In some example embodiments the mobile device may include a touchscreen display which includes a display screen such as a liquid crystal display LCD screen with a touch sensitive input surface or overlay connected to an electronic controller . The touch sensitive overlay and the electronic controller act as an input mechanism to provide a touch sensitive input device. The processor also interacts with the touch sensitive overlay via the electronic controller . In other example embodiments the display may not be a touchscreen display. Instead the mobile device may simply include a non touch display and one or more input mechanisms such as for example a depressible scroll wheel or other control keys.

The processor interacts with additional device subsystems including flash memory random access memory RAM read only memory ROM auxiliary input output I O subsystems data port such as serial data port such as a Universal Serial Bus USB data port speaker microphone control keys switch short range communication subsystem and other device subsystems generally designated as . Some of the subsystems shown in perform communication related functions whereas other subsystems may provide resident or on device functions.

The communication subsystem includes a receiver a transmitter and associated components such as one or more antenna elements and local oscillators LOs and a processing module such as a digital signal processor DSP . The antenna elements and may be embedded or internal to the mobile communication device and a single antenna may be shared by both receiver and transmitter as is known in the art. As will be apparent to those skilled in the field of communication the particular design of the communication subsystem depends on the wireless network in which the mobile communication device is intended to operate.

The mobile communication device may communicate with any one of a plurality of fixed transceiver base stations of the wireless network within its geographic coverage area. The mobile communication device may send and receive communication signals over the wireless network after a network registration or activation procedures have been completed. Signals received by the antenna through the wireless network are input to the receiver which may perform such common receiver functions as signal amplification frequency down conversion filtering channel selection etc. as well as analog to digital A D conversion. A D conversion of a received signal allows more complex communication functions such as demodulation and decoding to be performed in the DSP . In a similar manner signals to be transmitted are processed including modulation and encoding for example by the DSP . These DSP processed signals are input to the transmitter for digital to analog D A conversion frequency up conversion filtering amplification and transmission to the wireless network via the antenna . The DSP not only processes communication signals but may also provide for receiver and transmitter control. For example the gains applied to communication signals in the receiver and the transmitter may be adaptively controlled through automatic gain control algorithms implemented in the DSP .

The processor operates under stored program control and executes software modules stored in memory such as persistent memory for example in the flash memory . As illustrated in the software modules include operating system software software applications which include a download manager and in some example embodiments an Internet browser .

As will be explained in greater detail below the download manager maintains and accesses a content queue .

The content queue identifies one or more locations which are associated with content which is to be downloaded to the device. Accordingly the content queue tracks content which is to be downloaded to the device from a remote server such as the content server of .

The content is digital content such as for example video files audio files documents podcasts e books web pages images such as photographs icons themes applications and or games. Other types of digital content are also possible.

The location of the content in the content queue may for example a uniform resource locator URL which specifies a specific location at which the content is available. For example the content queue may list a location of a remote server such as a content server where the content is stored. The content queue may in at least some example embodiments specify a location of the content server and in some example embodiments a path and or filename of the content. The location of the content server may be specified in terms of a domain name or an IP address.

In some example embodiments the content may be part of a web feed. In such example embodiments the content queue may identify a location of the web feed. A web feed is a data format which is used for providing frequently updated content. The web feed is in at least some example embodiments syndicated through web syndication. Web syndication is a form of syndication in which website material is made available to other sites. In at least some example embodiments the content queue may identify a location of a Really Simply Syndication RSS web feed. The RSS feed format is specified through the use of Extensible Markup Language XML . Accordingly in at least some example embodiments the content queue may specify the location of an XML feed.

In at least some example embodiments the web feed may be a podcast. A podcast is a series of digital media files such as audio or video files which are released episodically. Accordingly in at least some example embodiments content queue identifies the location of a podcast.

In at least some embodiments the web feed contains a location of digital content which is included in the web feed. For example where the web feed is a podcast the web feed may identify locations at which the audio or video files in the podcast are stored.

In at least some example embodiments the content queue may also include information about previously downloaded content. For example where the content queue includes a location of a web feed the content queue may also include information regarding the last download of content from that web feed. By way of example the content queue may specify any one or more of a list of all content downloaded from the web feed an identification of the last content downloaded from the web feed or a date and or time when a download from the web feed was last attempted. In at least some example embodiments the information regarding the last download of content may be specified in terms of a publication date and time of the last content downloaded from the web feed. For example where the web feed is a podcast the information may specify the publication date and time of the last audio file downloaded from that podcast to the device .

As will be explained in greater detail below the information regarding the last download of content may be used by a web application to reduce the likelihood that the same content is not repeatedly downloaded to the device .

In at least some example embodiments the download manager may include an API application programming interface not shown which permits other applications on the device to access the content queue. The API may allow other applications to manage the content queue. For example the API may allow other applications to add content to the content queue. In at least some example embodiments content may be added to the content queue by adding the location of the content to the content queue. In at least some example embodiments when content is added to the queue the content is added at the end of the queue. That is when the API receives a command to add content located at a specified location to the content queue the API may add the specified location to the end of the queue. When the location of content is added to the content queue further information about the content may also be added to the content queue. For example an identifier such as a name of the content may be downloaded. Similarly a file size of the content may be added to the content queue. In some example embodiments the location of the content may be added to the content queue together with a timestamp. The timestamp may indicate the date and time when the location of the content was added to the content queue.

In some example embodiments the API may allow other applications to remove content from the content queue. For example content may be removed from the content queue by removing the location of that content from the content queue and in at least some example embodiments by removing any further information about the content from the content queue.

In some example embodiments the API may allow other applications to alter the order of the content queue. That is the API may allow other applications to increase or decrease the position of content in the queue relative to the position of other content in the queue. In at least some example embodiments the order of the content queue may determine the order in which content in the content queue will be downloaded.

The download manager in at least some example embodiments includes a graphical user interface for managing the content queue. The graphical user interface may display interface elements such buttons text boxes hyperlinks drop down lists list boxes combo boxes check boxes radio buttons and or datagrids which allow a user to input commands to the download manager. For example the graphical user interface may include one or more interface elements for adding content to the content queue. That is a user may interact with an input mechanism associated with the device to activate an interface element and input an instruction to add content to the content queue.

When the download manager receives a command to add content to the content queue through the graphical user interface the download manager may add content in a manner similar to the manner in which content is added to the content queue if the command is received through the API. That is if the download manager receives a command to add content located at a specified location to the content queue the download manager may add the specified location to the end of the queue. As discussed previously when the location of content is added to the content queue further information about the content may also be added to the content queue. For example an identifier such as a name of the content may be added. Similarly a file size of the content may be added to the content queue. In some example embodiments the location of the content may be added to the content queue together with a timestamp. The timestamp may indicate the date and time when the location of the content was added to the content queue.

The graphical user interface of the download manager may also include one or more interface elements for removing content from the content queue. For example in at least some example embodiments the graphical user interface may be configured to display a list of content in the content queue. The list may in some example embodiments include all content in the content queue. In some example embodiments the content queue may be too large to permit displaying the complete contents of the content queue on a single page. In such example embodiments the contents of the content queue may be split so that only a portion of the content queue is displayed at any given time. The list may also display an interface element which permits a user to select any of the content to be removed from the content queue. For example a user may interact with an input mechanism associated with the device to input an instruction to remove content from the content queue.

The graphical user interface of the download manager may also include one or more interface elements for altering the order of content in the content queue. For example in at least some example embodiments the graphical user interface may display the list of content in the content queue together with user interface elements which permit a user to increase or decrease the position of content in the content queue relative to the position of other content in the content queue. A user of the device may interact with an input mechanism associated with the device to input an instruction to alter the order of content in the content queue.

In at least some example embodiments the software modules of the device include an Internet browser . The Internet browser may also be referred to as a web browser. The Internet browser is configured for retrieving and presenting content on the World Wide Web. The content which may be retrieved by the Internet browser may be a web page image video or other type of content.

In at least some example embodiments the Internet browser is configured to accept instructions via an input mechanism of the device to add content to the content queue. For example in some example embodiments the Internet browser may display an interface element on the display of the device which permits a user to input instructions to add content to the content queue. In response to receiving instructions to add content to the content queue the Internet browser may add content to the content queue. In at least some example embodiments the Internet browser may interact with the download manager to add content to the content queue. For example the Internet browser may access the API of the download manager to input instructions to the download manager to add content to the content queue.

In some example embodiments the download manager may be a standalone software application. In other example embodiments the download manager may be a software module including in another program or application. For example in at least some example embodiments the download manager may be included in the Internet browser . In some example embodiments the functions performed by the above identified applications may be realized as a plurality of independent elements rather than a single integrated element and any one or more of these elements may be implemented as parts of other software applications.

In other example embodiments the functions described with reference to the download manager may be split into multiple applications or modules each performing a subset of the functions of the download manager.

The software modules or parts thereof may be temporarily loaded into volatile memory such as the RAM . The RAM is used for storing runtime data variables and other types of data or information as will be apparent to those skilled in the art. Although specific functions are described for various types of memory this is merely one example and those skilled in the art will appreciate that a different assignment of functions to types of memory could also be used.

The software applications may include a range of other applications including for example an address book application a messaging application a calendar application and or a notepad application. In some example embodiments the software applications include an email message application a push content viewing application a voice communication i.e. telephony application a map application and a media player application. Each of the software applications may include layout information defining the placement of particular fields and graphic elements e.g. text fields input fields icons etc. in the user interface i.e. the display device according to the application.

In some example embodiments the auxiliary input output I O subsystems may include an external communication link or interface for example an Ethernet connection. The mobile communication device may include other wireless communication interfaces for communicating with other types of wireless networks for example a wireless network such as an orthogonal frequency division multiplexed OFDM network or a GPS transceiver for communicating with a GPS satellite network not shown . The auxiliary I O subsystems may include a vibrator for providing vibratory notifications in response to various events on the mobile communication device such as receipt of an electronic communication or incoming phone call or for other purposes such as haptic feedback touch feedback .

In some example embodiments the mobile communication device also includes a removable memory module typically including flash memory such as a removable memory card and a memory interface . Network access may be associated with a subscriber or user of the mobile communication device via the memory module which may be a Subscriber Identity Module SIM card for use in a GSM network or other type of memory card for use in the relevant wireless network type. The memory module is inserted in or connected to the memory card interface of the mobile communication device in order to operate in conjunction with the wireless network .

The mobile communication device stores data in an erasable persistent memory which in one example embodiment is the flash memory . In various example embodiments the data includes service data including information required by the mobile communication device to establish and maintain communication with the wireless network . The data may also include user application data such as email messages address book and contact information calendar and schedule information notepad documents image files and other commonly stored user information stored on the mobile communication device by its user and other data. The data stored in the persistent memory e.g. flash memory of the mobile communication device may be organized at least partially into a number of databases each containing data items of the same data type or associated with the same application. For example email messages contact records and task items may be stored in individual databases within the mobile device memory.

In some example embodiments the data includes the content queue . As noted previously the content queue identifies content which has been queued for download to the mobile device . As discussed above the content queued for download may be identified by a location associated with the content.

The serial data port may be used for synchronization with a user s host computer and for interacting with a web based application store application on the host computer .

In some example embodiments the mobile communication device is provided with a service routing API which provides an application with the ability to route traffic through a serial data i.e. USB or Bluetooth Bluetooth is a registered trademark of Bluetooth SIG Inc. connection to the host computer system using standard connectivity protocols. When a user connects their mobile communication device to the host computer system via a USB cable or Bluetooth connection traffic that was destined for the wireless network is automatically routed to the mobile communication device using the USB cable or Bluetooth connection. Similarly any traffic destined for the wireless network is automatically sent over the USB cable or Bluetooth connection to the host computer system for processing.

The mobile communication device also includes a battery as a power source which is typically one or more rechargeable batteries that may be charged for example through charging circuitry coupled to a battery interface such as the serial data port . The battery provides electrical power to at least some of the electrical circuitry in the mobile communication device and the battery interface provides a mechanical and electrical connection for the battery . The battery interface is coupled to a regulator not shown which provides power V to the circuitry of the mobile communication device .

The short range communication subsystem is an additional optional component which provides for communication between the mobile communication device and different systems or devices which need not necessarily be similar devices. For example the subsystem may include an infrared device and associated circuits and components or a wireless bus protocol compliant communication mechanism such as a Bluetooth communication module to provide for communication with similarly enabled systems and devices.

A predetermined set of applications that control basic device operations including data and possibly voice communication applications will normally be installed on the mobile communication device during or after manufacture. Additional applications and or upgrades to the operating system or software applications may also be loaded onto the mobile communication device through the wireless network the auxiliary I O subsystem the data port the short range communication subsystem or other suitable subsystem other wireless communication interfaces. The downloaded applications or code modules may be permanently installed for example written into the program memory i.e. the flash memory or written into and executed from the RAM for execution by the processor at runtime. Such flexibility in application installation increases the functionality of the mobile communication device and may provide enhanced on device functions communication related functions or both. For example secure communication applications may enable electronic commerce functions and other such financial transactions to be performed using the mobile communication device .

The mobile communication device may provide two principal modes of communication a data communication mode and an optional voice communication mode. In the data communication mode a received data signal such as a text message an email message or Web page download will be processed by the communication subsystem and input to the processor for further processing. For example a downloaded Web page may be further processed by a browser application or an email message may be processed by an email message application and output to the display . A user of the mobile communication device may also compose data items such as email messages for example using the touch sensitive overlay in conjunction with the display device and possibly the control buttons and or the auxiliary I O subsystems . These composed items may be transmitted through the communication subsystem over the wireless network .

In the voice communication mode the mobile communication device provides telephony functions and operates as a typical cellular phone. The overall operation is similar except that the received signals would be output to the speaker and signals for transmission would be generated by a transducer such as the microphone . The telephony functions are provided by a combination of software firmware i.e. the voice communication module and hardware i.e. the microphone the speaker and input devices . Alternative voice or audio I O subsystems such as a voice message recording subsystem may also be implemented on the mobile communication device . Although voice or audio signal output is typically accomplished primarily through the speaker the display device may also be used to provide an indication of the identity of a calling party duration of a voice call or other voice call related information.

Referring now to a flowchart of a method for adding content to a content queue is illustrated. One or more application or module stored in memory of the device may be configured to perform the method of . More particularly one or more application or module may contain computer readable instructions which cause the processor of the device to perform the method . In at least some example embodiments a download manager stored in memory of the device is configured to perform the method of .

First at a graphical user interface is displayed. The graphical user interface includes one or more interface elements for inputting instructions to add content to the content queue. The interface elements may for example include buttons text boxes hyperlinks drop down lists list boxes combo boxes check boxes radio buttons and or datagrids. In at least some example embodiments an Internet browser on the device may be configured to display the graphical user interface at .

Referring for a moment to example graphical user interface screens are illustrated. A first graphical user interface screen is illustrated in . The first graphical user interface screen is a screen which is provided in an Internet browser operating on the device . The first graphical user interface screen displays a web page. The first graphical user interface screen includes a hyperlink to digital content. In the example illustrated the hyperlink links to a document described as View BlackBerry Bold smartphone tips and tricks. In the example illustrated the digital content is a document in the portable document format PDF . However the digital content may be of a different type including for example video files audio files documents podcasts e books web pages images such as photographs icons themes applications and or games. Other types of digital content are also possible.

The first graphical user interface screen also includes a cursor which is movable on the graphical user interface screen in response to user input via an input mechanism of the device. In at least some example embodiments in response to the receipt of one or more predetermined user inputs via an input mechanism when the cursor is located on the hyperlink an interface element for inputting an instruction to add content to the content queue may be displayed on the display.

For example in some example embodiments when the cursor is located on the hyperlink and a predetermined input button is depressed an interface element which permits a user to add content to the content queue is displayed.

Referring to a second graphical user interface screen is illustrated. The second graphical user interface screen includes an interface element for adding content to the content queue. In the second graphical user interface screen the interface element is an item in an options menu . The options menu is displayed on the display in response to the receipt of the predetermined input when the cursor is located on the hyperlink .

A user may interact with an input mechanism associated with the device to activate the interface element and input an instruction to add content to the content queue.

Referring again to when the download manager receives a instruction to add content to the content queue through the graphical user interface as determined at at the download manager adds content to the content queue. That is if an instruction to add content to the content queue is received at a location associated with that content is added to the content queue. In at least some example embodiments the location may be a location where the content is stored. For example the location may be a URL associated with a remote server such as the content server of .

In at least some example embodiments the location may be the location of a web feed which identifies a location where the content is stored. That is in some example embodiments the content queue may not specify the location where all content in the content queue is stored. Rather for at least some content in the content queue the location may be the location of a web feed such as an RSS feed which lists the location where the content is stored.

As discussed previously when the location of content is added to the content queue further information about the content may also be added to the content queue. For example an identifier such as a name of the content may be added. Similarly a file size of the content may be added to the content queue. In some example embodiments the location of the content may be added to the content queue together with a timestamp. The timestamp may indicate the date and time when the location of the content was added to the content queue.

It will be appreciated that in at least some example embodiments the method of may be provided by a single application or module. For example the download manager may be configured to provide for all steps of the method . However in other example embodiments the step of displaying the graphical user interface with interface elements for adding content to the content queue may be provided by a separate application such as an Internet browser on the device. When that application receives an instruction via an input mechanism to add content to the content queue that application may send an instruction to an API associated with the download manager to instruct the download manager to add the content to the content queue.

As will be explained in greater detail below after content is added to the content queue when the device is connected to a host computer through the link a web application operating in an Internet browser on the host computer may access the content queue in order to download the content through the host computer s connection to the Internet. The content may be downloaded to the host computer and sent through the link to the device .

Referring now to a web application in accordance with one example embodiment of the present disclosure will now be described. The web application is a web based client interface which allows users to download content which has been queued for download to their mobile communication devices .

The web application provides users with the ability to perform a controlled set of self serve operations. Depending on the example embodiment the web application allows device users to i download content in the content queue of a device or ii remove content from a content queue of the device or iii add content to the content queue of the device or iv alter the order of the content queue. Other features and functions may be provided in addition to or instead of the features and functions listed above.

The web application may be accessed from a host computer having an Internet connection and any necessary communication component installed i.e. any communication interfaces and device communication stack components .

Referring still to the communications infrastructure utilized by the web application to communicate with the mobile communication device in accordance with one example embodiment of the present disclosure will now be described.

The web application may be implemented in Dynamic HTML Hypertext Markup Language DHTML via a series of web page s displayed in an Internet browser running on the computer . The DHTML of the web page s is provided by markup document s written in DHTML which are retrieved by an HTTP server or Internet server such as the web based content queue download interface in response to a direct or indirect request from the computer e.g. by an HTTP request to access or Go to a respective URL or web address . The Internet browser communicates with a mobile communication device via a device manager

The device manager in turn communicates with connected mobile communication devices via device drivers . The device drivers are in at least some example embodiments device drivers for a USB device. A USB Device is a device that uses USB as the physical transport layer for wireline communications with the host computer . USB devices are connected to a USB port on the host computer or a USB hub that is connected to a USB port on the host computer . USB device drivers are installed in the operating system of the computer in order to enable wireline communications to a USB device.

It will be appreciated however that other device drivers are possible for communicating with devices using other protocols. For example in some example embodiments a serial device driver may be provided for communicating with serial devices. Similarly in other example embodiments a Bluetooth device driver may be provided for communicating with Bluetooth enabled devices. A serial device is a device that uses RS 232 Recommended Standard 232 serial communications as the physical transport layer for wireline communications with the computer. Serial devices are connected to a serial port on the host computer for example through a cradle accessory. Serial device drivers are installed in the operating system of the computer in order to enable wireline communications to a serial device. Typically serial device drivers are provided with the operating system of the computer and need not be installed by the web application .

The device manager is a program or program module which manages application level wireline access to connected mobile devices and or possibly Bluetooth or other short range wireless access to connected mobile devices . The device manager provides a service routing application programming interface API which provides applications such as the web application with the ability to route traffic through the serial data connection for example USB or Bluetooth connection to the computer using standard connectivity protocols. The device manager also provides a number of device related communication services in addition to serial or Bluetooth data bypass connection functionality. The communication services provided to the web application by the device manager include the notification of device attach and detach events tracking of serial bypass Bluetooth statistics and device communications multiplexing.

The Internet browser is equipped with a scripting engine to run client side scripts such as a JavaScript scripting engine for running JavaScript within the DHTML web page s of the web application . As will be appreciated by persons skilled in the art JavaScript is a scripting language used in client side web document for example in web pages. The DHTML web pages include JavaScript code scripts which interact with the Document Object Model DOM of the DHTML web pages. The JavaScript engine of the Internet browser also known as JavaScript interpreter or JavaScript implementation is an interpreter that interprets JavaScript scripts embedded in or included from DHTML pages and executes the scripts accordingly. The Internet browser provides a runtime environment for the JavaScript engine and typically uses the public API application programming interface to create objects and methods through which the JavaScript scripts can interact with external processes and devices. Within the JavaScript runtime environment objects and data may be shared between the JavaScript engine and the other components of the Internet browser . In other example embodiments other scripting languages may be used such as for example Visual Basic for Applications VBA VBScript and Visual Basic .NET all from Microsoft Corporation.

The Internet browser may be Internet Explorer by Microsoft Corporation FireFox by Mozilla Corporation or any other Internet browser having the necessary capabilities for implementing the functions described herein. In one example embodiment the host computer runs a Windows operating system by Microsoft Corporation .

As will be appreciated by persons skilled in the art dynamic HTML is a collection of technologies used to create interactive and animated web sites by using a combination a static markup language such as HTML a client side scripting language such as JavaScript a presentation definition language such as Cascading Style Sheets CSS and the Document Object Model. A DHTML web page is any web page in which client side scripting changes variables of the presentation definition language which in turn affects the appearance and function of otherwise static HTML page content after the page has been fully loaded and during the viewing process. Thus a DHTML web page is dynamic in that its contents and function changes while the web page is being viewed not in its ability to generate a unique web page with each page load. This is in contrast to the broader concept of a dynamic web page which is any web page generated differently for each user load occurrence or specific variable values. This includes web pages created by client side or server side scripting where the content is determined prior to being viewed within the Internet browser . Dynamic web pages lack the ability to affect contents or function changes while a web page is being viewed.

To implement some of the functionality of the web application the Internet browser communicates with the connected mobile communication devices and has native communication with the connected mobile communication devices .

The Internet browser uses a Scripting language Capable Compatible SC device controller to interface the JavaScript engine of the Internet browser with a device communications stack the device manager and device driver of the mobile communication device . The SC device controller is a device controller which is compatible with and which provides communications services to a scripting engine of an Internet browser. In particular the SC device controller provides communications services to the JavaScript layer of the DHTML web page s including notifying of device attach and detach events sending and receiving data to connected devices. Any other communications services which require native control by the JavaScript layer of the DHTML web page s may be performed by the SC device controller . In some example embodiments for example embodiments in which the Internet browser is Internet Explorer the SC device controller is implemented in whole or in part using one or more ActiveX Controls. ActiveX controls are a Microsoft COM Component Object Model based technology for extending the functionality of Internet browsers with third party native code extensions.

In other example embodiments such as example embodiments in which the Internet browser does not support ActiveX controls such as for example FireFox the SC device controller may be implemented through a Netscape Plug in Application Programming Interface NPAPI plug in.

In either case the SC device controller and possibly the device manager may be a plug in which is used to extend the function of the Internet browser. The plug in may provide the functions of the SC device controller and in some example embodiments the device manager .

The SC device controller provides the DHTML web page content hosted in the Internet browser with a mechanism to interact with the mobile communication devices connected to the computer . The SC device controller e.g. ActiveX control is instantiated within the Internet browser process which exposes COM Component Object Model interfaces to permit the JavaScript scripting engine of the Internet browser to interact with connected devices and to perform other client side operations using native code.

Although the device drivers and device manager have been described as separate communication components within the device communications stack of the mobile communication device it will be appreciated by persons skilled in the art that the functions implemented by these communication components may be combined within a single communication component in other example embodiments and possibly combined with the SC device controller in some example embodiments.

The web application will be discussed in greater detail. Referring first to a method for obtaining and running the web application is illustrated. The method of includes steps which may be performed by the host computer and steps which may be performed by the web based content queue download interface . In this example embodiment the host computer specific steps may be provided for by the Internet browser . That is the Internet browser may contain instructions for causing a processor associated with the host computer to perform the host computer specific steps of the method . Similarly the web based content queue download interface may contain instructions for causing a processor associated with the web based content queue download interface to perform the server specific steps.

First at the Internet browser receives instructions to navigate to a web page. The instructions may be received for example by direct entry of a uniform resource locator URL associated with the web based content queue download interface into an address bar associated with the Internet browser. In other cases the instructions may be received by selection of a link to a URL associated with the web based content queue download interface . For example the URL may be selected from a bookmarked link. The URL is a predetermined URL which is assigned to the web based content queue download interface .

In response to receiving the instruction to navigate to the web page the Internet browser at navigates to the web page. That is the Internet browser may use the URL to establish a hypertext transfer protocol HTTP connection or hypertext transfer protocol secure HTTPS connection to the web based content queue download interface .

In response to the establishment of this connection at the web based application delivery server interface retrieves the web application from a memory storage associated with the web based content queue download interface . Next at the web based content queue download interface sends the web application to the host computer . The web based content queue download interface is received at and is executed by the Internet browser at .

When the application is executed it will perform one or more functions either immediately upon running or in response to the occurrence of one or more trigger conditions. The trigger conditions may be for example a selection via an input mechanism associated with the host computer of a selectable option to initiate one of the functions.

The web application may in various example embodiments be configured to provide for any one or more of the following features and functions i download content in the content queue of a device or ii remove content from a content queue of the device or iii add content to the content queue of the device or iv alter the order of the content queue. These functions will be described in greater detail below.

Referring now to in at least some example embodiments when the web application is executed for example at step of the web application automatically delivers a plug in and or a device driver to the host computer if the plug in and or device driver is not already installed on the host computer .

Accordingly illustrates a method for automatically delivering a plug in and or device driver . The method includes steps which may be performed by the host computer and steps which may be performed by a server which may be the web based content queue download interface .

More particularly the web application may contain instructions for causing a processor not shown associated with the host computer to perform the host computer specific steps. Similarly the web based content queue download interface may contain instructions for causing a processor associated associated with the content queue download interface to perform the server specific steps.

In at least some example embodiments the method may be triggered when the web application is executed. That is the method may be configured to automatically determine whether components needed to communicate with the device such as the plug in or device driver are installed. In other example embodiments the process may be triggered when a user attempts to initiate a process which would require device communications. For example the method may be triggered when the user selects an option to retrieve a content queue from the device.

When the method is triggered at the web application determines whether the plug in is installed on the host computer . Next at if the host computer does not already contain the plug in the plug in is requested. In some example embodiments if the host computer does not include the plug in the web application may automatically request the plug in from a remote server such as for example the web based content queue download interface .

In other example embodiments if the host computer does not include the plug in the web application may display an error message within the Internet browser or within a pop up window to advise the user that the plug in is not yet installed on the host computer . The error message may be presented together with a user selectable option permitting the user of the host computer to download the plug in by interacting with an input mechanism associated with the host computer . If a user selects the option to download the plug in the request may be sent at step .

The request is received at the server which may be the web based content queue download interface at . The server retrieves the plug in at and sends the plug in to the host computer at . The host computer receives the plug in and installs the plug in onto the host computer at .

The installation of the plug in onto the host computer may in some example embodiments occur automatically. In other example embodiments it may be user initiated. Whether the download and installation occurs automatically or whether it requires further user input may depend at least in part on the configuration of security settings on the host computer .

In a similar manner in some example embodiments the web application may be configured to determine whether the host computer contains the device driver which communicates with the device .

First at the web application determines whether the device driver is installed on the host computer . Next at step if the host computer does not already contain the device driver the device driver is requested. In some example embodiments if the host computer does not include the device driver the web application may automatically request the device driver from a remote server such as for example the web based content queue download interface .

In other example embodiments if the host computer does not include the device driver the web application may display an error message within the Internet browser or within a pop up window to advise the user that the device driver is not yet installed on the host computer . The error message may be presented together with a user selectable option permitting the user of the host computer to download the device driver by interacting with an input mechanism associated with the host computer . If a user selects the option to download the device driver the request may be sent at .

The request is received at the server which may be the web based content queue download interface at . The server retrieves the device driver at and sends the device driver to the host computer at . The host computer receives the device driver and installs the device driver onto the host computer at .

The installation of the device driver onto the host computer may in some example embodiments occur automatically. In other example embodiments it may be user initiated. Whether the download and installation occurs automatically or whether it requires further user input may depend at least in part on the configuration of security settings on the host computer .

In at least some example embodiments after the plug in and device driver are installed on the host computer the method continues to where the download of content from a content queue is performed. Specific methods of downloading content from a content queue will be described in greater detail below with reference to .

In at least some example embodiments the web application may be configured to retrieve a content queue from the device over a link and to retrieve content identified in the content queue from one or more content servers and to send such content through the link to the device .

Referring now to a method of transmitting content to a device is illustrated in flowchart form. The method may be performed in response to the occurrence of a trigger condition. For example in at least some embodiments the method is performed when the web application is executed. For example the method may be included in the step of . In some example embodiments the method may be performed after the host computer is configured to communicate with the device through the Internet browser. For example the method may be included in the step of .

The method includes steps which may be performed by the host computer steps which may be performed by a content server FIG. and steps which may be performed by the device .

More particularly the web application may contain instructions for causing a processor not shown associated with the host computer to perform the host computer specific steps. Similarly the web based content queue download interface may contain instructions for causing a processor associated with either of these servers to perform the server specific steps. The download manager may contain instructions for causing the processor associated with the device to perform the device specific steps.

First at in some example embodiments the web application displays one or more selectable interface elements within the Internet browser for inputting instructions to download queued content. The interface element may include for example a suitably labeled command button a hyperlink etc. A user may interact with the interface element using an input mechanism associated with the host computer. For example a navigational input mechanism such as a mouse or a touchscreen display may be used to select the interface element. The interface elements are displayed on in a graphical user interface on a display associated with the host computer.

It will be appreciated that in some example embodiments and or may be omitted. Instead the method of retrieving the content queue and retrieving the content identified in the content queue may be performed without a specific instruction being received. Instead the act of navigating to the URL associated with the web application may be interpreted as a request to download queued content and the remaining steps of the method may be performed. That is when a user uses the Internet browser to navigate to the web application the download of queued content may automatically be performed without the need for further user input.

Next at step the web application sends a content queue request to the device through the link . The content queue request is a message which requests that the device return a content queue . The content queue is a list of digital content which is to be downloaded to the device . The digital content may include for example video files audio files documents podcasts e books web pages images such as photographs icons themes applications and or games. Other types of digital content are also possible.

The content queue includes a location associated with the content. For example the location may identify the location on a remote server where the content is stored. The location may be a uniform resource locator URL which specifies the location where the content is available. That is the content queue may identify a location of content stored on a remote content server . The content queue may in at least some example embodiments specify a location of the content server and in some example embodiments a path and or filename of the content. The location of the content server may be specified in terms of a domain name or an IP address.

In some example embodiments the location may be the location of a web feed which identifies the location of the content. For example the location may be the location of an RSS feed an XML feed and or a podcast. In at least some example embodiments the web feed contains a location of digital content which is included in the web feed. For example where the web feed is a podcast the web feed may identify locations at which the audio or video files in the podcast are stored. Thus while the specific location where the content is stored may not be included in the content queue the location of the content may be determined by consulting the web feed located at the location specified in the content queue.

In at least some example embodiments the content queue may also include information about previously downloaded content. For example where the content queue includes a location of a web feed the content queue may also include information regarding the last download of content from that web feed. By way of example the content queue may specify any one or more of a list of all content downloaded from the web feed an identification of the last content downloaded from the web feed a date and or time when a download from the web feed was last attempted. In at least some example embodiments the information regarding the last download of content may be specified in terms of a publication date and time of the last content downloaded from the web feed. For example where the web feed is a podcast the information may specify the publication date and time of the last audio file downloaded from that podcast to the device .

The information regarding the last download of content reduces may be used by a web application to reduce the likelihood that the same content is repeatedly downloaded to the device .

The content queue request is received at the download manager of the device at . In response to receiving the content queue request the download manager retrieves the content queue at from memory of the device and sends at the content queue to the web application on the host computer through the link .

Next at in response to sending the content queue request the content queue is received at the host computer . The web application then retrieves the content in accordance with the locations in the content queue.

In some example embodiments where the content queue identifies the location at which content is stored at the web application sends a request to the content server located at that location. That is the web application requests that the content server provide the content located at the location specified in the content queue. The request may in at least some example embodiments be in the form of an HTTP request.

In other example embodiments not shown where the content queue identifies the location of a web feed which identifies locations at which content is stored at the web application may first request the web feed from the location in the content queue. The web application receives the web feed. The web feed identifies the location at which the content is stored. The web feed may for example specify one or more URL associated with the web feed. The web application may then identify locations of content from the web feed and retrieve the content from the locations identified from the web feed.

In some example embodiments where the content queue identifies the location of a web feed which identifies the locations at which content is stored the content at each of the locations in the web feed may be downloaded. For example where the web feed is a podcast all audio or video files in the podcast may be retrieved.

In other example embodiments only specific content may be selected from the web feed for download. For example previously downloaded content may not be selected for download. To prevent redundant downloading of content the content queue may also include information about previously downloaded content.

The information regarding previously downloaded content in the web feed may be used at step to determine which content in the web feed is new that is to determine which content has not been previously downloaded. In such example embodiments only content in the web feed which is determined to be new i.e. not previously downloaded will be downloaded. For example where the content queue identifies a location of a podcast the content queue may also identify the last audio or video file downloaded in the podcast. This may be specified for example by the publication date of the last audio file downloaded in the podcast. In such example embodiments only the new audio files in the podcast may be retrieved. Audio files in the podcast which were previously downloaded are not retrieved. That is in at least some example embodiments the only content in the podcast which is retrieved is content which was published subsequent to the last content downloaded from that podcast.

The request for content is received at each content server at and the content servers retrieve the requested content and send the content to the host computer at .

The content is received at the host computer at . The web application on the host computer then automatically sends the content to the device through the link at . That is the content is sent to the device in response to the content being received at the host computer without any further input from a user via an input mechanism.

While the steps of requesting content and receiving content have been illustrated in as occurring only once in practice these steps may be repeated many times. These steps may for example be repeated for each location of content specified in the content queue and or a web feed. Furthermore while only one content server is depicted in content may be retrieved from more than one content server.

In some example embodiments the content which is requested from the content server at may no longer be available on the content server . In such cases the host computer may send an error message to the device through the link to indicate that the content is no longer available.

After content is received at the host computer at and sent to the device at the content is received at the download manager on the device at . The download manager then stores the content on the device at .

In at least some example embodiments at some time after the receipt of content at or the request for content at the content queue may be updated at . For example where the content queue specifies the location at which the content is stored that location may be removed from the content queue for any downloaded content.

In example embodiments where the content queue specifies a web feed which identifies locations of content the content queue may be updated to include information about the content which was requested at and or received at . For example where the content queue includes a location of a web feed the content queue may be updated to include a list of all content which was requested step and or received at for each web feed in the content queue. In some example embodiments the content queue may be updated to include a list of the content in the web feed which was most recently requested or received for each web feed in the content queue. In some example embodiments the content queue may be updated to include a publication date and time of the last content downloaded from each web feed in the content queue.

As noted above with respect to the information about the content may be used to ensure that content in a web feed is not subsequently re downloaded.

In the example embodiment of the content queue is updated on the device . However in other example embodiments the content queue may be updated elsewhere. For example in some example embodiments the web application on the host computer updates the content queue and sends the updated content queue to the device over the link for storage.

Referring now to in at least some example embodiments the web application may provide a graphical user interface for managing the content queue. The graphical user interface may include one or more content queue management screens an example of which is illustrated in . The content queue management screen includes one or more interface elements which may be used for inputting instructions to the web application via an input mechanism not shown associated with the host computer . The input mechanism may for example be a navigational input device such as a mouse or a touchscreen.

The interface elements of the content queue management screen may in various example embodiments include buttons text boxes hyperlinks drop down lists list boxes combo boxes check boxes radio buttons and or datagrids which allow a user to input commands and instructions to the web application.

In at least some example embodiments the content queue management screen includes a list of content identifiers identifying at least some of the content in the content queue. The content identifiers in at least some example embodiments identify the location associated with the content in the content queue. In some example embodiments the content queue may be too large to permit displaying the complete contents of the content queue on a single page. In such example embodiments the contents of the content queue may be split so that only a portion of the content queue is displayed at any given time.

In some example embodiments the content queue management screen includes one or more interface elements for altering the order of content in the content queue. For example in the example embodiment t of the content queue management screen displays the list of content in the content queue together with user interface elements which permit a user to increase or decrease the position of content in the content queue relative to the position of other content in the content queue. In the example embodiment of the interface element is used to increase the position of content while the interface element is used to decrease the position of content. A user of the device may interact with the interface elements using an input mechanism associated with the computer to input an instruction to alter the order of content in the content queue.

In at least some example embodiments the content queue management screen includes one or more interface elements for removing content from the content queue. The interface elements may permit a user to select any of the content to be removed from the content queue. For example a user may interact with the interface element using an input mechanism associated with the host computer to input an instruction to remove content from the content queue.

In some example embodiments the content queue management screen includes one or more interface elements for adding content to the content queue. In the example embodiment illustrated the interface elements is a command button labeled Add Content. In at least some example embodiments a selection of the interface element will result in a further screen being displayed which allows a user to identify the location associated with the content to be added to the content queue. A user may interact with the interface element using an input mechanism associated with the host computer to input an instruction to add content to the content queue.

In some example embodiments the content queue management screen includes an interface element for initiating the download of content in the content queue. A user may interact with the interface element using an input mechanism associated with the host computer to input an instruction to download content associated with the content queue.

Referring now to a further method of transmitting content to a device is illustrated. The method is similar to the method of . However the method provides for further content queue management features which are not discussed with reference to . Furthermore in the method illustrated in the downloading of content is initiated in response to receiving an instruction at the host computer to download of content.

The method may be performed in response to the occurrence of a trigger condition. For example in at least some example embodiments the method is performed when the web application is executed. For example the method may be included in the step of . In some example embodiments the method may be performed after the host computer is configured to communicate with the device through the Internet browser. For example the method may be included in the step of .

The method include steps which may be performed by the host computer steps which may be performed by a content server FIG. and steps which may be performed by the device .

More particularly the web application may contain instructions for causing a processor not shown associated with the host computer to perform the host computer specific steps. Similarly the web based content queue download interface may contain instructions for causing a processor associated with either of these servers to perform the server specific steps. The download manager may contain instructions for causing the processor associated with the device to perform the device specific steps.

First at the web application sends a content queue request to the device through the link . This step is discussed in greater detail above with reference to .

The content queue request is received at the download manager of the device at . In response to receiving the content queue request the download manager retrieves the content queue at from memory of the device and sends at the content queue to the web application on the host computer through the link .

Next at in response to sending the content queue request the content queue is received at the host computer .

In at least some example embodiments at the web application displays the contents of the content queue on a display associated with the host computer. The web application may also display one or more selectable interface elements on the display associated with the host computer at . The interface elements may each be associated with one or more of the following instructions an instruction to add content to the content queue an instruction to remove content from the content queue an instruction to vary the order of the content queue and or an instruction to download content associated with the content queue.

The steps and of displaying the content of the content queue and displaying selectable interface elements for inputting instructions to the web application may in at least some example embodiments be performed by displaying a content queue management screen similar to the content queue management screen illustrated in .

Next at step instructions are received at the web application through an input mechanism associated with the host computer . That is the instructions may be received when the input mechanism is used to engage an interface element displayed in the screen .

If the instruction is an instruction to add content as determined at then at the web application adds the content to the queue. That is a location associated with the content may be added to the content queue. The location may for example be a location of a remote server such as a content server where the content is stored. In some example embodiments the location may be a location of a web feed which identifies the locations of content included in that web feed.

If the instruction is an instruction to remove specified content as determined at then at web application removes the specified content from the content queue.

If the instruction is an instruction to vary the order of content in the content queue as determined at then at the web application varies the order of the content queue. The order of the content queue may in at least some example embodiments determine the order that content associated with the content queue will be downloaded. Content which is ranked higher in the content queue will be downloaded before content which is ranked relatively lower in the content queue.

In at least some example embodiments not shown where the order or contents of the content queue are varied the updated content queue may be sent to the device over the link .

If the instruction is an instruction to download queued content as determined at step then the web application may download the content in the content queue in the manner described in greater detail above with reference to . More particularly the steps and discussed above with reference to may be performed in order to retrieve the content associated with the content queue from one or more content servers and send the retrieved content to the device where it is stored.

In will be appreciated that in some example embodiments many of the features described above with respect to the web application may instead be provided by the plug in or by another software component or module on the host computer

Furthermore in some example embodiments the web application may be supported by a back end server such as for example the web based content queue download interface . In such example embodiments one or more of the functions described above with reference to the host computer may be performed on the back end server. That is the web application running on the host computer may communicate with the back end server where at least some of the processing is performed.

In accordance with further example embodiments of the present disclosure there is provided apparatus such as a data processing system e.g. computer and or server for implementing the methods described herein a computer program product including a computer readable medium having stored thereon computer program instructions for implementing the methods described herein on a suitable data processing system as well as a computer data signal having program instructions recorded therein for practising the methods of the present disclosure on a suitable data processing system.

In accordance with further example embodiments of the present disclosure there are provided a computer program product including a computer readable medium having stored thereon computer executable instructions including instructions for practising the methods of the present disclosure.

The term computer readable medium as used herein means any medium which can store instructions for use by or execution by a computer or other computing device including but not limited to a portable computer diskette a hard disk drive HDD a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or flash memory an optical disc such as a Compact Disc CD Digital Versatile Disc DVD or Blu ray Disc and a solid state storage device e.g. NAND flash or synchronous dynamic RAM SDRAM .

The example embodiments of the present disclosure described above are intended to be examples only. Those of skill in the art may effect alterations modifications and variations to the particular embodiments without departing from the intended scope of the present disclosure. In particular features from one or more of the above described example embodiments may be selected to create alternate example embodiments included of a sub combination of features which may not be explicitly described above. In addition features from one or more of the above described example embodiments may be selected and combined to create alternate example embodiments included of a combination of features which may not be explicitly described above. Features suitable for such combinations and sub combinations would be readily apparent to persons skilled in the art upon review of the present disclosure as a whole. The subject matter described herein and in the recited claims intends to cover and embrace all suitable changes in technology.

