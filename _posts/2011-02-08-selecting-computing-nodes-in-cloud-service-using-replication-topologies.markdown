---

title: Selecting computing nodes in cloud service using replication topologies
abstract: A cloud statistics server generates statistics for a cloud service based on an identified data item and an identified operation. The cloud service may include various computing nodes and storage nodes. The cloud statistics may include expected completion times for the identified operation and the identified data item with respect to each of the computing nodes. A computing node may be selected to execute the identified operation based on the expected completion times. The generated statistics may be generated by the cloud statistics server using a network topology associated with the data item that is based on the latencies or expected transfer times between the various storage nodes and computing nodes, and a replication strategy used by the cloud service. The topology may be implemented as a directed graph with edge weights corresponding to expected transfer times between each node.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09110724&OS=09110724&RS=09110724
owner: MICROSOFT TECHNOLOGY LICENSING, LLC
number: 09110724
owner_city: Redmond
owner_country: US
publication_date: 20110208
---
Existing cloud services provide developers storage services with simple data centric interfaces to store and retrieve data items. Behind such simple interfaces these services use complex machinery to ensure that data is available and persistent in the face of network and node failures. As a result developers can focus on application functionality without having to reason about complex failure scenarios.

Unfortunately this simplicity comes at a cost as applications have little or no information regarding the location of data items in the network. Without this information applications cannot optimize their execution by moving computation closer to the data items data items closer to users or related data items closer to one another. These kinds of optimizations can be crucial for applications executing across different data centers where network latencies can be very high as well as within hierarchical data center networks where bandwidth can be limited .

Current solutions involve guesswork. For example the cloud service may determine a location for the storage of a data item for an application by predicting the future access patterns of the application based on past history. This approach can be expensive and counter productive since the application typically has more accurate information than the cloud about its own future behavior. In addition without input from the application the cloud service can optimize only simple aggregates of low level metrics such as bandwidth usage.

A cloud statistics server is provided that generates statistics for a cloud service based on an identified data item and an identified operation. The cloud service may include various computing nodes and storage nodes. The cloud statistics may include expected completion times for the identified operation and the identified data item with respect to each of the computing nodes. A computing node may then be selected to execute the identified operation based on the expected completion times. The generated statistics may be generated by the cloud statistics server using a network topology associated with the data item that is based on the latencies or expected transfer times between the various storage nodes and computing nodes and a replication strategy used by the cloud service. The topology may be implemented as a directed graph with edge weights corresponding to expected transfer times between each node.

In an implementation an identifier of a data item and an identifier of an operation are received at a computing device. The data item is stored by a cloud service. A topology is requested from the cloud service using the identifier of a data item. The topology is received from the cloud service by the computing device. The topology identifies one or more storage nodes from the plurality of storage nodes used to store the identified data item and a replication strategy used by the identified storage node s . For each computing node of a subset of the plurality of computing nodes an expected completion time for the computing node to complete the identified operation on the identified data item is determined given the replication strategy used by the identified storage node s . A minimum expected completion time is determined and is provided. An identifier of the computing node associated with the determined minimum expected completion time is provided.

In an implementation an identifier of an operation an identifier of a data item and a time constraint are received. The data item is stored in a cloud service. A topology is requested and received from the cloud service by the computing device using the identifier of a data item. The topology identifies one or more storage nodes used to store the identified data item and a replication strategy used by the storage node s . The replication strategy includes one or more expected transfer times associated with each of the identified storage nodes and the computing nodes. The expected transfer times associated with each computing node and the identified storage node s are combined according to the replication strategy to generate an expected completion time for each computing node. One or more computing nodes with an expected completion time that is less than the time constraint are determined. Identifiers of the determined computing nodes are provided.

This summary is provided to introduce a selection of concepts in a simplified form that are further described below in the detailed description. This summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

In some implementations a client device may include a desktop personal computer workstation laptop PDA cell phone or any WAP enabled device or any other computing device capable of interfacing directly or indirectly with the network . A client device may be implemented using a general purpose computing device such as that described with respect to for example. While only one client device is shown it is for illustrative purposes only there is no limit to the number of client devices that may be supported.

The cloud service may provide distributed data storage and data processing services to the client device . The cloud service may be implemented using a variety of cloud computing systems such as AZURE by MICROSOFT. Other cloud services may be used.

The cloud service may include a plurality of computing nodes i.e. computing nodes and and a plurality of storage nodes i.e. storage nodes and . The computing nodes may provide computation services to the client device . Similarly the storage nodes may provide storage services for one or more data items to the client device . Each of the computing nodes and the storage nodes may be implemented using one or more general purpose computing devices such as that described with respect to for example. While only three computing nodes and six storage nodes are shown it is for illustrative purposes only there is no minimum or maximum number of computing nodes and storage nodes that may be supported.

The cloud service provides an abstraction of the various computing nodes and storage nodes that perform the storage and data processing services for the client device . Thus a user of the client device typically may not know the particular computing nodes and storage nodes that are providing the services to the client device . Moreover the client devices are typically not aware of the geographical locations of the nodes that provide services to the client devices how the various nodes are connected to one another and the replication strategies used by the nodes protect the data.

To provide redundancy and protect the integrity of the data items stored by the storage nodes the cloud service may implement one or more replication strategies. The replication strategies may include caching synchronous mirroring asynchronous mirroring erasure coding and striping for example. Other replication strategies may also be used.

The client device may execute an application or more than one application. The application may be a software program that uses one or more services provided by the cloud service . The application may include a variety of applications including email applications file sharing applications and social networking applications for example. While only one application is shown it is for illustrative purposes only there is no limit to the number of applications that may be supported. Moreover while the application is shown as part of the client device in some implementations the application may also be implemented as part of the cloud service . For example in some implementations the application may be implemented as part of a gateway or load balancing node associated with the cloud service .

The application may request the performance of one or more operations by the cloud service . The application may request the performance of an operation by providing an operation identifier of the operation to the cloud service . The operations may include update operations and read operations. Other operations may be supported.

In some implementations the application may further include a data item identifier of a data item along with the operation identifier . For example where the identified operation is a read operation or an update operation the data item identifier may identify the data item e.g. a file to read or update.

The environment may further include a cloud statistics server . The cloud statistics server may expose an application programming interface that the application may use to request one or more cloud statistics using the data item identifier and or the operation identifier . In some implementations the cloud statistics may identify an expected computing time or a minimum computing time for the identified operation to be completed by the cloud service . The cloud statistics may further identify a computing node that is capable of performing the identified operation within the expected or minimum computing time. Other cloud statistics may be supported. The application may then select or cause a computing node to perform the identified operation based on the cloud statistics .

In some implementations the cloud statistics server may generate cloud statistics based on one or more constraints provided by the application . The constraints may include a minimum completion time for an identified operation or a sequence of identified operations. For example the application may request cloud statistics that identify one or more computing nodes that can execute a particular sequence of read and update operations in less than 40 milliseconds. Other constraints may also be supported.

In some implementations the cloud statistics server may generate the cloud statistics using a topology associated with the cloud service . The topology may describe or represent the relationship between the various computing nodes and the storage nodes of the cloud service as well as the replication strategy used by the cloud service . In some implementations the topology may be represented as a directed graph. The directed graph may include a node for one or more of the computing nodes and the storage nodes of the cloud service . The directed graph may further include edges between the nodes that represent the transmission of data items and or control messages between the storage nodes according to the replication strategy used by the cloud service .

For example is an illustration of a topology representing a synchronous mirroring replication strategy for update operations performed by a cloud server . In the synchronous mirroring replication strategy shown the storage node is a primary storage node in that data items are first written or updated at the storage node . The storage nodes and are secondary storage nodes in that the operations performed at the storage node are replicated on the storage nodes and . A computing node represents the computing nodes because any of the computing nodes may perform the write or update operation for the cloud service . Edges and represent the transmission of data items between the nodes and are illustrated using solid lines. Edges and represent the transmission of control messages and are illustrated using hashed lines.

According to the topology when the computing node receives a write or update operation to perform with respect to a data item the computing node transmits the data item to storage node as shown by the edge . The storage node stores the data item and transmits the data item in parallel to the storage nodes and for redundant storage as shown by the edges and . After storing the data item the storage nodes and send confirmation messages to the storage node as shown by edges and . Finally the storage node sends a confirmation message to the computing node as shown by edge .

In another example is an illustration of a topology representing synchronous mirroring replication strategy for read operations. Edge represents a control message and is illustrated using a hashed line and edge represents a transmission of a data item and is illustrated using a solid line. According to the topology the computing node may receive a request to perform a read operation on a data item and may send a request for the data item to the storage node as shown by the edge . The storage node may retrieve the data item and provide the data item to the computing node as shown by the edge . Because the storage nodes and are redundant storage nodes no data items are read from either of the storage nodes and

In yet another example is an illustration of a topology representing an erasure coding replication strategy for read operations. The edges and represent the transmission of control messages while the edges and represent the transmission of portions of a data item.

Erasure coding replication is a method for encoding a data item into n portions where only k of the n portions are needed to reconstruct the original data item. The erasure coding replication strategy in the implementation shown by the topology is an n 6 and k 4 replication strategy because the portions of the data item are stored on each of the six storage nodes and the data item may be read by the computing node using only four of the six portions. Thus the computing node may send read requests for the data item to each of the storage nodes in parallel using control messages as evidenced by the edges and . The computing node may then receive a portion of the data item from each of the storage nodes as evidenced by the edges and . However because of the erasure coding replication strategy used the computing node may begin reading or processing the data item after any four portions of the data item have been received.

In some implementations the clouds statistics server may request a topology by providing the identifier of a data item and or the identifier of an operation to the cloud service . The cloud service may then provide the requested topology to the cloud statistics server . The topology may identify the storage nodes associated with the identified data item and the replication strategy used by the identified storage nodes 

Alternatively or additionally the cloud statistics server may request the topology from a cache associated with the cloud statistics server . In some implementations the cloud statistics server and or the application may indicate to the cloud server which data items are likely to be read or updated by the application . The cloud service may then push or provide a new topology to the cache when the topology associated with an identified data item is changed.

The topologies for a cloud service may be generated by one or more users or administrators familiar with the replication strategies used by the various storage nodes and the operations supported by the computing nodes . Alternatively or additionally the topologies may be generated automatically by the cloud service . The topology may further include one or more weights associated with the edges in between nodes of the topology . In some implementations the weights may be expected transfer times associated with the transfer of data items or control messages between the nodes. For example an expected transfer time on an edge between the storage node and the storage node of 3 milliseconds may indicate that the exchange of a data item of some predetermined size between the storage node and the storage node may be expected to take 3 milliseconds. Other types of weights may be used. For example the weight on an edge may represent the cost of transferring data between the nodes connected by the edge.

Where the weights are expected transfer times the cloud statistics server may determine the cloud statistics for an identified data item and or operation using the expected transfer times on the edges connecting the one or more storage nodes associated with the topology and according to the replication strategy used. Depending on the replication strategy used these cloud statistics may be determined by combining the expected transfer times using one or more summation minimum or maximum operations. For the simplest case where the cloud statistics include a minimum expected completion time for an identified operation on an identified data item the cloud statistics server may for each computing node sum the expected transfer time of each edge traveled by the data item between the storage nodes associated with the topology and the computing node to determine an expected completion time for the data item with respect to the computing node 

For other cases depending on the topology and or the replication strategy other operations besides the summation operation may be used such as the maximum or minimum operations. For example for the topology illustrated in representing a synchronous mirroring replication strategy an expected completion time for an update operation on a data item can be determined by summing the expected transfer time associated with the computing node i.e. one of computing nodes and the storage node with the maximum of the expected transfer time between the storage node and the storage node and the expected transfer time between the storage node and the storage node . As indicated by the edges and the replication of the data item from the storage node and the storage node is performed in parallel thus the maximum operation may be used to select between the two expected transfer times for the calculation. In addition the expected completion time calculation may further include the summation of the expected transfer times associated with the transmission of confirmation messages i.e. edges and .

In another example for the topology illustrated in representing an erasure coding replication strategy an expected completion time for a read operation on a data item can be determined based on the fourth fastest expected transfer time between one of the storage nodes . As described above in the erasure coding replication strategy of the example implementation a data item may be read when four of the six portions of the data item have been received. Assuming that the storage nodes transmit their portions of the data item in parallel the expected completion time is dependent on the data transfer rate of the storage node whose portion of the data item is received fourth and the size of the data item. Thus the expected completion time may be computed by using a minimum operation on the four fastest expected transfer times.

The cloud statistics server may determine the expected completion time for each computing node as described above according to the topology and select the minimum expected completion time for the cloud statistics . The cloud statistics server may further include an indicator of the computing node with the minimum expected completion time. The application may then cause the identified operation to be performed at the identified computing node 

An identifier of a data item and an identifier of an operation are received at . The identifiers may be received from an application by the cloud statistics server . The data item may be stored in one or more storage nodes of the cloud service . The identified operation may be a read operation or an update operation on the identified data item for example. Other operations may also be supported.

A topology is requested at . The topology may be requested by the cloud statistics server from the cloud service using the identifier of the data item and or the identifier of an operation. Alternatively the topology may be requested from the cache associated with the cloud statistics server . In some implementations the topology may identify one or more storage nodes used to store the identified data item at the cloud service and a replication strategy used by the identified storage nodes. The replication strategy may include a synchronous mirroring replication strategy illustrated by the topology and the erasure coding replication strategy illustrated by the topology for example. Other replication strategies may also be supported.

The topology is received at . The topology may be received by the cloud statistics server from the cloud service . Alternatively the topology may be received by the cloud statistics server from the cache .

For each computing node an expected completion time for the computing node to complete the identified operation on the identified data item given the replication strategy used by the identified one or more storage nodes is determined at . The determination may be made by the cloud statistics server using the topology . In some implementations the replication strategy may include one or more expected transfer times associated with the identified one or more storage nodes and the plurality of computing nodes. The cloud statistics server may determine an expected completion time for the identified operation on the identified data item by a computing node by combining the expected transfer times associated with the computing node with one or more of the expected transfer times associated with the identified storage nodes according to the replication strategy. For example the expected transfer times may be combined using one or more summation minimum or maximum operations according to the topology .

A minimum expected completion time is determined at . The determination may be made by the cloud statistics server from the determined expected completion times for each computing node for example.

The determined minimum expected completion time and an identifier of the computing node associated with the minimum expected completion time are provided at . The determined minimum expected completion time and the identifier of the computing node associated with the minimum expected completion time may be provided by the cloud statistics server to the application as the cloud statistics for example. The application may use the cloud statistics to select a computing node to perform the identified operation on the identified data item. Other statistics may also be provided. For example the statistics may identify a computing node with the lowest expected computation cost rather than the minimum expected completion time.

An identifier of a data item an identifier of an operation and a time constraint are received at . The identifiers and time constraint may be received from an application by the cloud statistics server . The data item may be stored in one or more storage nodes of the cloud service . The identified operation may be a read operation or an update operation on the identified data item for example. In an implementation the time constraint may be a maximum completion time or a desired completion time for the identified operation.

For example an email application may want to learn which computing nodes of the cloud service are capable of retrieving a data item such as a user mailbox within a time period such as 50 milliseconds. In some implementations the identified operation and identified data item may comprise a sequence of identified operations and identified data items and the time constraint may be for the completion of the entire sequence of identified operations. For example the application may want to learn which computing node can retrieve and update multiple data items within a time period such as 30 milliseconds.

A topology is requested at . The topology may be requested by the cloud statistics server from the cloud service using the identifier of the data item and or the identifier of the operation for example. Alternatively the topology may be requested from a cache associated with the cloud statistics server . In some implementations the topology may identify one or more storage nodes used to store the identified data item at the cloud service and a replication strategy used by the identified storage nodes. The replication strategy may include one of more expected transfer times associated with the computing nodes and the identified storage nodes.

The topology is received at . In an implementation the topology may be received by the cloud statistics server from the cloud service . Alternatively the topology may be received by the cloud statistics server from the cache .

For each computing node an expected completion time is determined for the computing node by combining the expected transfer time associated with the computing node and the expected transfer times associated with one or more of the identified storage nodes according to the replication strategy at . The determination may be made by the cloud statistics server .

One or more computing nodes with expected completion times that are less than the time constraint are determined at . The one or more nodes may be determined by the cloud statistics server .

Identifiers of the determined one or more computing nodes are provided at . The determined identifiers may be provided to the application by the cloud statistics server . The application may then select a computing node of the cloud service to complete the identified operation.

Computing system may have additional features functionality. For example computing system may include additional storage removable and or non removable including but not limited to magnetic or optical disks or tape. Such additional storage is illustrated in by removable storage and non removable storage .

Computing system typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computing system and includes both volatile and non volatile media removable and non removable media.

Computer storage media include volatile and non volatile and removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Memory removable storage and non removable storage are all examples of computer storage media. Computer storage media include but are not limited to RAM ROM electrically erasable program read only memory EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computing system . Any such computer storage media may be part of computing system .

Computing system may contain communications connection s that allow the device to communicate with other devices. Computing system may also have input device s such as a keyboard mouse pen voice input device touch input device etc. Output device s such as a display speakers printer etc. may also be included. All these devices are well known in the art and need not be discussed at length here.

It should be understood that the various techniques described herein may be implemented in connection with hardware or software or where appropriate with a combination of both. Thus the methods and apparatus of the presently disclosed subject matter or certain aspects or portions thereof may take the form of program code i.e. instructions embodied in tangible media such as floppy diskettes CD ROMs hard drives or any other machine readable storage medium where when the program code is loaded into and executed by a machine such as a computer the machine becomes an apparatus for practicing the presently disclosed subject matter.

Although exemplary implementations may refer to utilizing aspects of the presently disclosed subject matter in the context of one or more stand alone computer systems the subject matter is not so limited but rather may be implemented in connection with any computing environment such as a network or distributed computing environment. Still further aspects of the presently disclosed subject matter may be implemented in or across a plurality of processing chips or devices and storage may similarly be effected across a plurality of devices. Such devices might include personal computers network servers and handheld devices for example.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

