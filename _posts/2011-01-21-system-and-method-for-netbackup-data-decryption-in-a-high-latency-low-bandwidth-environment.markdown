---

title: System and method for netbackup data decryption in a high latency low bandwidth environment
abstract: A system and method for efficient transfer of encrypted data over a low-bandwidth network. A backup server and a client computer are coupled to one another via a first network. The backup server is coupled to a remote data storage via another network, such as the Internet, also referred to as a cloud. The backup server encrypts received data for backup from the client computer. Cryptography segment and sub-segment sizes may be chosen that are aligned on a byte boundary with one another and with selected backup segment and sub-segment sizes used by backup software on the remote data storage. A selected cryptography algorithm has a property of allowing a given protected sub-segment with the cryptography sub-segment size to be decrypted by initially decrypting an immediate prior protected sub-segment that has the same cryptography sub-segment size. Therefore, the size of data transmitted via the cloud may be smaller than the cryptography segment size.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08713300&OS=08713300&RS=08713300
owner: Symantec Corporation
number: 08713300
owner_city: Mountain View
owner_country: US
publication_date: 20110121
---
This invention relates to the field of computer networks and more particularly to efficient transfer of encrypted data over a low bandwidth network.

As computer memory storage and data bandwidth increase so does the amount and complexity of data that businesses daily manage. A large portion of the data may include electronic documents announcements tasks discussion topics and so forth. Depending on the business value of this information access to certain information may be secure and private. The contents of information servers and end user systems may be backed up to a backup storage to prevent loss of data especially for data identified as crucial data. In such a case the dedicated server and storage subsystem may include a backup system. A backup system attempts to reduce the amount of data and time to backup data to protect a machine.

For an information technology IT administrator to centralize management of the corporate information and the computing support for employees and customers an IT administrator may utilize a datacenter. A datacenter is a centralized repository either physical or virtual for the storage management protection and dissemination of this corporate information. A datacenter may also be referred to as a server room or a server farm. However there may be times when an IT administrator chooses to avoid capital expenditure and leases one or more server computer systems on a short term or long term basis. The business may consume resources at a third party remote location as a service and pay only for resources actually consumed. Examples include educational classroom services demonstration of software to potential users or buyers website server applications data protection and so forth.

The type of computing described above may be referred to as cloud computing wherein dynamically scalable and often virtualized resources at a third party remote location is provisioned for use over a network such as the Internet. Cloud computing provides on demand procurement lowered financial cost and application mobility. For example application software and corresponding data may be stored at the remote location but the application may be accessible from a web browser. A cloud computing implementation of a software application allows a business to access the application through the Internet without knowledge of or control over the infrastructure supporting the application. The primary considerations for remote access include the remote access software and the network interface.

An IT administrator may develop a management system for data backup and data protection data recovery restore and restart archiving and long term retention and day to day processes and procedures necessary to manage a storage architecture. This management system may apply certain policies to the effective management of information. The management system may support a cloud plug in to enable writing backup data streams to the remote data storage location within the cloud computing system. These data streams are generally very large in order to minimize the catalog and tracking burden. In addition these data streams are typically encrypted for protection. High latency and low bandwidth properties are typical characteristics of a cloud computing system which includes a wide area network WAN . In such an environment data transfers for both backup and recovery operations may be slow and reduce the benefits of utilizing a cloud computing solution.

In view of the above improved systems and methods for efficient transfer of encrypted data over a low bandwidth network are desired.

In one embodiment a computing system comprises a backup server and a client computer coupled to one another via a network such as a local area network LAN . The backup server is coupled to remote data storage via another network such as the Internet. This other network may be referred to as a cloud. The remote data storage may comprise an archive store. When the client computer sends a backup request for selected data to the backup server the backup server encrypts the received data from the client computer. Cryptography segment and sub segment sizes may be chosen that are aligned on a byte boundary with one another and with selected backup segment and sub segment sizes. Therefore a beginning of each of the segments is aligned with the other segment. The backup segment and sub segment sizes may be used for transmission of data between the backup server and the remote data storage via the cloud in addition to being used by software on the remote backup storage. A selected cryptography algorithm may have a property of allowing a given encrypted sub segment with the cryptography sub segment size to be decrypted by utilizing an immediate prior encrypted sub segment that has the same cryptography sub segment size. For example a given 128 kilo byte KB cryptography segment may comprise 4 096 32 byte cryptography sub segments. A given 32 byte cryptography sub segment with an offset index of 7 may be decrypted by utilizing a second 32 byte cryptography sub segment with a prior offset index of 6 or the 32 byte cryptography sub segment immediately prior to the given 32 byte cryptography sub segment. This prior 32 byte cryptography sub segment which is encrypted itself may be used as a key to decrypt the given 32 byte cryptography sub segment. Therefore the entire 128 KB cryptography segment is not used for decrypting the given 32 byte cryptography sub segment.

After the encrypted data is sent to the remote data storage via the cloud at a later time the client computer may request to restore backed up data. If a portion of the requested data is smaller than the size of a cryptography segment such as a 128 KB cryptography segment then the remote data storage may send smaller sized blocks via the cloud. For example one or more blocks with a size of a backup sub segment such as a 1 KB size may be sent. The backup server may decrypt one or more encrypted sub segments such as the 32 byte sub segments within each of the backup sub segments such as the 1 KB sub segments. Then the decrypted data may be conveyed to the client computer.

These and other embodiments will be appreciated upon reference to the following description and accompanying drawings.

While the invention is susceptible to various modifications and alternative forms specific embodiments are shown by way of example in the drawings and are herein described in detail. It should be understood however that drawings and detailed description thereto are not intended to limit the invention to the particular form disclosed but on the contrary the invention is to cover all modifications equivalents and alternatives falling within the spirit and scope of the present invention as defined by the appended claims.

In the following description numerous specific details are set forth to provide a thorough understanding of the present invention. However one having ordinary skill in the art should recognize that the invention might be practiced without these specific details. In some instances well known circuits structures signals computer program instruction and techniques have not been shown in detail to avoid obscuring the present invention.

Various embodiments of a system and a method for efficient transfer of encrypted data over a low bandwidth network are described herein. Referring to a generalized block diagram illustrating one embodiment of a network architecture including a capability for efficiently transferring encrypted data over a low bandwidth network is shown. As shown the network architecture includes client computing systems interconnected through a local area network to one another and to a backup server . Network may include a variety of techniques including wireless connection direct local area network LAN connections wide area network WAN connections such as the Internet a router and others. Network may comprise one or more LANs that may also be wireless. Network may further include remote direct memory access RDMA hardware and or software transmission control protocol internet protocol TCP IP hardware and or software router repeaters switches grids and or others. Protocols such as Fibre Channel Fibre Channel over Ethernet FCoE iSCSI and so forth may be used in network .

Client computer systems are representative of any number of stationary or mobile computers such as desktop personal computers PCs servers server farms workstations laptops handheld computers servers personal digital assistants PDAs smart phones and so forth. Generally speaking client computer systems include one or more processors comprising one or more processor cores. Each processor core includes circuitry for executing instructions according to a predefined general purpose instruction set. For example the x86 instruction set architecture may be selected. Alternatively the Alpha PowerPC SPARC or any other general purpose instruction set architecture may be selected. The processor cores may access cache memory subsystems for data and computer program instructions. The cache subsystems may be coupled to a memory hierarchy comprising random access memory RAM and a storage device.

Each processor core and memory hierarchy within a client computer system may be connected to a network interface. In addition to hardware components each of the client computer systems may include a base operating system OS stored within the memory hierarchy. The base OS may be representative of any of a variety of operating systems such as for example MS DOS MS WINDOWS OS 2 UNIX Linux Solaris AIX DART or otherwise. As such the base OS may be operable to provide various services to the end user and provide a software framework operable to support the execution of various programs. Additionally each of the client computer systems may include a hypervisor used to support virtual machines VMs . As is well known to those skilled in the art virtualization may be used in desktops and servers to fully or partially decouple software such as an OS from a system s hardware.

The backup server may be coupled to a second network through a switch . The network may be the Internet or other outside network. Alternatively network may be coupled to network via one or more switches. Switch may utilize a protocol associated with both networks and . The network and the backup server may interface with a set of communications protocols used for the Internet such as the Transmission Control Protocol TCP and the Internet Protocol IP or TCP IP. Switch may be a TCP IP switch.

Storage devices may be used to store copies of data within the network architecture . Storage devices may include or be further coupled to several varieties of storage consisting of one or more hard disks tape drives server blades Solid State Disks SSDs or specialized devices and may include a variety of memory devices such as RAM Flash RAM MEMS Micro Electro Mechanical Systems storage battery backed RAM and or non volatile RAM NVRAM etc. Storage devices may be used to store copies of data stored on devices . Storage devices may comprise one or more of the memory devices listed for storage devices 

In one embodiment the remote shared storage servers in network architecture may create a copy of files on client computing systems to protect data. In addition a backup agent on client computing systems and or backup server may determine when data objects qualify to be archived. The servers within cloud services may be off site servers accessed via the Internet network . The remote shared storage servers may provide software and data to client computing systems on demand. Users of the client computing systems may have no knowledge of or control over the technology infrastructure within the cloud services . This may be referred to as cloud computing. In one embodiment cloud computing is Internet based computing. Simple examples include e mail accounts with a Web based e mail service like Hotmail Yahoo Mail or Gmail. The software and storage for the e mail accounts don t exist on the client computing systems but exist within the client services . By not owning a physical infrastructure such as an on site datacenter cloud computing customers avoid capital expenditure by renting usage from a third party provider.

A web service is typically an application programming interface API or Web API that is accessed via Hypertext Transfer Protocol HTTP and executed on a remote system such as servers and backup server hosting the requested service. A web service supports interoperable machine to machine interaction over a network. It has an interface described in a machine process format such as Web Services Description Language WSDL . Cloud architecture typically includes multiple cloud components communicating with each other over application programming interfaces such as web services.

Returning now to the backup server the backup server may include a backup application . This backup application or backup manager may comprise program instructions stored on the memory and executable by the processor to perform one or more backup operations. Backup operations may include creating partial or full backups e.g. on a computer system or from one computer system to another system performing restore functions e.g. partial or granular restore functions or full restore functions on a computer system or from one computer system to another computer system backup operations may also include other operations. Policies for backup and duplication operations within a lifecycle may be determined for data images. For example the policies may include determining a number of tiers in a tiered storage a type and a number of storage media a time duration for an image to be stored on a given storage medium the hours of the day to block from particular operations and so forth.

A backup system agent may assist the backup manager on backup server . The backup manager may be configured to create a volume image backup. In some embodiments the backup manager may receive user input directing the backup manager to create a volume image backup of a specific system. In some embodiments the backup manager may create a volume image backup of a specific system automatically e.g. the backup manager may be scheduled to perform regular backups of a specific system. As part of creating backups the backup manager may also create catalog metadata associated with the backup data.

The catalog metadata created by the backup manager during a backup operation may include at least one or more of the following a data name data size a fingerprint of the data a batch number as well as data type version number ownership permissions modification time backup segment and sub segment identifiers cryptography segment and sub segment identifiers error code etc. A batch number may be used to identify the particular backup operation in which an associated backup entry was created. Other forms of metadata and or identifiers will be apparent to those of ordinary skill in the art. The catalog metadata may be usable for restore browsing e.g. at a later time. For example the data layout of stored information in backup storage devices and archive stores may be stored in the catalog .

In one embodiment the backup server comprises a file system that operates as a special purpose database for the storage organization manipulation and retrieval of data. File system may provide access to data by operating as clients for a network protocol. Alternatively file system may be virtual and exist only as an access method for virtual data.

It is noted that in alternative embodiments the number and type of client computers and servers switches networks and shared storage is not limited to those shown in . At various times one or more clients may operate offline. In addition during operation individual client computer connection types may change as users connect disconnect and reconnect to network architecture .

Turning now to a generalized flow diagram illustrating one embodiment of a method for efficient backup operations is shown. The components embodied in network architecture may generally operate in accordance with method . It is noted for purposes of discussion the steps in this embodiment of method are described in sequential order. However some steps may occur in a different order than shown some steps may be performed concurrently some steps may be combined with other steps and some steps may be absent in another embodiment.

In block policies for backup and duplication operations are determined for data on client computing systems . As described earlier policies may include determining a number of tiers in a tiered storage a type and a number of storage media a time duration for an image to be stored on a given storage medium the hours of the day to block from particular operations the hours of the day to perform backup and duplication operations according to a schedule and so forth.

In block the backup segment and sub segment sizes are selected. These sizes may determine the amount of data transferred between the backup server and the cloud services . The ability to write very large backup segments to the cloud services may reduce metadata overhead support. In one embodiment the backup segment size may range from 1 KB to 256 KB. The backup sub segment size may be selected based on expected data sizes corresponding to restore requests. One of the client computing systems may send a restore request to the backup server . The backup server sends a corresponding request to the cloud services for the requested data. The requested data is conveyed from the cloud services to the backup server. In one embodiment the backup sub segment size may be the same size as the backup segment size. However data sizes corresponding to restore requests may be typically smaller than the amount of data backed up or archived. In another embodiment the backup sub segment size may range from 1 KB to 128 KB when the backup segment size is 256 KB.

Cryptography may be used to protect data being transferred between the backup server and the cloud services . Cryptography may be used to prevent data from being viewed or modified and to provide secure communication over otherwise insecure channels. For example cryptography may protect a user s identity prevent data from being altered and assure data originates from a particular party. Data may be encrypted using a selected cryptographic algorithm. The data may be transmitted in an encrypted state and later decrypted by an intended receiver. If a third party intercepts the encrypted data it may be difficult to decipher.

Cryptography may use symmetric encryption or asymmetric encryption. With symmetric encryption a secret key which may be a number a word or a string of random letters is applied to the text of a message to change the content in a particular way. With asymmetric encryption a key pair is used to protect data. A public key may be made freely available for sending data. Messages such as text binary files documents and so forth encrypted with a public key may be decrypted by applying a same selected cryptographic algorithm but with a matching private key. Similarly messages that are encrypted with the private key may be decrypted with the same algorithm and use of the public key.

In order to minimize an amount of cryptographic metadata to maintain data may not be padded during encryption. The size of the data and the size of the resulting cryptography segment do not increase due to padding. In addition when selecting a cryptographic algorithm selection criteria may include a property of allowing a given protected sub segment with the cryptography sub segment size to be decrypted by utilizing an immediate prior encrypted sub segment that has the same cryptography sub segment size. For example a given 128 KB cryptography segment may comprise 4 096 32 byte cryptography sub segments. A given 32 byte cryptography sub segment with an offset index of 7 may be decrypted by utilizing a prior second 32 byte cryptography sub segment with a prior offset index of 6. This prior 32 byte cryptography sub segment which is encrypted itself may be used as a key to decrypt the given 32 byte cryptography sub segment. Therefore the entire 128 KB cryptography segment is not used for decrypting the given 32 byte cryptography sub segment with the index of 7. In one embodiment the cryptographic algorithm named AES 256 CFB may be selected. This algorithm uses an Advanced Encryption Standard AES symmetric key encryption standard a cryptography segment size of 256 KB and a cipher feedback mode feature.

Returning to method in block the cryptography segment and sub segment sizes are determined so that the size values align with the backup segment and sub segment sizes. For example a 32 byte cryptography sub segment size may be selected. In addition a 256 KB cryptography segment size may be selected. These sizes align with one another on a byte boundary. Further for backup segment and sub segment sizes of 256 KB and 1 KB the cryptography sizes also are in alignment. In addition a beginning of each of the segments is aligned with the other segment. A beginning of the cryptography segment aligns with a beginning of the backup segment. In another embodiment the cryptography sizes and the backup sizes may not align. In such a case further calculations may be performed when encrypting decrypting and transferring data to and from the cloud services in order to access corresponding data. The further calculations may determine how many segments and sub segments of each type will be used during a respective operation. In block a cryptography algorithm with a property of decrypting at a level of cryptographic sub segments may be selected. An example of such a cryptography algorithm is the AES 256 CFB described above.

Referring now to a generalized block diagram illustrating one embodiment of sub segment units including a cryptography sub segment and a backup sub segment is shown. As shown the cryptography sub segment has a size . In one embodiment the sub segment size is 32 bytes. In one embodiment the backup sub segment comprises an integer multiple of cryptography sub segments . Therefore the backup sub segment size is an integer multiple of the size . In one embodiment the backup sub segment size is 1 KB. In the example shown the cryptography sub segment and the backup sub segment are byte aligned. Again in another embodiment the backup sub segment size may not be an integer multiple of the size . In such a case further calculations may be performed when encrypting decrypting and transferring data to and from the cloud services to determine a number of backup sub segments and a number of cryptography sub segments to use during a respective operation.

Referring now to a generalized block diagram illustrating one embodiment of segment units including a cryptography segment and a backup segment is shown. As shown the cryptography segment has a size . In one embodiment the cryptography segment size is 128 KB. In one embodiment the cryptography segment comprises one or more backup sub segments . As previously shown each backup sub segment may comprise one or more cryptography sub segments . Accordingly each cryptography segment comprises one or more cryptography sub segments . Therefore the cryptography segment the backup sub segment and the cryptography sub segment may be byte aligned. The cryptography segment size may be the smallest units size used for encryption. The cryptography sub segment size may be the smallest unit size used for decryption.

In one embodiment the backup segment comprises one or more cryptography segments . Therefore the backup segment size is an integer multiple of the size . In one embodiment the backup segment size is 256 KB. In such a case the backup segment size is twice the amount of the cryptography segment size of 128 KB. In some embodiments the backup segment size and the cryptography segment size are equal. For example each of these sizes may be 256 KB. In the examples shown the backup segment and the cryptography segment are byte aligned. Further the backup sub segment and the cryptography sub segment are byte aligned with one another and with each of the segments and . Again in another embodiment the backup segment size may not be an integer multiple of the cryptography segment size . Further the sub segment sizes may not be byte aligned with one another or with the segment sizes. In such cases further calculations may be performed when encrypting decrypting and transferring data to and from the cloud services to determine a number of segments and sub segments to use during a respective operation.

Referring now to a generalized block diagram illustrating one embodiment of cryptography segment is shown. The cryptography segment may be byte aligned with a backup sub segment and a cryptography sub segment . An initialization vector may be used to encrypt data held in the cryptography segment . Each cryptography segment may have its own vector . The initialization vector may be a public or a private key depending on the selected cryptography algorithm. The vector may be used to encrypt cryptography sub segment . Afterward the encrypted sub segment may be used to encrypt sub segment . Following the encrypted sub segment may be used to encrypt sub segment and so forth. In such a case the encrypted sub segment may be decrypted using the encrypted sub segment with a same algorithm. Similarly the encrypted sub segment may be decrypted with use of the encrypted sub segment . The encrypted sub segment is decrypted with use of the initialization vector .

Turning now to a generalized flow diagram illustrating one embodiment of a method for backing up data is shown. The components embodied in network architecture may generally operate in accordance with method . It is noted for purposes of discussion the steps in this embodiment of method are described in sequential order. However some steps may occur in a different order than shown some steps may be performed concurrently some steps may be combined with other steps and some steps may be absent in another embodiment.

In block one or more data objects stored on one of the client computing systems are determined to qualify to be backed up. Backup policies user input or other may be used to make this determination. In block in one embodiment metadata and content data corresponding to the qualified data objects are sent to the backup server . In another embodiment one or more of the client computing systems comprises software such as a plug in to interface with the cloud services directly.

In block a catalog of backup information is updated with the received metadata corresponding to the qualified data objects. In block the backup server encrypts the received content data using a selected cryptography algorithm. In one embodiment a cryptography segment size is byte aligned with backup write and cryptography or decryption sub segment sizes. In block the encrypted data is sent to remote data storage such as one of the remote shared storage servers within cloud services .

Turning now to a generalized flow diagram illustrating one embodiment of a method for identifying and receiving restore data is shown. In block the backup server may receive a restore request from one of the client computing systems . The restore request may identify selected data previously stored on the requesting one of the client computing systems . In block the backup server may inspect a catalog and determine the selected data is stored in given backup segment s and sub segment s with unique identifiers. In block the backup server may identify for a last backup segment containing the selected data a last backup sub segment storing the end of the requested data.

In block the backup server may send a request for any selected backup segments prior to the last backup segment to remote data storage within the cloud services . In block within the same request or within a separate request the backup server may request the last backup sub segment and prior sub segments in the last backup segment from the remote data storage within the cloud services . Here the backup server may not request the entire last backup segment to obtain the requested restore data. For example if the requested restore data includes backup sub segments to within the last backup segment then the backup server may request those five backup sub segments rather than the entire backup segment. With segment and sub segment sizes of 256 KB and 1 KB respectively the backup server would request 5 KB instead of 256 KB to transmit over the Internet from the cloud services . In block the backup server receives the requested backup segments and sub segments from the remote data storage within the cloud services .

Turning now to a generalized flow diagram illustrating one embodiment of a method for decrypting restored data received over a network is shown. Similar to methods and the components embodied in network architecture may generally operate in accordance with method and additionally the steps in this embodiment of method are described in sequential order. However some steps may occur in a different order than shown some steps may be performed concurrently some steps may be combined with other steps and some steps may be absent in another embodiment.

In block the backup server may decrypt any received backup segments prior to the last backup segment from remote data storage within the cloud services . For each backup segment the decryption may utilize a same cryptography algorithm and a same respective initialization vector used during encryption. In block the backup server may identify a last backup sub segment storing the end of the requested and received data. In block the backup server may select a first and a last cryptography sub segment within this last backup sub segment corresponding to data requested to be restored.

If the selected first cryptography sub segment aligns with a beginning of the last backup sub segment conditional block then in block the back up server may select a corresponding initialization vector . For example the selected first cryptography sub segment from step may be sub segment as shown in . In block the backup server may decrypt each sub segment from the selected first sub segment to the selected last sub segment initially using the selected vector .

If the selected first cryptography sub segment does not align with a beginning of the last backup sub segment conditional block then in block the backup server may select a cryptography sub segment prior to the first selected cryptography sub segment within the last backup sub segment. For example the selected first cryptography sub segment from step may be sub segment as shown in . Therefore the backup server may select cryptography sub segment for decrypting sub segment and then discard the extra bytes within the sub segment . In block the backup server may decrypt each cryptography sub segment from the selected first sub segment to the selected last sub segment initially using the prior cryptography sub segment.

It is noted that the above described embodiments may comprise software. In such an embodiment program instructions and or a database both of which may be referred to as instructions that represents the described systems and or methods may be conveyed or stored on a computer readable medium. Generally speaking a computer accessible storage medium may include any storage media accessible by a computer during use to provide instructions and or data to the computer. For example a computer accessible storage medium may include storage media such as magnetic or optical media e.g. disk fixed or removable tape CD ROM or DVD ROM CD R CD RW DVD R DVD RW or Blu Ray. Storage media may further include volatile or non volatile memory media such as RAM e.g. synchronous dynamic RAM SDRAM double data rate DDR DDR2 DDR3 etc. SDRAM low power DDR LPDDR2 etc. SDRAM Rambus DRAM RDRAM static RAM SRAM etc. ROM Flash memory non volatile memory e.g. Flash memory accessible via a peripheral interface such as the Universal Serial Bus USB interface etc. Storage media may include microelectromechanical systems MEMS as well as storage media accessible via a communication medium such as a network and or a wireless link.

In various embodiments one or more portions of the methods and mechanisms described herein may form part of a cloud computing environment. In such embodiments resources may be provided over the Internet as services according to one or more various models. Such models may include Infrastructure as a Service IaaS Platform as a Service PaaS and Software as a Service SaaS . In IaaS computer infrastructure is delivered as a service. In such a case the computing equipment is generally owned and operated by the service provider. In the PaaS model software tools and underlying equipment used by developers to develop software solutions may be provided as a service and hosted by the service provider. SaaS typically includes a service provider licensing software as a service on demand. The service provider may host the software or may deploy the software to a customer for a given period of time. Numerous combinations of the above models are possible and are contemplated.

Although the embodiments above have been described in considerable detail numerous variations and modifications will become apparent to those skilled in the art once the above disclosure is fully appreciated. It is intended that the following claims be interpreted to embrace all such variations and modifications.

