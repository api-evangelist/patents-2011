---

title: System and method for creating and maintaining secondary server sites
abstract: Disaster Recovery (DR) and High-Availability (HA) are a critical features required by many information technology systems. DR and HA may be accomplished with a remote secondary site that is kept synchronized with a primary site. To reduce the cost of maintaining a secondary site, the data may be split into two subsets wherein only a first subset of data is kept synchronized at the secondary site using a small bandwidth communication link. The second set of data, which is generally much larger, is periodically backed up at a network accessible back-up location. When a disaster occurs, the secondary site may access the most recent back-up of the second set of data. In a maintenance or limited failure situation, the secondary site can directly access the second data set at the primary site.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09110837&OS=09110837&RS=09110837
owner: STORSIMPLE, INC.
number: 09110837
owner_city: Santa Clara
owner_country: US
publication_date: 20110104
---
The present patent application claims the benefit of the previous U.S. Provisional Patent Application entitled SYSTEM AND METHOD FOR STORING DATA OFF SITE filed on Jan. 6 2010 having Ser. No. 61 335 653.

The present invention relates to the field of digital computer systems. In particular but not by way of limitation the present disclosure teaches techniques for creating and maintaining secondary server sites that may be used for a variety of purposes.

Computer systems have become an indispensable tool used in modern life. Nearly every business and government agency is now dependent upon computer systems for digital communication project planning document creation information storage transaction processing inventory management financial operations and a large number of other mission critical services.

Although individual pieces of computer hardware and computer software can easily be replaced by an entity using computer systems by purchasing new computer equipment or computer software the entity s accumulated stores of data cannot easily be replaced. The accumulated store of data is critical for allowing a business and government agency to continue operating. Thus maintaining access to the accumulated data and protecting that accumulated data is one of the most critical parts of any modern information technology infrastructure for a business government agency or any other entity.

Two important features in providing data storage within an information technology infrastructure are high availability HA data services and disaster recovery DR services. High availability encompasses the task of ensuring that the stored data is available almost all of the time. Thus even when system maintenance is being performed or when there are minor hardware software or network problems a high availability data storage system will continue to provide access to stored data. Disaster recovery refers to the ability to restore a data storage system even when a major disaster strikes an information technology site such as a data center burning down.

An ideal data storage system will be able to provide both high availability and disaster recovery services. Products and services for providing both high availability and disaster recovery data service exist but such products tend to be expensive and complex. Small and medium sized entities can have difficulties in deploying data storage systems that provide both high availability and disaster recovery services. Thus it would be desirable to provide systems that provide high availability and disaster recovery data storage service with lower costs and less complexity.

The following detailed description includes references to the accompanying drawings which form a part of the detailed description. The drawings show illustrations in accordance with example embodiments. These embodiments which are also referred to herein as examples are described in enough detail to enable those skilled in the art to practice the invention. It will be apparent to one skilled in the art that specific details in the example embodiments are not required in order to practice the present invention. For example although some of the example embodiments are disclosed with reference to the Microsoft SharePoint Server environment other types of server systems may use the teachings in this document. The example embodiments may be combined other embodiments may be utilized or structural logical and electrical changes may be made without departing from the scope of what is claimed. The following detailed description is therefore not to be taken in a limiting sense and the scope is defined by the appended claims and their equivalents.

In this document the terms a or an are used as is common in patent documents to include one or more than one. In this document the term or is used to refer to a nonexclusive or such that A or B includes A but not B B but not A and A and B unless otherwise indicated. Furthermore all publications patents and patent documents referred to in this document are incorporated by reference herein in their entirety as though individually incorporated by reference. In the event of inconsistent usages between this document and those documents so incorporated by reference the usage in the incorporated reference s should be considered supplementary to that of this document for irreconcilable inconsistencies the usage in this document controls.

The present disclosure concerns digital computer systems. illustrates a diagrammatic representation of a machine in the example form of a computer system that may be used to implement portions of the present disclosure. Within computer system of there are a set of instructions that may be executed for causing the machine to perform any one or more of the methodologies discussed within this document.

In a networked deployment the machine of may operate in the capacity of a server machine or a client machine in a client server network environment or as a peer machine in a peer to peer or distributed network environment. The machine may be a personal computer PC a tablet PC a set top box STB a Personal Digital Assistant PDA a cellular telephone a web appliance a server a network router a network switch a network bridge or any machine capable of executing a set of computer instructions sequential or otherwise that specify actions to be taken by that machine. Furthermore while only a single machine is illustrated the term machine shall also be taken to include any collection of machines that individually or jointly execute a set or multiple sets of instructions to perform any one or more of the methodologies discussed herein.

The example computer system of includes a processor e.g. a central processing unit CPU a graphics processing unit GPU or both and a main memory and a non volatile memory which communicate with each other via a bus . The non volatile memory may comprise flash memory and may be used either as computer system memory as a file storage unit or both. The computer system may further include a video display adapter that drives a video display system such as a Liquid Crystal Display LCD or a Cathode Ray Tube CRT . The computer system also includes an alphanumeric input device e.g. a keyboard a cursor control device e.g. a mouse or trackball a disk drive unit a signal generation device e.g. a speaker and a network interface device . Note that not all of these parts illustrated in will be present in all embodiments. For example a computer server system may not have a video display adapter or video display system if that server is controlled through the network interface device .

The disk drive unit includes a machine readable medium on which is stored one or more sets of computer instructions and data structures e.g. instructions also known as software embodying or utilized by any one or more of the methodologies or functions described herein. The instructions may also reside completely or at least partially within the main memory and or within a cache memory associated with the processor . The main memory and the cache memory associated with the processor also constitute machine readable media.

The instructions may further be transmitted or received over a computer network via the network interface device . Such transmissions may occur utilizing any one of a number of well known transfer protocols such as the well known File Transport Protocol FTP .

While the machine readable medium is shown in an example embodiment to be a single medium the term machine readable medium should be taken to include a single medium or multiple media e.g. a centralized or distributed database and or associated caches and servers that store the one or more sets of instructions. The term machine readable medium shall also be taken to include any medium that is capable of storing encoding or carrying a set of instructions for execution by the machine and that cause the machine to perform any one or more of the methodologies described herein or that is capable of storing encoding or carrying data structures utilized by or associated with such a set of instructions. The term machine readable medium shall accordingly be taken to include but not be limited to solid state memories optical media battery backed RAM and magnetic media.

For the purposes of this specification the term module includes an identifiable portion of code computational or executable instructions data or computational object to achieve a particular function operation processing or procedure. A module need not be implemented in software a module may be implemented in software hardware circuitry or a combination of software and hardware.

Client Server computing is a computer paradigm wherein a centralized server system provides services to one or more client computer systems. Computer servers have been created to provide a wide variety of different services to client computer systems such as general file storage email service web site hosting and database service.

A storage area network allows multiple computer applications such as database server to access remote computer storage devices such as hard disk arrays magnetic tape libraries and optical disc storage devices in a manner wherein the remote storage devices appear the same as storage devices directly attached to the local computer system. The use of a storage area network SAN allows multiple applications and servers to share a unified storage system. The use of unified shared storage simplifies storage administration since only the unified storage system need to be maintained instead of several different storage systems on several different servers. For example by using a unified storage system a single back up system can be used to perform data back ups for all of the applications that use the storage system .

Data back up systems are a very basic method of implementing a disaster recovery system. Referring to if storage system stores all of the data at a site and back up system creates a duplicate copy of the all the data on storage system then back up system can be used to fully restore the entire data infrastructure of the site. Thus if database server malfunctioned and corrupted all of the data it had stored on storage system then a back up copy of that data on back up system could be used to restore the data back onto storage system to resume operation of database server .

In order to provide a robust data recovery system the back up system or back up media tapes optical discs etc. from back up system should be moved to a different location than the site that houses front end server database server and storage system . In this manner a catastrophic disaster such as a fire could strike but the data infrastructure of could be rebuilt with new hardware and the data could be restored from the off site back up.

In addition to providing disaster recovery services the back up system can handle more mundane back up data retrieval tasks. For example if a user accidentally deleted an important file that deleted file could be restored from a recent back up copy stored on the back up system .

The data back up system of provides a very basic disaster recovery system. However when a disaster such as a fire occurs it can take a long time to reconstruct the information technology infrastructure of . The entire hardware infrastructure must first be rebuilt with new computer hardware and networking equipment. Then the software applications must be loaded onto the new computer hardware. Finally the backed up data must be restored onto the reconstructed information technology infrastructure thereby completing the restoration. For any large business or government operation having such a large amount of down time is unacceptable.

To provide a more robust information technology infrastructure many entities create a primary computer site and a secondary computer site that can quickly be used if the primary site experiences a catastrophic failure. illustrates a block diagram of the server system from used as a primary server site and a secondary server site that may be used if the primary server site experiences a failure.

As illustrated in the primary server site and the secondary server site include the same basic components of a front end server a database server and a storage system. The client systems and will generally access the front end server at the primary site . However if there is a some type of failure at the primary site then the client systems and can be directed to access the secondary server site .

For example if the front end server was providing email service an entry in a Domain Name Service DNS entry would designate front end server as a back up server that could be accessed if the primary front end server was not responding. Thus if a disaster were to strike at the primary site then front end server at the secondary site would immediately be available to handle service requests from the client systems and .

In order to immediately begin handling service requests the secondary site must be kept up to date with the latest state information from the at the primary site . Ideally the secondary site will have all of the state information from the primary site but it may be acceptable if the secondary site is not completely up to date. Various different methods may be used to keep the secondary site updated with state information. One common technique is to use communication link between the primary site and the secondary site to transmit any data changes made at the primary site and the secondary site . In the example of the database server at the primary site transmits local data changes to the database server at the secondary site such that the secondary database server remains synchronized with the primary database server .

Various different methods may be used to maintain synchronization between the primary database server and the secondary database server . One technique of updating the secondary database server at the secondary site is to use log shipping . With log shipping the database server at the primary site maintains a log of all the changes made to the primary database on database server . Then on a periodic basis the database server transmits a batch of changes to the secondary database server . The secondary database server then applies the received batch of changes to remain reasonably synchronized with the primary database server . Note that by collecting the changes and transmitting the changes in batches the changes may be grouped together and compressed in order to efficiently use the communication link .

With log shipping there is delay between when a change occurs in the primary database server and when that change is eventually packaged up transmitted and applied to the secondary database server . If the primary site experiences a failure before the latest batch of updates is transmitted the secondary database server will not be completely up to date such that a small amount of data may be lost. To reduce this potential loss of data between batches database mirroring may be employed. With database mirroring all of the changes that are applied to the primary database server are immediately transmitted to the secondary site and applied to the secondary database server . In this manner the secondary database server will be synchronized with the primary database server . However this method requires a large bandwidth communication link between the primary site and the secondary site .

Maintaining the secondary fail over site is an expensive proposition due to all the hardware and software required to construct and maintain the secondary fail over site . Furthermore with either log shipping or database mirroring the primary site and the secondary fail over site must be coupled by a high bandwidth communication link in order to keep the secondary site up to date with the latest database state information. Maintaining the high bandwidth communication link for the secondary fail over site that will rarely or perhaps never be used is an expensive recurring cost that companies would rather avoid or reduce. And even though the secondary site acts as a live back up of the primary site some type of back up system is still required. For example the back up system and are still required in order to make periodic back ups such that accidentally deleted data can be retrieved. Thus it would be desirable to reduce the cost and complexity of implementing a secondary fail over site and providing periodic data back ups.

To simplify the task of creating a fail over secondary site the present disclosure proposes using internet based remote storage services for creating a data store that may be accessed by the secondary site. Internet based remote storage services store data across the internet which is commonly drawn as a cloud in network diagrams thus these internet based data storage services are commonly referred to as cloud storage services . With the use of cloud based storage system the need for a high bandwidth communication link between the two sites may be reduced or eliminated in some cases.

Cloud based storage services offer customers reliable off site data storage at relatively inexpensive prices. By using a cloud based storage service an information technology department can outsource the tasks of purchasing and maintaining a system for making data back up copies. Furthermore the task of ensuring that back up copies and transported and stored at an off site location for protection is completely eliminated since the data is backed up across the internet to a remote location.

Cloud based back up systems can be implemented in many different ways. One specific cloud based back up system that may be employed is disclosed in the U.S. patent application System And Method For Efficiently Creating Off Site Data Volume Back Ups filed on Apr. 1 2010 and having Ser. No. 12 798 321 which is hereby incorporated by reference. In that cloud based back up system the data to be stored on the cloud has duplicate data removed is compressed and then encrypted before being transmitted to the cloud based storage service. In this manner back up copies of data are created in a very efficient manner that significantly reduces the amount of data that must be transmitted across the internet to the cloud based storage service. Furthermore subsequent incremental back ups may use the data that has already been transmitted to the cloud based storage service. In this manner incremental back ups will only require relatively small amounts of data to be transmitted.

In order to provide the secondary fail over site with data in case the secondary site needs to become operational the primary site periodically backs up the database store stored on the storage system using a cloud back up system . Specifically cloud back up system periodically creates back up copies at a cloud storage service . For example as illustrated in the cloud back up system has created three back up copies and at the cloud storage service from the database store at the primary site .

If the primary site were to experience a temporary or catastrophic failure an administrator could instruct the secondary site to take over the role of providing services to the client computers and using secondary front end server . In order to take over these duties the secondary site needs access to the most recent back up copy of the database store . Thus before commencing operation the cloud back up system in the secondary site storage system mounts the most recent back up volume at the cloud storage service . For example the cloud back up system may mount back up volume stored at cloud storage service . The database server may then use that back up volume to support front end server .

Note that if the storage system is serving data directly from the cloud storage service to the database server then there may some latency while requested data is accessed from the cloud storage service . This latency is an undesirable performance drop. However this latency can be mitigated in various different manners.

A first method of dealing with this latency is to completely eliminate the latency by copying the entire most recent database back up such as back up volume into the storage system before having the secondary site being operating. This allows the data to be served from a local source. However using this method will mean that no services can be provided to the client computers and until the back up volume is fully copied from the cloud storage service to the storage system at the secondary site . Copying a large database may take a significant amount of time and is thus an undesirable option.

A second method of reducing latency is to have the storage system create a new local database volume that references the back up volume stored at cloud storage service for data that it does not yet have. Since only references to the data in the back up volume are needed this new volume can be created very quickly. In this manner as data requests are received the storage system will request data that it does not yet have from by referencing data back up at cloud storage service . However as each referenced data item is accessed the storage system can store a local copy of the data in the new database volume in the local storage system . In this manner subsequent requests to the same data can be served using the local copy of the data. Specific details on this technique may be implemented can be found in the section entitled Restoring a Backed Up Data Volume in the U.S. patent application System And Method For Efficiently Creating Off Site Data Volume Back Ups filed on Apr. 1 2010 and having Ser. No. 12 798 321 which is incorporated by reference in its entirety.

A third method of mitigating the latency is to have the secondary site take advantage of data storage systems that are able to identify duplicate data using data fingerprints. Data de duplication is the process of identifying redundant data and then discarding duplicate data by having two or more data objects that have duplicate data point to a single copy of that duplicate data. One method of identifying duplicate data is to calculate statistically unique data fingerprints for sections of data and then identifying sections of data that have the same data fingerprints. Data duplication provides several advantages such as reducing the amount of storage space required and reducing the time needed to transmit data across communication lines. The system of can take advantage of data de duplication by using duplicate data that is available locally. Specifically the storage system may periodically load recent database back up copies into the local storage system . Then by locating locally available data data portions from recent back up copies with the exact same fingerprints the storage system can quickly serve data using the local copy. An example of reduced latency using data duplication is provided in the following paragraphs.

To prepare for reducing latency by using data duplication with fingerprints the cloud back up system periodically uploads old databases from the cloud storage service into the local storage system . illustrates an old data back up that has been uploaded into the storage system from the cloud storage service . The uploading of old database may occur less frequently than the cloud back up system at the primary site creates back up volumes in order to reduce bandwidth usage. The uploaded database is comprised of data sections wherein each data section has a statistically unique data fingerprint that is derived from the data section. The actual creation of the data fingerprints may occur in any location but in one embodiment the data fingerprints are created by the primary storage system that created the back up volume. 

When a situation occurs requiring that the secondary site take over operation the cloud back up system at the secondary site creates a new data volume by loading up all the data fingerprints from the most recent back up volume at the cloud storage service . Although the loaded data fingerprints are associated with data sections in the most recent back up volume at the cloud storage service any data sections that have the same statistically unique fingerprints may be used. Thus if there are data sections in the uploaded old database that have the exact same data fingerprints then the storage system may respond to requests for that data using the local copy. When the storage system is able to use a local copy of the fingerprinted data there will be no latency when responding to such requests. Since much of the data in a large database remains the same there will tend to be a large amount of duplicate data between an older version of the database that is available locally and the most recent back up of the database available on the cloud storage service . Thus the storage system will be able to quickly respond to many data requests using local copies of the same data by using duplicate data sections in the locally mounted old database .

The fail over back up system of provides the same type of fail over back up system illustrated in but at a lower cost since no high bandwidth communication line needs to couple the primary site with the secondary site . By eliminating that expensive recurring cost the cost of maintaining a secondary fail over site is greatly reduced. However the secondary fail over back up system of may lose a significant amount of data when a problem occurs. Specifically all of the changes made to the database store at the primary site since the latest back up copy stored at the cloud storage service may be lost. This amount of data loss may be unacceptable for many applications.

In the fail over arrangement of the primary database server uses a communication link to keep the light data database synchronized with copy of the light data database at the secondary site . Specifically the primary database server may communicate any changes made to the light data database to the secondary database server such that the secondary database server may update its local light data database .

The bulk data database at the primary site may be used to store large data objects and data objects that change much less frequently. These data objects may include files such as word processing documents PDFs and images. In the arrangement of arrangement of the bulk data database will be backed up on a periodic basis to the cloud storage service .

When disaster causes the primary site to no longer function the situation will be as depicted in . In the primary site has failed and the secondary site of needs to begin providing services. Specifically the secondary front end server may begin handling requests from clients and by having the secondary database server use the light data stored in the light data database which contains the same data that was in primary light data database . When bulk data is required the storage system will access the latest back up of the bulk data database that is stored at the cloud storage service .

As set forth with reference to the system of various techniques can be used to reduce the latency of accessing the bulk data database . Specifically the full bulk data database may be copied to the storage system a new bulk database may be created that references the full bulk data database and caches data locally or the storage system may access duplicate data from an older version of a database not shown that is available locally in the storage system .

The fail over arrangement of provides advantages over the fail over arrangement of . With the fail over arrangement of the system will lose less data since all or most of the light data will already be replicated over at the secondary site using database mirroring or log shipping across the communication line . Only the data stored in the bulk data database that is not yet in the most recent back up at the cloud storage service will be lost if there is a catastrophic disaster at the primary site . If most of the data stored in the bulk data database changes only rarely very little data will be lost Furthermore since the light data for the secondary database server will be locally available in light data database the performance of the secondary site in will be better than the secondary site in .

Although the fail over arrangement of is much improved over the fail over arrangement of there are still some inadequacies. For example there still may be significant data losses since all the changes made to the bulk data database since the most recent back up will be lost. Furthermore accessing the bulk data back up from the cloud storage service may be slow since the data stored at the cloud storage service may be compressed and encrypted to reduce storage requirements and protect the security of the data. Decompressing and decrypting the data will thus add latency to accessing the bulk data. Thus the fail over arrangement depicted in may be further improved.

The fail over systems of provides some advantages over the fail over system depicted in . For example the high bandwidth communication link in the system of is not required in the fail over systems of . Instead only a smaller communication link is required to carry the light data to the secondary database server in the systems of . The communication link that links the two database servers and may simply be a standard internet connection that uses encrypted tunneling.

The fail over systems of do not require an independent back up solution such as the back up systems and depicted in the arrangement of . Instead the arrangements of use a cloud based back up system that may be an integrated part of storage system . The cloud based back up system inherently achieves the goal of having an off site back up of data. Furthermore a single cloud based storage account at cloud based storage service may be shared between both the primary site and the secondary site such that only a single back up system needs to be maintained.

To fully describe the fail over system disclosed in a detailed example of one specific deployment is disclosed with reference to . Referring to a Microsoft SharePoint server is deployed at a primary site for providing services to several client computers and . The SharePoint server may provide standard web server services along with other services to the client computer systems. Microsoft SharePoint servers are often used as a collaboration system wherein users can share documents with each other.

A Microsoft SharePoint server is supported by a SQL Server database server that provides data to the SharePoint server . In a first mode of operation the SQL Server database server can be used to provide all of the data needed by the SharePoint server . Specifically the SQL Server database server serves both meta data for implementing the SharePoint site and bulk documents shared by the SharePoint users. The bulk documents may include spreadsheets word processing documents and other common document files. 

Although this first mode of operation works fine for small SharePoint deployments this mode of operation is not ideal for larger SharePoint systems. Specifically the SharePoint server and SQL Server database server may not operate efficiently since the SQL Server database server will have to handle a very large number of data requests. Furthermore many of the data requests issued to the SQL Server database server will be for Binary Large OBjects BLOBs that are not handled efficiently by a standard relational database such as the SQL Server database server . For example a typical SharePoint server will be used to share binary large objects BLOBs such as word processing documents images PDFs videos and other large data object files. Although a relational database such as the SQL Server database server can handle such BLOBs such BLOBs can be more efficiently handled by a file system. Thus using a SharePoint server that is only supported by a SQL Server database server for all its data requirements is not a solution that can scale up well.

To allow a SharePoint server deployment to scale up to large sizes Microsoft created an Application Programming Interface API into SharePoint that allows SharePoint to store large data objects in a storage system that is separate from the SQL relational database used to support SharePoint. Specifically Microsoft first introduced an API for External BLOB Storage EBS in the 2007 version of SharePoint. More recent versions of SharePoint also support a newer API called Remote BLOB Storage RBS for storing BLOBs. The EBS and RBS interfaces allow the SharePoint server to operate in a second mode of operation that allows the data storage requirements to be split among two different data storage systems. Specifically illustrates a block diagram showing how a SharePoint server may use both a SQL database and a BLOB storage system either EBS or RBS to store data.

Referring to SharePoint server uses a SharePoint Object Model for handling data objects. The data objects are stored using a storage access stack . In all SharePoint systems the storage access stack uses standard relational data access to access data on a SQL Server database . The meta data for implementing the SharePoint server is stored in the SQL Server database .

To scale up the storage system for the SharePoint server a SharePoint Server may also support storing binary large data objects BLOBs with a Remote or External BLOB Storage RBS or EBS system. Specifically a Remote or External BLOB Storage RBS or EBS Application programming interface API allows a Remote or External BLOB Storage RBS or EBS provider to provide BLOB storage services. To use a BLOB storage provider the SharePoint server creates BLOB identifiers that are stored in the SQL Server database . The BLOB identifiers are then linked to BLOBs stored using the Remote or External BLOB Storage RBS or EBS provider . Thus the Remote or External BLOB Storage RBS or EBS provider is an added on software module that must handle requests to store BLOBs that are associated with a BLOB identifier and retrieve BLOBs using an associated BLOB identifier. The Remote or External BLOB Storage RBS or EBS provider will physically store and retrieve BLOBs using some type of BLOB storage system . The BLOB storage system may be a file system a database designed to handle BLOBs or any other storage system designed to handle BLOBs.

Referring back to the SharePoint Server at the primary site stores a first portion data using a SQL Server database server and stores a second portion data the BLOB data with a BLOB service provider . In the embodiment of both the SQL Server database server and the BLOB service provider share the same data storage system but separate data storage systems may be used in other embodiments. The data storage system stores the data from the SQL Server database server in a SQL data volume and stores the data from the BLOB service provider in a BLOB storage volume .

The data storage system includes a cloud based back up system that may be used to back up data at a cloud storage service available on the internet . As illustrated in the cloud storage service is currently storing a SQL database back up volume and two BLOB back up volumes and . The back up volumes stored at the cloud storage service may be used to retrieve data that has accidentally been deleted or may be used when a disaster occurs.

To provide reliable service a fail over secondary site is maintained to provide services to the client computers and if the primary site experiences some type of failure. Like the primary site the secondary site has a SharePoint server for providing services to the client computers and . The SharePoint server is supported by a SQL Server database server and a BLOB service provider . To keep the SharePoint server at the secondary site ready for operation updates applied to the SQL Server database server at the primary site are transmitted across communication link and applied to the SQL Server database server at the secondary site . The secondary SQL Server database server stores the SQL data in the local data storage system .

Although the changes to the SQL Server database server are updated at the secondary site the changes made by the primary SharePoint Server to the BLOB service provider are not immediately transmitted to the secondary site . Since the BLOB data can account for 90 of the total data volume this greatly reduces the amount of data that must be transmitted across communication link . Instead the BLOB data at the primary site is regularly backed up using the cloud back up system . The cloud back up system stores the back up volumes at the cloud storage service such that the back up volumes are accessible by the secondary site .

The back up volumes created by the cloud back up system can be created quickly and efficiently. Incremental back ups only need to update the portions of a data volume that have changed since the last back up. And even when full back ups are performed techniques that eliminate data duplication can greatly reduce the amount of data that needs to be transmitted to the cloud storage service when identical data already exists at the cloud storage service . Details on constructing a cloud back up system that identifies duplicated data and eliminates the need for transmitting data duplicates can be found in the U.S. patent application System And Method For Efficiently Creating Off Site Data Volume Back Ups filed on Apr. 1 2010 and having Ser. No. 12 798 321 which is hereby incorporated by reference in its entirety. The BLOB data created by a SharePoint server is an ideal candidate for data duplication elimination since SharePoint servers create a completely new BLOB data file in addition to keeping an old existing data file when that old BLOB data file is modified.

The server system arrangement of allows a primary server site to be supported by a secondary fail over service site without significant recurring costs. For example the communication link used to keep the SQL Server database server at the secondary site updated does not need to be a high bandwidth connection since by excluding the BLOB updates the vast majority of the data volume is eliminated. A secured tunnel connection using an ordinary interne connection may suffice instead of needing a private Wide Area Network WAN connection. Furthermore the need for independent back up systems at both sites is eliminated by using a single shared cloud storage service that can service both sites.

When a failure occurs that prevents the primary site from providing client services yet allows the primary data storage system to continue functioning then the BLOB service provider at the secondary site may be able to establish a connection to the data storage system at the primary site . This connection will allow the BLOB service provider of the secondary site to directly access the most current BLOB data which is stored in the data storage system at the primary site . In this manner the SharePoint server at the secondary site will be able to provide client services with the support of the SQL Server database server using the local SQL data and the support of the BLOB service provider accessing the current BLOB data volume on the data storage system at the primary site .

In some embodiments the BLOB service provider may use various caching systems improve performance. A first caching technique would be to have the data storage system pre cache by having the data storage system periodically load in a BLOB back up from the cloud storage service . Thus the cloud back up system may load a recent BLOB back up such as BLOBs back up as BLOB store in data storage system . The BLOB service provider will then access a requested BLOB locally from of BLOB store in data storage system if it is available in BLOB store . This will result in improved performance for those BLOB items found within BLOB store .

When the BLOB service provider cannot access a requested BLOB locally from the local BLOB store then the BLOB service provider will request the BLOB from BLOB store at primary site across connection . When this occurs the BLOB service provider may store a copy of that BLOB into the local BLOB store such that subsequent requests from that particular BLOB can be serviced quickly.

Note that the solution depicted in requires the data storage system to be network accessible. However that is exactly how Storage Area Networks SANs operate. Although accessing the remote BLOB data volume will likely involve some latency this may be acceptable during a temporary maintenance time period. It should also be noted that the cloud back up system may continue making period back ups of the BLOB data volume that can be used if a complete disaster were to take out the primary site .

Upon the completion of maintenance or the repair of a failed element the primary site should be reactivated in order to obtain the best performance by accessing the BLOB data locally. Before switching back to the primary site the data in the SQL data volume at the secondary site must be copied to the data storage system at the primary site . This may be performed by having the two SQL databases and re establish communication and synchronize their SQL data volumes using the SQL data volume as the data source. Alternatively service could be temporarily suspended the SQL data volume at the secondary site could be backed up at the cloud storage service and then that data could be used to restore a SQL data volume at the primary site .

As an organization grows that organization may wish to open up geographically remote work sites such as remote satellite offices. To support the users at a remote satellite site an information technology department may wish provide the users at the remote satellite site with access to the same data available at the organization s headquarter site. However when a user at a geographically remote satellite site attempts to access a data repository located at the organization s headquarters site there may be significant amount of latency and slow data retrieval when accessing that main data repository. Thus it would be desirable to find methods of reducing performance problems experienced at remote sites.

To access the same SharePoint data from the satellite site the users at workstations and at satellite site may access a local SharePoint server . The local SharePoint server at the satellite site then accesses the SQL Server database server and BLOB service provider at the headquarters site across a communication channel to obtain the needed SharePoint data. In the embodiment of the communication channel is implemented using the Internet but any type of suitable communication line such as a private communication line may be used instead.

With the arrangement of the users at workstations and at the satellite site have a good direct connection to local SharePoint Server . However since all of the underlying data for SharePoint Server is located at the headquarters site the performance of the arrangement of will be less than desirable for the users at the satellite site . Specifically the performance will only be as good as the communication channel . And even with a high quality communication channel a geographically remote site will have to deal with propagation delay along the communication channel . With a satellite office located on the other side planet the remote office may experience delays of 600 milliseconds or more. In addition to the propagation delay there may be a significant cost to transmitting large amounts of data to the other side of the planet. To significantly improve the performance of the system for the users located at the satellite site the SharePoint server at the satellite site needs to be able to access to local SharePoint data.

In the environment of the satellite BLOB data store will generally not be an identical copy of the main BLOB data store . Instead the satellite BLOB data store may only contain BLOB data items that were previously accessed by a user at the satellite site or were created by a user at the satellite site . When a user at the satellite site attempts to access a BLOB data item that is not available in the satellite BLOB data store then the satellite BLOB service provider will access the main BLOB data store at the headquarters site using communication path to retrieve the missing BLOB data item. Note that Communication line may be implemented using the interne as illustrated in or with a different communication line. The BLOB data item retrieved from the main BLOB data store at the headquarters site will then be provided to the user that requested the BLOB data item. The satellite BLOB service provider will also store the retrieved BLOB data item into the local satellite BLOB data store . This creation of a local copy when first accessing a BLOB data item that is not available locally is known as a copy on first read strategy. By storing a copy of the retrieved BLOB data item into the satellite BLOB data store after it is first retrieved that particular BLOB data item can then be accessed locally for all subsequent requests of that specific BLOB data item.

When a user at the at the satellite site creates a new BLOB data item then the satellite BLOB service provider will only create a local version of that BLOB data item in the satellite BLOB data store . However information about that new BLOB data item will be transmitted to the headquarters site in the form of a BLOB identifier presented to the SQL Server Database Server . Thus the SharePoint Server will know about the new BLOB data item but will not have a local copy.

The BLOB service provider in the headquarters site may be implemented in the same manner with the same copy on first read strategy. Thus when a user at the headquarters site attempts to access a BLOB data item the BLOB service provider will first attempt to access that BLOB data item from the main BLOB data store at the headquarters site . When that data item is not available in the main BLOB data store at the headquarters site then the BLOB service provider will access the satellite BLOB data store at the satellite site using communication line to retrieve the requested BLOB data item. The BLOB service provider will provide the BLOB data item to the user that made the request and also store that BLOB data item in the main BLOB data store for all subsequent requests of that same BLOB data item by users at the headquarters site . Thus a copy on first read occurs when first accessing a BLOB data item that is not available in the main

The arrangement of can be implemented easily for a SharePoint server system because SharePoint never changes existing BLOB data items. Instead anytime that a change is made to a BLOB data item handled by a BLOB service provider the SharePoint server will create a new file for the changed BLOB data item. Thus with a SharePoint server system there are no difficult cache coherency issues that can occur with the two BLOB data stores and . Thus there is no need to implement semaphores or any file locking systems to prevent two users from accessing the same file concurrently.

The server arrangement of may provide significant tangible resource savings. Specifically the server arrangement of will minimize the use of network bandwidth and storage capacity by sharing only the BLOB data items that both the headquarters office and the satellite office use. If there are BLOB data items at the headquarters site that only pertain to the headquarters site such as documents related to the headquarters building maps the local softball team parking arrangement at the headquarters etc. and are never accessed by users at the satellite site then those BLOB data items will never be transmitted to nor stored at the satellite site . Similarly if there are BLOB data items at the satellite site that only pertain to the satellite site and are never accessed by users at the headquarters site then those BLOB data items will never be transmitted to nor stored at the headquarters site . Both sites may therefore need back up systems in order to protect all of the organization s data. However the two sites may share a single account at a cloud storage service to perform these back ups.

The amount of data that transmitted between the headquarters site and the satellite site is greatly in the system of when compared to the system of . Although SQL requests and responses still travel between the SharePoint server at satellite site and the SQL Server database server at the headquarters site this represents a small volume of data traffic. In a typical SharePoint deployment 85 to 95 of the data served by a SharePoint server tends to be the BLOB data. Thus in the embodiment of 85 to 95 provided to users and may be served locally from the satellite BLOB data store in local data storage system . Thus the arrangement of reduces costs by greatly reducing the amount of data traffic between the headquarters site and the satellite site .

The preceding technical disclosure is intended to be illustrative and not restrictive. For example the above described embodiments or one or more aspects thereof may be used in combination with each other. Other embodiments will be apparent to those of skill in the art upon reviewing the above description. The scope of the claims should therefore be determined with reference to the appended claims along with the full scope of equivalents to which such claims are entitled. In the appended claims the terms including and in which are used as the plain English equivalents of the respective terms comprising and wherein. Also in the following claims the terms including and comprising are open ended that is a system device article or process that includes elements in addition to those listed after such a term in a claim is still deemed to fall within the scope of that claim. Moreover in the following claims the terms first second and third etc. are used merely as labels and are not intended to impose numerical requirements on their objects.

The Abstract is provided to comply with 37 C.F.R. 1.72 b which requires that it allow the reader to quickly ascertain the nature of the technical disclosure. The abstract is submitted with the understanding that it will not be used to interpret or limit the scope or meaning of the claims. Also in the above Detailed Description various features may be grouped together to streamline the disclosure. This should not be interpreted as intending that an unclaimed disclosed feature is essential to any claim. Rather inventive subject matter may lie in less than all features of a particular disclosed embodiment. Thus the following claims are hereby incorporated into the Detailed Description with each claim standing on its own as a separate embodiment.

