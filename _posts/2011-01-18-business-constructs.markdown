---

title: Business constructs
abstract: Various systems, processes, tools and techniques are provided for managing and processing data within a computing environment including a data warehouse component. Certain embodiments of the business construct of the invention can provide an interim stage for mapping data prior to loading the data into the data warehouse. When embodied as standard interface files, each of the business constructs can represent a business object that is of importance to a corporate entity or other enterprise.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08370371&OS=08370371&RS=08370371
owner: The PNC Financial Services Group, Inc.
number: 08370371
owner_city: Pittsburgh
owner_country: US
publication_date: 20110118
---
The invention generally relates to systems processes tools techniques and strategies for processing information within a computer system architecture. In various embodiments the invention more particularly relates to processing information within a computing environment operatively associated with a data warehouse.

Every corporate organization stores and processes data that is important to the needs and objectives of its customers. The organization may employ various kinds of computer systems to process data and other information based on interaction between the customer and the organization as well as business events that impact the customer.

There are many obstacles that face financial entities as they attempt to manage high volumes of data often collected from multiple sources. For example credit and liquidity market conditions can drive regulatory and investor demands for accurate and complete information. Also the pace at which corporate mergers and acquisitions often occur can influence the need for aggregated and properly integrated credit financial and customer information. In addition holistic cross enterprise information is critical for addressing various operational requirements of financial entities such as Basel II requirements risk assessments e.g. credit market counter party and operational risks balance sheet management stress analysis and testing and many others.

In view of the foregoing issues enhanced tools techniques and strategies are needed for processing managing and communicating business data within a corporate entity.

Various embodiments of the invention provide enhanced processes methods tools strategies and techniques for more effectively and efficiently processing managing and communicating data and other information within a computing environment. In certain embodiments the invention can provide beneficial enhancements to a computing environment including a corporate information factory for example and a data warehouse component. As described below business constructs can be structured and implemented as components which improve performance and effectiveness of a data warehouse logical architecture.

As those skilled in the art will appreciate a corporate information factory or CIF can be considered a logical computing architecture that serves to deliver business intelligence and business management capabilities in response to data supplied by the various operational aspects of an entity such as a financial service provider. The CIF provides a stable technical architecture that can be implemented in entities of different sizes and can be useful for building strategic and tactical decision support and business intelligence capabilities. The CIF may be used as an architecture for warehousing the operational data and other information that is employed by an entity. The fundamental implementation principles of a CIF can include orientation of the business intelligence environment sourcing data from an operational systems environment and external data stores storing data in both the data warehouse and operational data store in an enterprise view format supplying data to users through data marts for example or other storage components customized for the needs of the users and their separate applications and providing metadata management for the computing environment.

In certain embodiments a CIF may include various architectural components each with a functional purpose. Examples of these architectural components include operational systems or core systems that execute periodic business operations and record business data. Also the CIF may include integration and transformation processes which may be referred to as ETL or extract transformation load processes that convert operational data into an ordered format for use by a data warehouse component. A data warehouse can be included in the CIF and programmed to deliver a standard view of enterprise data which is independent of how it will subsequently be used by consumers. An operational data store of the CIF may be programmed to supply a common view of enterprise data for operational processing or tactical decision making. The CIF may also include one or more data delivery processes that provide functionality for requesting prioritizing and monitoring data mart creation and refinement. Various data marts within the CIF can be programmed to support a variety of analytical and reporting requirements of a given business unit or business function. Also metadata within the CIF can be used to provide the information necessary to promote data legibility use and administration.

In other aspects one or more data marts A G may be configured to receive data derived from the business constructs . In operative association with the data marts one or more analytic engines A F may implement SIF derived data stored in the data marts to perform various calculations and other analyses for a financial entity for example. As shown one or more different types of reports A E can be generated in connection with the calculations performed by the analytic engines .

An example of a customer type of SIF or business construct is illustrated in spreadsheet format for convenience of disclosure in . An example of a customer credit rating SIF or business construct is illustrated in spreadsheet format for convenience of disclosure in . An example of an installment loans SIF or business construct is illustrated in spreadsheet format for convenience of disclosure in . An example of a commercial loans SIF or business construct is illustrated in spreadsheet format for convenience of disclosure in .

It can be appreciated that the structure and implementation of the business constructs can provide integration of data as a preliminary step prior to loading an enterprise data warehouse data model. The business construct may be implemented early in the data warehouse life cycle e.g. as the first step in the integration and transformation process . As shown in a staging SIF business construct may be used as an interface between the enterprise information platform and one or more of the plurality of data sources . This allows ETL mapping processes to be conducted more efficiently and more quickly. Also when the corporate entity encounters significant changes in its operative association with the source data systems such as in the case of a business merger acquisition or other business process reengineering effort business constructs can provide a layer of abstraction from the underlying changing source systems. This can help to accelerate the integration of information from new data sources into the environment of the enterprise information platform .

In various embodiments source system formatted data may or may not be compatible between or among different source data systems. For example data associated with installment loans could be stored on a mortgage system such as for a home equity installment loan stored in a consumer lending system e.g. HCLS stored in one or more legacy systems and or stored in a small business systems. In this example the structure and function of the business construct takes into account the myriad source systems associated with installment loans. It can be seen that the business construct provides an interim integration step through SIF file definitions that map the source systems to the SIF and that then integrate the business constructs into the enterprise information platform . In certain embodiments SIF files can be programmed to communicate data into an enterprise data exchange layer EDX and store data derived from multiple business constructs into product line of business or functional asset families. For example a retail asset family could implicate business constructs including revolving loans installments loans mortgages overdraft loans customers mitigants and loan applications. A similar relationship can be formed around wholesale assets securitized assets economic capital or a variety of other classifications. It can be appreciated that the business constructs can be used to more readily integrate data from the source data systems into a data warehouse platform. Also the business constructs can be used to move data out of the platform and construct building blocks for creating other data structures that satisfy the needs of end users.

In one example suppose that the entity is a financial service provider that has acquired a new bank as part of its corporate structure. Source data systems of the acquired bank may need to mapped just once to specific business construct SIF files with predefined business domain attributes. Once the business constructs have been mapped then the data of the acquired bank can be transformed into a standard set of information that the acquiring entity can use to describe its business operations. The effort required to load the data into the enterprise information platform to generate integrated reporting or to analyze the combined population of data can be substantially reduced. Once source data has been mapped to the business constructs the data can be applied to pre existing downstream processes of the acquiring entity such as its data marts or analytic engines . In various embodiments only limited customization may be required in the event that the acquisition introduces or requires formation of a new business construct. For example a unique product offering of the acquired entity may not be supported by the acquiring entity prior to the merger or acquisition.

It can be appreciated that business constructs can be employed as tools that allow computer system architects to decompose complex enterprise data warehouse logical models into comparatively smaller and more streamlined component structures. With reference to it can be seen that the enterprise information platform can be constructed from multiple business constructs . Another benefit of various embodiments of business constructs is that SIF files can be used to accelerate enterprise data governance processes. For example the data attributes of existing SIF files can be used as the starting point for the definition of other business glossaries. The SIF files can also assist with efforts by different lines of business to reach consensus on standard business definitions and data quality rules or metrics.

In developing certain embodiments of the invention the inventors have recognized that integrating data early in the data warehousing process has important benefits. Under prior practices a traditional data warehousing process might have taken data from a data source and then mapped the data to the data warehouse on an ad hoc source by source basis. In other words each time a new different data source needed to be introduced that data source would have been specifically mapped directly to the target data warehouse. In contrast to this historical data mapping process embodiments of the business construct provide an interim stage for mapping data prior to loading the data into the data warehouse. Embodied as standard interface files each of the business constructs can represent an entity or an object that is of importance to the corporate entity or other enterprise. It can be seen that the content and format of the business constructs may be changed from industry to industry or among different business lines to accommodate different objects of each industry or whatever is important to that particular industry in terms of building the data warehouse. For example business constructs may be altered to reflect important objects in the automotive industry for example as compared to the financial services sector.

The content of each business construct can be designed to include attributes surrounding a revolving loan for example and those attributes would be applicable and necessary for any bank or other financial institution that process data related to revolving loans. For example a revolving loan business construct might possess attributes to which any source data system can be mapped. At the stage when data are received and filtered into the revolving loans business construct data can flow through the information architecture of any financial institution that process data associated with revolving loans. No other customization of computing system architecture is required beyond the introduction of additional business constructs to accommodate new source data systems for example. In operation the business construct can become a universal translator between the enterprise information platform and source data systems that include data relevant to the entity business object around which the business construct has been created. The business construct can include various attributes or all attributes common to an archetype of the entity business object on which the business construct is based. In other words the attributes of the object represented by the business construct can be programmed to be commonly applicable to multiple versions of the same object across multiple corporate entities. In certain embodiments one or more attributes of business constructs can be determined by asset classes of a financial institution for example and or a general subject area. The business constructs may support one to one one to many and other entity relationships. In one example a retail assets class may include a customer business construct three account business constructs and a mitigant business construct . The table shown in demonstrates examples of how asset classes can be related to retail account business constructs . Also schematically illustrates examples of attributes of a customer business construct and a mitigant business construct.

The examples presented herein are intended to illustrate potential and specific implementations of the present invention. It can be appreciated that the examples are intended primarily for purposes of illustration of the invention for those skilled in the art. No particular aspect or aspects of the examples are necessarily intended to limit the scope of the present invention. For example no particular aspect or aspects of the examples of system architectures user interface layouts or screen displays described herein are necessarily intended to limit the scope of the invention.

It is to be understood that the figures and descriptions of the present invention have been simplified to illustrate elements that are relevant for a clear understanding of the present invention while eliminating for purposes of clarity other elements. Those of ordinary skill in the art will recognize however that these sorts of focused discussions would not facilitate a better understanding of the present invention and therefore a more detailed description of such elements is not provided herein.

Any element expressed herein as a means for performing a specified function is intended to encompass any way of performing that function including for example a combination of elements that performs that function. Furthermore the invention as may be defined by such means plus function claims resides in the fact that the functionalities provided by the various recited means are combined and brought together in a manner as defined by the appended claims. Therefore any means that can provide such functionalities may be considered equivalents to the means shown herein.

In various embodiments modules or software can be used to practice certain aspects of the invention. For example software as a service SaaS models or application service provider ASP models may be employed as software application delivery models to communicate software applications to clients or other users. Such software applications can be downloaded through an Internet connection for example and operated either independently e.g. downloaded to a laptop or desktop computer system or through a third party service provider e.g. accessed through a third party web site . In addition cloud computing techniques may be employed in connection with various embodiments of the invention. In certain embodiments a module may include software firmware hardware or any reasonable combination thereof.

Moreover the processes associated with the present embodiments may be executed by programmable equipment such as computers. Software or other sets of instructions that may be employed to cause programmable equipment to execute the processes may be stored in any storage device such as for example a computer system non volatile memory an optical disk magnetic tape or magnetic disk. Furthermore some of the processes may be programmed when the computer system is manufactured or via a computer readable memory medium.

It can also be appreciated that certain process aspects described herein may be performed using instructions stored on a computer readable memory medium or media that direct a computer or computer system to perform process steps. A computer readable medium may include for example memory devices such as diskettes compact discs of both read only and read write varieties optical disk drives and hard disk drives. A computer readable medium may also include memory storage that may be physical virtual permanent temporary semi permanent and or semi temporary.

A computer computer system component or processor may be for example and without limitation a processor microcomputer minicomputer server mainframe laptop personal data assistant PDA wireless e mail device cellular phone pager processor fax machine scanner or any other programmable device configured to transmit and or receive data over a network. Computer systems and computer based devices disclosed herein may include memory for storing certain software applications used in obtaining processing and communicating information. It can be appreciated that such memory may be internal or external with respect to operation of the disclosed embodiments. The memory may also include any means for storing software including a hard disk an optical disk floppy disk ROM read only memory RAM random access memory PROM programmable ROM EEPROM electrically erasable PROM and or other computer readable memory media. In various embodiments a host engine loader filter platform or component may include various computers or computer systems or may include a reasonable combination of software firmware and or hardware.

In various embodiments of the present invention a single component may be replaced by multiple components and multiple components may be replaced by a single component to perform a given function or functions. Except where such substitution would not be operative to practice embodiments of the present invention such substitution is within the scope of the present invention. Any of the servers described herein for example may be replaced by a server farm or other grouping of networked servers e.g. a group of server blades that are located and configured for cooperative functions. It can be appreciated that a server farm may serve to distribute workload between among individual components of the farm and may expedite computing processes by harnessing the collective and cooperative power of multiple servers. Such server farms may employ load balancing software that accomplishes tasks such as for example tracking demand for processing power from different machines prioritizing and scheduling tasks based on network demand and or providing backup contingency in the event of component failure or reduction in operability.

In general it will be apparent to one of ordinary skill in the art that various embodiments described herein or components or parts thereof may be implemented in many different embodiments of software firmware and or hardware or modules thereof. The software code or specialized control hardware used to implement some of the present embodiments is not limiting of the present invention. For example the embodiments described hereinabove may be implemented in computer software using any suitable computer programming language such as .NET SQL MySQL or HTML using for example conventional or object oriented techniques. Programming languages for computer software and other computer implemented instructions may be translated into machine language by a compiler or an assembler before execution and or may be translated directly at run time by an interpreter. Examples of assembly languages include ARM MIPS and x86 examples of high level languages include Ada BASIC C C C COBOL Fortran Java Lisp Pascal Object Pascal and examples of scripting languages include Bourne script JavaScript Python Ruby PHP and Perl. Various embodiments may be employed in a Lotus Notes environment for example. Such software may be stored on any type of suitable computer readable medium or media such as for example a magnetic or optical storage medium. Thus the operation and behavior of the embodiments are described without specific reference to the actual software code or specialized hardware components. The absence of such specific references is feasible because it is clearly understood that artisans of ordinary skill would be able to design software and control hardware to implement the embodiments of the present invention based on the description herein with only a reasonable effort and without undue experimentation.

Various embodiments of the systems and methods described herein may employ one or more electronic computer networks to promote communication among different components transfer data or to share resources and information. Such computer networks can be classified according to the hardware and software technology that is used to interconnect the devices in the network such as optical fiber Ethernet wireless LAN HomePNA power line communication or G.hn. The computer networks may also be embodied as one or more of the following types of networks local area network LAN metropolitan area network MAN wide area network WAN virtual private network VPN storage area network SAN or global area network GAN among other network varieties.

For example a WAN computer network may cover a broad area by linking communications across metropolitan regional or national boundaries. The network may use routers and or public communication links. One type of data communication network may cover a relatively broad geographic area e.g. city to city or country to country which uses transmission facilities provided by common carriers such as telephone service providers. In another example a GAN computer network may support mobile communications across multiple wireless LANs or satellite networks. In another example a VPN computer network may include links between nodes carried by open connections or virtual circuits in another network e.g. the Internet instead of by physical wires. The link layer protocols of the VPN can be tunneled through the other network. One VPN application can promote secure communications through the Internet. The VPN can also be used to separately and securely conduct the traffic of different user communities over an underlying network. The VPN may provide users with the virtual experience of accessing the network through an IP address location other than the actual IP address which connects the access device to the network.

The computer network may be characterized based on functional relationships among the elements or components of the network such as active networking client server or peer to peer functional architecture. The computer network may be classified according to network topology such as bus network star network ring network mesh network star bus network or hierarchical topology network for example. The computer network may also be classified based on the method employed for data communication such as digital and analog networks.

Embodiments of the methods and systems described herein may employ internetworking for connecting two or more distinct electronic computer networks or network segments through a common routing technology. The type of internetwork employed may depend on administration and or participation in the internetwork. Non limiting examples of internetworks include intranet extranet and Internet. Intranets and extranets may or may not have connections to the Internet. If connected to the Internet the intranet or extranet may be protected with appropriate authentication technology or other security measures. As applied herein an intranet can be a group of networks which employ Internet Protocol web browsers and or file transfer applications under common control by an administrative entity. Such an administrative entity could restrict access to the intranet to only authorized users for example or another internal network of an organization or commercial entity. As applied herein an extranet may include a network or internetwork generally limited to a primary organization or entity but which also has limited connections to the networks of one or more other trusted organizations or entities e.g. customers of an entity may be given access an intranet of the entity thereby creating an extranet .

Computer networks may include hardware elements to interconnect network nodes such as network interface cards NICs or Ethernet cards repeaters bridges hubs switches routers and other like components. Such elements may be physically wired for communication and or data connections may be provided with microwave links e.g. IEEE 802.12 or fiber optics for example. A network card network adapter or NIC can be designed to allow computers to communicate over the computer network by providing physical access to a network and an addressing system through the use of MAC addresses for example. A repeater can be embodied as an electronic device that receives and retransmits a communicated signal at a boosted power level to allow the signal to cover a telecommunication distance with reduced degradation. A network bridge can be configured to connect multiple network segments at the data link layer of a computer network while learning which addresses can be reached through which specific ports of the network. In the network the bridge may associate a port with an address and then send traffic for that address only to that port. In various embodiments local bridges may be employed to directly connect local area networks LANs remote bridges can be used to create a wide area network WAN link between LANs and or wireless bridges can be used to connect LANs and or to connect remote stations to LANs.

In various embodiments a hub may be employed which contains multiple ports. For example when a data packet arrives at one port of a hub the packet can be copied unmodified to all ports of the hub for transmission. A network switch or other devices that forward and filter OSI layer 2 datagrams between ports based on MAC addresses in data packets can also be used. A switch can possess multiple ports such that most of the network is connected directly to the switch or another switch that is in turn connected to a switch. The term switch can also include routers and bridges as well as other devices that distribute data traffic by application content e.g. a Web URL identifier . Switches may operate at one or more OSI model layers including physical data link network or transport i.e. end to end . A device that operates simultaneously at more than one of these layers can be considered a multilayer switch. In certain embodiments routers or other like networking devices may be used to forward data packets between networks using headers and forwarding tables to determine an optimum path through which to transmit the packets.

As employed herein an application server may be a server that hosts an API to expose business logic and business processes for use by other applications. Examples of application servers include J2EE or Java EE 5 application servers including WebSphere Application Server. Other examples include WebSphere Application Server Community Edition IBM Sybase Enterprise Application Server Sybase Inc WebLogic Server BEA JBoss Red Hat JRun Adobe Systems Apache Geronimo Apache Software Foundation Oracle OC4J Oracle Corporation Sun Java System Application Server Sun Microsystems and SAP Netweaver AS ABAP Java . Also application servers may be provided in accordance with the .NET framework including the Windows Communication Foundation .NET Remoting ADO.NET and ASP.NET among several other components. For example a Java Server Page JSP is a servlet that executes in a web container which is functionally equivalent to CGI scripts. JSPs can be used to create HTML pages by embedding references to the server logic within the page. The application servers may mainly serve web based applications while other servers can perform as session initiation protocol servers for instance or work with telephony networks. Specifications for enterprise application integration and service oriented architecture can be designed to connect many different computer network elements. Such specifications include Business Application Programming Interface Web Services Interoperability and Java EE Connector Architecture.

In various embodiments computers and computer systems described herein may have the following main components arithmetic and logic unit ALU control unit memory and input and output devices I O devices . These components can be interconnected by busses often comprising groups of wires or cables. The control unit ALU registers and basic I O and often other hardware closely linked with these sections can be collectively considered a central processing unit CPU for the computer system. The CPU may be constructed on a single integrated circuit or microprocessor.

The control unit control system or central controller directs the various components of a computer system. The control system decodes each instruction in a computer program and turns it into a series of control signals that operate other components of the computer system. To enhance performance or efficiency of operation the control system may alter the order of instructions. One component of the control unit is the program counter a memory register that tracks the location in memory from which the next instruction is to be read.

The ALU is capable of performing arithmetic and logic operations. The set of arithmetic operations that a particular ALU supports may be limited to adding and subtracting or might include multiplying or dividing trigonometry functions sine cosine etc. and square roots. Some may be programmed to operate on whole numbers integers while others use floating point to represent real numbers for example. An ALU may also compare numbers and return Boolean truth values e.g. true or false . Superscalar computers may contain multiple ALUs to facilitate processing multiple instructions at the same time. For example graphics processors and computers with SIMD and MIMD features often possess ALUs that can perform arithmetic operations on vectors and matrices. Certain computer systems may include one or more RAM cache memories configured to move more frequently needed data into the cache automatically.

Examples of peripherals that may be used in connection with certain embodiments of the invention include input output devices such as keyboards mice screen displays monitors printers hard disk drives floppy disk drives joysticks and image scanners.

Embodiments of the methods and systems described herein may divide functions between separate CPUs creating a multiprocessing configuration. For example multiprocessor and multi core multiple CPUs on a single integrated circuit computer systems with co processing capabilities may be employed. Also multitasking may be employed as a computer processing technique to handle simultaneous execution of multiple computer programs.

In various embodiments the computer systems data storage media or modules described herein may be configured and or programmed to include one or more of the above described electronic computer based elements and components or computer architecture. In addition these elements and components may be particularly configured to execute the various rules algorithms programs processes and method steps described herein.

While various embodiments of the invention have been described herein it should be apparent however that various modifications alterations and adaptations to those embodiments may occur to persons skilled in the art with the attainment of some or all of the advantages of the present invention. The disclosed embodiments are therefore intended to include all such modifications alterations and adaptations without departing from the scope and spirit of the present invention as set forth in the appended claims.

