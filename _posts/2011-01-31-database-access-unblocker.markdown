---

title: Database access unblocker
abstract: Embodiments of the invention provide for a centralized system for database access management. In specific embodiments, the centralized system provides for granting users temporal access to databases for a prescribed period of time, such that upon expiration of the time period the user is automatically blocked (i.e., added back to the blacklist) from accessing the database. Moreover, as a result of centralized management, reporting and auditing of actions related to database access management are greatly improved in that all actions are recorded and a historical database of such actions is available to system users. In addition, the centralized system provides for automatic notification to predetermined stakeholders based on occurrence of predetermined system actions, such as blocking a user from database access, unblocking a user from database access (i.e., granting access) or the like.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08606817&OS=08606817&RS=08606817
owner: Bank of America Corporation
number: 08606817
owner_city: Charlotte
owner_country: US
publication_date: 20110131
---
In general embodiments of the invention relate to database access management and more particularly methods devices and computer program products for centralized management on database access and specifically providing temporal access i.e. unblocking to users who are ordinarily blocked from access.

Many businesses organizations or the like rely on databases that store non public information NPI . For example financial institutions such as commercial banks implement databases that provide for storing credit card tables and related information. Such highly sensitive databases require monitoring for the purpose of track the use of such databases and ensuring that the non public information is kept as such.

In many instances businesses and organizations implement database monitoring applications as a means of monitoring the databases that store highly sensitive and or non public information. For example Guardium of Waltham Mass. provides commercial database monitoring applications are. Such commercial application implement firewalls or the like that serve to prevent authorized users from performing unauthorized actions such as executing queries on sensitive table changing sensitive data values adding or deleting critical tables creating new user accounts modifying privileges and the like. The firewalls or the like provide for comparing the authorized users credentials to stored access credentials to determine if the user is authorized for access. If the user s credentials do not match those stored access is denied to the user and the database connection is dropped.

However known commercial applications for database monitoring tend to be decentralized or distributed systems. This means that access lists otherwise referred to as blacklists are apparatus specific each database monitoring apparatus has its own blacklist associated therewith. As such managing of the blacklist across a business or organization becomes a difficult task in that a change to the business wide or line of business wide blacklist requires that a change be made to each blacklist associated with each database monitoring apparatus. The need to make multiple changes to multiple blacklists is prone to error and results in inconsistency amongst the multiple blacklists.

Additionally known commercial applications require that two changes to the blacklist be made when a user is given temporal access to a database. For example a first change to the blacklist is implemented when a user is given access to a database i.e. removed from the blacklist and a second change to the blacklist is required when the user no longer requires access to the database i.e. added back to the blacklist . Such a need to perform multiple changes to the list when a user is provided temporary access to a database is also susceptible to error in that often times the second change which adds the user back to the blacklist i.e. blocks the user from access fails to occur. In such instances in which the user is given temporary access but is not added back to the blacklist after the expiration of the temporary time period the database is compromised by being accessible to users that should be authorized for such access.

Therefore a need exists to develop methods devices computer program products and the like for managing the access to databases that store highly sensitive non public information. The desired methods devices computer program products should provide for central management of database access such that a change to the access list is incorporated business wide line of business wide or the like without the need to individually update or change each access list corresponding to a specific access monitoring system. Moreover by providing for centralized management higher scalability can be achieved and tighter access control is placed on to whom and under what condition a change to database access can be granted. In addition the desired methods devices computer program products should obviate the need to perform multiple updates changes to the access list in the event that a user is provided temporary access to the database. Additionally the desired methods devices computer program products should improve reporting and auditing of database access management.

The following presents a simplified summary of one or more embodiments in order to provide a basic understanding of such embodiments. This summary is not an extensive overview of all contemplated embodiments and is intended to neither identify key or critical elements of all embodiments nor delineate the scope of any or all embodiments. The summary s sole purpose is to present some concepts of one or more embodiments in a simplified form as a prelude to the more detailed description that is presented later.

Thus further details are provided below for a centralized system for database access management. The centralized nature of the database access system means that all the access lists within a business or a line of business can be managed centrally without the need to manage each access list independently. As a result of centralized management reporting and auditing of actions related to database access management are greatly improved in that all actions are recorded and a historical database of such actions is available to system users. In addition the centralized system provides for automatic notification to predetermined stakeholders based on occurrence of predetermined system actions such as blocking a user from database access unblocking a user from database access i.e. granting access or the like. Additionally by assigning an appropriate access level to various roles within the management system separation of duties is achieved which results in tighter overall control of to whom and under what conditions database access can be granted.

In specific embodiments the centralized system provides for granting users temporal access to databases for a prescribed period of time such that upon expiration of the time period the user is automatically blocked i.e. added back to the blacklist from accessing the database. Such automatic blocking of the user after expiration of the unblock time period obviates the need to perform a separate update change to the access list after the need for database access expires. As a result of automatic blocking oversights in failing to add the user back to the blocked access list are lessened if not eliminated and the need for constant manual intervention is significantly reduced.

An apparatus configured for centralized database access management defines first embodiments of the invention. The apparatus includes a computing platform including a processor and a memory. The apparatus further includes a database access management tool stored in the memory executable by the processor and configured to provide centralized database access management for one or more databases. The database access management tool includes a database access control routine configured to receive an unblock input that includes a time period for providing a database user access to a database from which the database user is currently blocked from access. Further the routine is configured to automatically block the database user from accessing the database upon expiration of the time period.

In specific embodiment of the apparatus the database access management tool further includes a user management routine configured to receive a database user addition input that adds a new database user to the database access management tool and provides for managing the new database user s access to the one or more databases. In further related embodiments the user management routine is further configured to receive a user deletion input that removes a database user from the database access management tool.

In additional specific embodiments of the apparatus the database access management tool further includes a tracking routine that is configured to track and store actions taken by the access management tool. In such embodiments the tracked actions may include but are not limited to adding a new database user deleting a database user logging into the database access management tool unblocking a database user from blocked access blocking a database user from access to an unblocked database prior to expiration of the predetermined time period and exporting data from the tool. In such embodiments the tracking routine may be further configured to provide a network accessible presentation of the tracked actions occurring within the database access management tool.

In additional specific embodiments of the apparatus the database access management tool further comprises a notification routine configured to automatically communicate a notification that notifies one or more predetermined entities of actions occurring within the database access management tool. In such embodiments of the invention the actions warranting automatic notifications may include but are not necessarily limited to unblocking a database user blocking a database user adding a new database user or deleting a database user.

Moreover in still further embodiments of the apparatus the database access control routine may be configured to receive a block input that blocks the database user s access to the database prior to expiration of the time period.

A method for centralized database access management defines second embodiments of the invention. The method includes providing access to a computer network based database access management tool. Additionally the method includes receiving via the database access management tool an unblock input that is configured to provide a database user access to a database from which the database user is currently blocked from access. The unblock input includes a time period for providing the database user access to the database. In addition the method includes automatically blocking via the database access management tool the database user from accessing the database upon expiration of the time period.

In specific embodiments the method further includes receiving via the database access management tool a database user addition input that is configured to add a new database user to the database access management tool and provides for managing the new database user s access to the one or more databases. In related embodiments the method may also include receiving via the database access management tool a database user deletion input that is configured to remove a database user from the database access management tool.

In still further specific embodiments the method includes storing in computing device memory information associated with the unblock input or any other predetermined actions performed on the database access management tool. In such embodiments the method may additionally include providing via the database access management tool access to the information associated with the unblock input or the other predetermined actions.

Additional embodiments of the method include automatically communicating via the database access management tool electronic notifications to one or more predetermined entities based on receiving the unblock input or any other predetermined actions occurring via the database access management tool. The electronic notifications notify the one or more predetermined entities of the action preformed via the tool such as unblocking a database user blocking a database user adding a new database user deleting a database user or the like.

Moreover additional embodiments of the method include receiving via the database access management tool a block input that is configured to block the database user s access to the database prior to expiration of the time period.

A computer program product provides for third embodiments of the invention. The computer program product includes a non transitory computer readable medium. The computer readable medium includes a first set of codes for causing a computer to provide access to a computer network based database access management tool. The computer readable medium additionally includes a second set of codes causing a computer to receive via the database access management tool an unblock input that is configured to provide a database user access to a database from which the database user is currently blocked from access. The unblock input includes a time period for providing the database user access to the database. Additionally the computer readable medium includes a third set of codes for causing a computer to automatically block via the database access management tool the database user from accessing the database upon expiration of the time period.

Thus as described in further detail below embodiments of the invention provide for a centralized system for database access management. In specific embodiments the centralized system provides for granting users temporal access to databases for a prescribed period of time such that upon expiration of the time period the user is automatically blocked i.e. added back to the blacklist from accessing the database. As a result of automatic blocking oversights in failing to add the user back to the blocked access list are lessened if not eliminated and the need for constant manual intervention is significantly reduced. Moreover as a result of centralized management reporting and auditing of actions related to database access management are greatly improved in that all actions are recorded and a historical database of such actions is available to system users. In addition the centralized system provides for automatic notification to predetermined stakeholders based on occurrence of predetermined system actions such as blocking a user from database access unblocking a user from database access i.e. granting access or the like. Additionally by assigning an appropriate access level to various roles within the management system separation of duties is achieved which results in tighter overall control of to whom and under what conditions database access can be granted.

To the accomplishment of the foregoing and related ends the one or more embodiments comprise the features hereinafter fully described and particularly pointed out in the claims. The following description and the annexed drawings set forth in detail certain illustrative features of the one or more embodiments. These features are indicative however of but a few of the various ways in which the principles of various embodiments may be employed and this description is intended to include all such embodiments and their equivalents.

Embodiments of the present invention now may be described more fully hereinafter with reference to the accompanying drawings in which some but not all embodiments of the invention are shown. Indeed the invention may be embodied in many different forms and should not be construed as limited to the embodiments set forth herein rather these embodiments are provided so that this disclosure may satisfy applicable legal requirements. Like numbers refer to like elements throughout.

As may be appreciated by one of skill in the art the present invention may be embodied as a method system computer program product or a combination of the foregoing. Accordingly the present invention may take the form of an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may generally be referred to herein as a system. Furthermore embodiments of the present invention may take the form of a computer program product on a computer readable medium having computer usable program code embodied in the medium.

Any suitable computer readable medium may be utilized. The computer readable medium may be for example but not limited to an electronic magnetic optical electromagnetic or semiconductor system apparatus device or propagation medium. More specific examples of the computer readable medium include but are not limited to the following a tangible storage medium such as a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory a compact disc read only memory CD ROM or other optical or magnetic storage device.

Computer program code for carrying out operations of embodiments of the present invention may be written in an object oriented scripted or unscripted programming language such as Java Perl Smalltalk C SAS or the like. However the computer program code for carrying out operations of embodiments of the present invention may also be written in conventional procedural programming languages such as the C programming language or similar programming languages.

Embodiments of the present invention are described below with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products. It may be understood that each block of the flowchart illustrations and or block diagrams and or combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create mechanisms for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable memory that can direct a computer or other programmable data processing apparatus to function in a particular manner such that the instructions stored in the computer readable memory produce an article of manufacture including instruction means which implement the function act specified in the flowchart and or block diagram block s .

The computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operational steps to be performed on the computer or other programmable apparatus to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide steps for implementing the functions acts specified in the flowchart and or block diagram block s . Alternatively computer program implemented steps or acts may be combined with operator or human implemented steps or acts in order to carry out an embodiment of the invention.

Thus further details are provided below for a centralized system for database access management. The centralized nature of the database access system means that all the access lists within a business or a line of business can be managed centrally without the need to manage each access list independently. As a result of centralized management reporting and auditing of actions related to database access management are greatly improved in that all actions are recorded and a historical database of such actions is available to system users. In addition the centralized system provides for automatic notification to predetermined stakeholders based on occurrence of predetermined system actions such as blocking a user from database access unblocking a user from database access i.e. granting access or the like. Additionally by assigning an appropriate access level to various roles within the management system separation of duties is achieved which results in tighter overall control of to whom and under what conditions database access can be granted.

In specific embodiments the centralized system provides for granting users temporal access to databases for a prescribed period of time such that upon expiration of the time period the user is automatically blocked i.e. added back to the blacklist from accessing the database. Such automatic blocking of the user after expiration of the unblock time period obviates the need to perform a separate update change to the access list after the need for database access expires. As a result of automatic blocking oversights in failing to add the user back to the blocked access list are lessened if not eliminated and the need for constant manual intervention is significantly reduced.

Referring to shown is block diagram of an apparatus configured for centralized database access management in accordance with embodiments of the present invention. The apparatus includes a computing platform having at least one processor and a memory in communication with the processor . The memory stores centralized database access management tool that is configured to manage database access. The centralized database access management tool may be implemented in conjunction with a conventional database monitoring application such as a Guardium application or like. As such the centralized database access management tool is configured to provide control over a database access denied list commonly referred to a blacklist which lists those individuals applications or other entities forbidden from accessing the database. The centralized nature of the tool means that changes to database access can be made at one entry point such a network based database access system and the changes can be affected across all the database monitoring apparatus without the need to make individual changes to access lists stored at each specific database monitoring device.

Centralized database access management tool includes database access control routine which is configured to receive an unblock input that provides for a database user to be granted access to a database from which the database user is currently being denied access i.e. the database user is removed from the access denied list i.e. blacklist . The unblock input includes a date time period which prescribes for the database user to be granted access to the database at a specific date and time and for access to subsequently denied at a later data and time. As such by defining the date time period within the unblock input the database user is automatically blocked from access the database upon expiration of the date time period . As such the tool prevents the need to have a separate block action request made to the system thereby eliminating the security risk involved with database users being granted access for longer periods of time then necessary due to failure to place the database user back on the access denied list.

Further computing platform also includes processor which may be an application specific integrated circuit ASIC or other chipset processor logic circuit or other data processing device. Processor or other processor such as ASIC may execute an application programming interface API layer not shown that interfaces with any resident programs such as centralized database access management tool or the like stored in the memory of the apparatus .

Processor may include various processing subsystems not shown embodied in hardware firmware software and combinations thereof that enable the functionality of apparatus and the operability of the computing device on a network. For example processing subsystems may allow for initiating and maintaining communications and exchanging data with other networked devices.

As previously noted in relation to the memory stores centralized database access management tool that is configured to manage database access. Centralized database access management tool includes database access control routine which is configured to receive an unblock input that provides for a database user to be granted access to a database from which the database user is currently being denied access i.e. the database user is removed from the access denied list i.e. blacklist . The unblock input includes a date time period which prescribes for the database user to be granted access to the database at a specific date and time and for access to subsequently denied at a later data and time. As such by defining the date time period within the unblock input the database user is automatically blocked from access the database upon expiration of the date time period . The database access control routine may additionally be configured to receive block input which is configured to block a database user from further accessing a database prior to expiration of the date time period . In specific instances a database user s need to access a database may no longer exists even though the date time period has yet to expire. In such instances the database access control routine is configured to receive the block input as a means of blocking the database user prior to the expiration of the date time period .

Database access management tool may additionally provide for user management routine that is configured to receive a database user addition input . The database user addition input provides for adding a new database user to the database management system for the purpose of managing the new database user s access to the database. In specific embodiments the default state upon adding a new user is to block the new database user from accessing the database. As described in more detail below an tool user i.e manager or the like may provide for an unblock input to grant the new user access to the database for a prescribed date time period. Additionally the user management routine is configured to receive a database user deletion input that provides for removing the user from the management tool. In specific embodiments of the invention as described in more detail below a manager or someone else designated as an tool user may add a new database to the system or delete a database user from the system.

The database access management tool may additionally database action tracking routine that is configured to track store and provide presentation of predetermined actions occurring on the database access management tool. The actions tracked may include but are not necessarily limited to unblocking a database user blocking a database user adding a new database user deleting a database user tool user logins data downloads and the like. The tracked information may include but is not limited to who performed the action the action performed the database user associated with the action the date of the action the applicable start and stop date times and the business reason for the action. In addition as described below a network accessible historical action database allows auditors other tool users or the like to track search filter or the like previous actions performed via the database access management tool.

Moreover the database access management tool includes a notification routine configured to automatically notify one or more entities of a predetermined action occurring via the database access management tool. The database action notification may be communicated via email text voice or the like to the database user on whom the action is performed managers or other entities designated within the line of business to whom the database user associated with the action belongs. The predetermined database actions that precipitate notifications may include but are not limited to unblocking a database user blocking a database user adding a new database user deleting a database user editing the unblock date time period or the like.

In addition database access management tool includes administrative routine configured to receive new tool user inputs and or receive edit existing tool user inputs . New tool user inputs may be provided for adding a new line of business. business group an administrator a manager an auditor and or central managers i.e. device apparatus for executing the database management tool . Edit tool user inputs provide for editing the information such as email addresses or the like associated with a tool user i.e. manager administrator auditor or the like a line of business or central manager.

Turning to a flow diagram is presented of a method for centralized database management in accordance with embodiments of the present invention. At Event access to a computer network based database access management tool is provided. The database access management tool provides centralized management if database access whereby only a single unblock or block input is needed to effect access change without the need to make changes to individual access denied lists blacklists associated with individual access monitoring apparatus.

At Event an unblock input is received via the database access management tool. The unblock input is configured to provide a database user access to a database from which the database user is currently blocked from access. Additionally the unblock input includes a date time period for providing the database user access to the database. In other words the unblock input serves to temporarily remove the database user from an access denied list blacklist.

At Event the database user is automatically blocked from accessing the database upon expiration of the date time period. Automatic blocking of the database user upon expiration of the date time period obviates the need to perform a separate block action at the end of the time period.

Database access management tool user s may include manager administrator and or auditor . In specific embodiments manager s are authorized to access database management tool to unblock database user s from access to the database i.e. temporarily remove the database user from the black list and or block database user s to the database i.e. add the database user to the black list .

Once unblock requests or block requests are received at apparatus they are communicated to the database server via the database monitoring devices . Based on updates to the access denied black lists the database user is either granted temporary access to the database i.e. unblocked or denied access to the database i.e. added back to the access denied black list .

Additionally the user interface of includes an add blocked user link configured to activate the user interface shown in to provide for adding a new database user to the system. As previously noted in specific embodiments only a manager associated with the database user s line of business business group is authorized to add new database users. The user interface shown in includes data entry fields for database user identifier field manager identifier field which is shown as prefilled based on manager login to the system line of business business group field which provides for a drop down menu of the lines of business business groups database user first name field database user last name field and database user email address field . If the database user being added belongs to multiple lines of business business then the manager is required to make separate new user inputs for each line of business business group.

In specific embodiments of the invention in addition to the database user being an individual associate employee the database user may be a service account i.e. a non human entity such as a computer program or the like that has access to the database. In specific embodiments of the invention service accounts are implemented for non interactive batch processing. Thus user interface provides for a service account query for identifying the database user as a service account and an account owner field for entering the account owner if the database user is a service account. Additionally if the new database user is a service account the first name field last name field and email address field should be filled in with the service account owner s names and email address. Additionally user interface includes a cancel link configured to cancel the addition of the new database user and a block user link configured for adding the new database user as a blocked user.

In the illustrated embodiment of the entry in the pending action list reflects that the pending action is to block the database user. According to specific embodiments of the invention a short period of time for example up to thirty minutes may ensue between when a new database user is added to the system and when a backend job such as a block synchs up with an underlying database monitoring system. The highlighted entry in the unblocked user list reflects that the current state of the new database user is unblocked. Thus the new user was recently added to the system for example within the previous thirty minutes and as such the new user is currently unblocked from the database i.e. has access to the database with a pending action to block access for the new database user to occur when the next backend script runs.

Referring to a user interface is shown for removing a database user from the access management system. The user interface may be accessed based on a manager activating the remove user link in the remove user column of the user management tab as shown in . In specific embodiments a manager may only remove database user from their specific line of business business group. In addition if a manager is both a manager and a database user the manager can not remove themselves from the system i.e. the remove user link will not be displayed for the manager database user within the database user listing when the manager is logged in. The user interface includes database user identifier field name field user type field database user line of business business group field and business reason dialog box which requires entry of a business reason for removing the user such as user has left the entity company no longer need to be blocked from access etc. The user identifier field name field user type field and line of business field is pre populated with entries based on activation of the remove user link . The user interface additionally includes a cancel link configured upon activation for cancelling the removal of the database user and a remove user link configured upon activation for executing removal of the database user from the system i.e. the database user is no longer blocked from accessing the database. It should be noted that removing a database user does not remove the audit trail associated with that particular user i.e. any block and or unblock actions associated with the removed user will remain in the historical database of system actions .

Turning the reader s attention to a user interface is shown that is configured for unblocking a database user for a prescribed time period i.e. allowing the database user access to a database for a temporary period of time in accordance with embodiments of the present invention. As previously noted in specific embodiments only managers are allowed to unblock database users. Unblocking of database access can occur in at least two manners 1 a database user previously existing in the system can be unblocked or 2 a new database user can be added to the system and an unblock action submitted in conjunction with adding the new user. In the illustrated user interface of an unlock input is requested for an existing database user. The user interface includes access control tab user management tab and history tab . A manager has activated access control tab to display the related information shown. The blocked user list blocked user identifier column first name column last name column line of business business group column and unblock user column . Each entry in the unblock user column includes an unblock link which upon activation provides for display of the user interface shown in which is configured for an unblock request. Additionally the blocked user area provides for an export link configured upon activation to export selected data from the blocked user list to another application such as a spreadsheet application or the like.

Referring to a user interface is depicted that is configured for requesting unblock of a database user. The user interface provides for data entry fields including database user field manager field line of business business group field start date time field stop date time field ticket type field ticket number field and business reason dialog box . The database user field manager field and line of business field are pre populated based on activation of the unblock link shown in the user interface of . The start time and stop time are entered by the manager requesting the unblock and reflects the date and time for initiating processing of the unblock and for returning the database user to the blocked state. During the unblock period the database user is granted access to the secure database The business reason is entered in the dialog box and provides for a description of the reason for unblocking the database user and granting access to the sensitive tables information included therein. Additionally user interface includes a cancel link configured to cancel the unblock request and a submit unblock link configured for submitting the unblock request.

Referring to a user interface is shown that may be accessed once the unblock start time has occurred and the database user has moved from the blocked state to the unblocked state. The user interface includes access control tab user management tab and history tab . The access control tab has been activated to display the information shown in user interface . Once the start date time occurs and the backend process runs to move the database user from the blocked state to the unblock state the database user will be moved from the blocked user area to the unblocked area . The database user s entry in the unblocked list is highlighted to reflect the fact that an action is pending i.e. the move from the unblocked state back to the block state after expiration of the unblock time period. As such a pending action remains in the pending action list reflecting the pending return of the database user to the blocked state.

In addition to unblocking an existing database user the system also provides for unblocking a newly added user. shows a user interface configured for unblocking a newly added user in accordance with an embodiment of the present invention. The user interface includes an access control tab user management tab and a history tab . The access control tab has been activated to display the information shown in user interface . A new database user request has been entered. As previously noted according to specific embodiments upon entering a new database into the system the user is designated as unblocked until the next script is executed and the database used moves to the blocked state which is the default new user state. As such the unblocked user list includes a database user entry which is highlighted to reflect an action pending i.e. a move from the unblocked state to the blocked state . In addition the pending action list includes a database user entry that reflects the pending block action. The edit column within the pending action list includes an edit link which upon activation displays the user interface shown in which provides for a manager to create an unblock request for the newly added database user. As such the manager can create an unblock request prior to the occurrence of the pending block action.

As previously noted in specific embodiments any newly added database user by default is added to the system as blocked. In addition when the time period associated with an unblock action expires the database user is automatically moved back to the blocked state. Additionally the system may be configured to allow for a manager to block a database user prior to expiration of the unblock time period. For example if the database user no longer has a need to access the database or otherwise has completed their access needs. provides for a user interface configured for allowing a manager to block a database user from accessing the database prior to expiration of the unblock time period. The user interface includes an access control tab user management tab and a history tab . The access control tab has been activated to display the information shown in user interface . The unblocked user list includes database user entry which reflects a database user currently in an unblocked state. The unblocked user list includes block user column which includes block link . The block link may be activated to request that the database user by blocked from further access to the database prior to expiration of the unblock time period.

Referring to a user interface is depicted that provides for records of system action in accordance with embodiments of the present invention. The user interface includes an access control tab user management tab a history tab and an administration tab . The history tab has been activated to display the information shown in user interface . The historical record list is configured to provide an audit trail of all actions occurring within the system. The actions include but are not necessarily limited to adding a ne database user to the system deleting a database user from the system unblocking a database user fro a prescribed time period blocking a database user prior to expiration of the unblock time period system login by a manager administrator or auditor exporting of data to another application or the like. In specific embodiments the managers administrators and auditors have access to the historical record list . The historical record list includes action identifier i.e. ticket number column activity by i.e. who performed the action identifier column name of who performed the action column role of who performed the action line of business column action performed column database user identifier column name of database user column role of database user column date action occurred column start time date of action column stop time date of action column and reason for action column . In addition user interface provides for search engine which is configured to provide for searching of an action within a selected search field as provided by search drop down menu . As such the actions may be searched by database user identifier activity by identifier line of business ticket number or the like. In addition user interface provides for filter mechanism which is configured to filter the historical record list according to filter criteria as selected by filter drop down menu . As such the historical record list may be filtered by a specific action type database user identifier line of business or the like. In addition a check box is provided to hide or include system logins from the historical record list .

Additionally user interface of includes an add LOB link which upon activation allows an administrator to add a line of business business group to the database access system. provides a user interface for adding a line of business in accordance with embodiments of the present invention. The user interface of may be displayed upon activation of the add LOB link shown in the user interface of . The user interface includes data entry fields such as line of business name field comments field email address fields and central manager field which as shown is depicted in the form of a drop down menu. The email addresses associated with the line of business are configured to receive a notification email when designated actions occur affecting the line of business. The designated actions may be adding a database user adding an unblock request for a prescribed time period and the like. Additionally user interface includes a cancel link configured to cancel the addition of the new line of business and a add LOB link configured for executing the adding of the line of business.

Additionally user interface of includes an add auditor link which upon activation allows an administrator to add an auditor to the database access system. A user interface not shown may be displayed upon activation of the add auditor link shown in the user interface of . The user interface includes data entry fields such as auditor identifier field line of business field auditor first name field auditor last name field and auditor email address field.

Additionally user interface of includes an add manager link which upon activation allows an administrator to add a manager to the database access system. A user interface not shown may be displayed upon activation of the add manager link shown in the user interface of . The user interface includes data entry fields such as manager identifier field line of business field manager first name field manager last name field and manager email address field.

Additionally user interface of includes an add administrator link which upon activation allows an administrator to add an administrator to the database access system. A user interface not shown may be displayed upon activation of the add administrator link shown in the user interface of . The user interface includes data entry fields such as administrator identifier field administrator first name field administrator last name field and administrator email address field.

Additionally user interface of includes an add central manager link which upon activation allows an administrator to add a central manager to the database access system. A user interface nit shown may be displayed upon activation of the add central manager link shown in the user interface of . The user interface includes data entry fields such as fully qualified domain name field IP address of the central manager field CLI login field CLI login password field GUI login field GUI login password field and guard group name manager email address field.

As previously noted the database access system is configured to automatically communicate notifications such as email notifications or the like to one or more entities based on an action occurring within the system. The actions which prompt automatic communication of a notification include but are not necessarily limited to adding a new database user deleting removing a database user blocking a database user from access unblocking a database user editing an unblock time period or the like. The entities that may be configured to receive the automatic notifications include but are not necessarily limited to the database user on whom the action is performed the manager that performed the action a predetermined corporation business distribution group and any email address identified in the line of business business group profile.

Thus present embodiments of the invention described above provide for a centralized system for database access management. In specific embodiments the centralized system provides for granting users temporal access to databases for a prescribed period of time such that upon expiration of the time period the user is automatically blocked i.e. added back to the blacklist from accessing the database. As a result of automatic blocking oversights in failing to add the user back to the blocked access list are lessened if not eliminated and the need for constant manual intervention is significantly reduced. Moreover as a result of centralized management reporting and auditing of actions related to database access management are greatly improved in that all actions are recorded and a historical database of such actions is available to system users. In addition the centralized system provides for automatic notification to predetermined stakeholders based on occurrence of predetermined system actions such as blocking a user from database access unblocking a user from database access i.e. granting access or the like. Additionally by assigning an appropriate access level to various roles within the management system separation of duties is achieved which results in tighter overall control of to whom and under what conditions database access can be granted.

While certain exemplary embodiments have been described and shown in the accompanying drawings it is to be understood that such embodiments are merely illustrative of and not restrictive on the broad invention and that this invention not be limited to the specific constructions and arrangements shown and described since various other updates combinations omissions modifications and substitutions in addition to those set forth in the above paragraphs are possible.

Those skilled in the art may appreciate that various adaptations and modifications of the just described embodiments can be configured without departing from the scope and spirit of the invention. Therefore it is to be understood that within the scope of the appended claims the invention may be practiced other than as specifically described herein.

