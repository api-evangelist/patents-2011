---

title: System and method for modeling and optimizing the performance of transportation networks
abstract: A method and system are provided for modeling and optimizing the performance of transportation networks, e.g. for traffic signal retiming. The modeling and optimization may be implemented by obtaining a video signal from a camera at a first intersection; processing data from the video signal to determine at least one value indicative of a corresponding traffic flow through the first intersection; sending the at least one value to a remote processing entity via a wireless network to enable the remote processing entity to update a model of the transportation network, the transportation network comprising the first intersection and at least a second intersection; receiving from the remote processing entity, an instruction for a controller at the first intersection, the instruction having been determined from an update of the model based on data from at least the second intersection; and having the instruction implemented by the controller at the first intersection to optimize at least a portion of the transportation network.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08666643&OS=08666643&RS=08666643
owner: Miovision Technologies Incorporated
number: 08666643
owner_city: Kitchener
owner_country: CA
publication_date: 20110201
---
This application claims priority from U.S. Provisional Application No. 61 300 240 filed on Feb. 1 2010 the contents of which are incorporated herein by reference.

The following relates generally to systems and methods for monitoring and controlling an area being observed and has particular utility in modeling and optimizing the performance of transportation networks.

Retiming traffic signals can be one of the most cost effective ways to improve traffic flow within a road network. Optimized traffic signals can reduce traffic delays and stops considerably as motorists travel along a section of road. The benefits of optimized traffic signals experienced by motorists include improved safety reduced fuel consumption and reduced emissions.

Traffic data counts are typically conducted at intersections for three primary reasons. Firstly to determine the impact of a proposed physical redesign of an intersection corridor or network i.e. adding a new lane to an existing intersection . Secondly to determine the impact of a proposed change to land usage along an intersection corridor or network i.e. changing an empty field into a condominium . Thirdly to determine the impact of a proposed change to the signal phasing of an intersection corridor or network e.g. to give more green time to the North South approach .

In one aspect there may be provided a method of modeling and optimizing a transportation network the method comprising receiving from a first processing module via a wireless network at least one value indicative of a corresponding traffic flow through a first intersection the at least one value having been obtained by processing data from a video signal from a camera at the first intersection using the at least one value to update a model of the transportation network the transportation network comprising the first intersection and at least a second intersection analyzing the model to determine an instruction for optimizing a controller at the second intersection and sending the instruction to a second processing module at the second intersection via the wireless network to enable the second processing module to have the instruction implemented by the controller at the second intersection to optimize at least a portion of the transportation network.

In another aspect there may be provided a method of modeling and optimizing a transportation network the method comprising obtaining a video signal from a camera at a first intersection processing data from the video signal to determine at least one value indicative of a corresponding traffic flow through the first intersection sending the at least one value to a remote processing entity via a wireless network to enable the remote processing entity to update a model of the transportation network the transportation network comprising the first intersection and at least a second intersection receiving from the remote processing entity an instruction for a controller at the first intersection the instruction having been determined from an update of the model based on data from at least the second intersection and having the instruction implemented by the controller at the first intersection to optimize at least a portion of the transportation network.

In yet another aspect there may be provided a method of modeling and optimizing a transportation network the method comprising receiving an instruction from a remote processing entity via a wireless network the instruction for having a controller optimize at least a portion of the transportation network at a first intersection the instruction having been determined by the remote processing entity analyzing a model of the transportation network comprising the first intersection the model having been updated by data obtained at one or more additional intersections in the transportation network and sending the instruction to a communications interface coupled to the traffic signal controller.

There may also be provided computer readable storage medium comprising computer executable instructions for performing the above methods. There may also be provided devices or systems comprising respective processors and memory comprising computer executable instructions for performing the above methods.

It has been recognized that many traffic signals are not retimed because it is inconvenient and costly to do as a result of the many manual processes required. The solution described herein automates the manual processes and proposes a more convenient and cost effective solution to current methods being employed.

It has also been recognized that the underlying framework discussed herein can be used to both monitor and control aspects of any observed area e.g. a traffic intersection or other physical environment. As such the solution described herein can not only aid in automating traffic signal retiming but also in more generally modeling and optimizing the performance of transportation networks. For example a traffic intersection can be monitored not only using a camera but also other sensors e.g. wireless vibration sensors strain sensors microphones thermistor moisture sensors lidar radar ground loops etc. to obtain data and by communicating such data from a local processing module to a remote processing site various aspects of the intersection can be determined and controlled and the data mined for further analyses. Data acquired from the sensors can also augment the data obtained from a video signal to enable more comprehensive optimizations to be conducted. For example sensing historical origin direction OD data of vehicles passing through an intersection can aid in determining how to retime a particular traffic light at other intersections in the traffic network.

The implementation of an adaptive traffic signal control system as described herein can be based on a single camera a single processing unit located at the intersection and a serial dongle e.g. to provide a communication interface . This solution is significantly lower cost than traditional induction loops leverages existing broadband wireless networks to minimize network installation costs and uses economies of scale of a cluster of computing resources to minimize the need for expensive controller hardware at the intersection.

The framework described below can be utilized to provide a monthly subscription based service to a municipality or other entity without the large capital costs upfront since the hardware installation process is easier and more cost effective and the cluster computing resources provide economies of scale to service multiple customers. All of these benefits represent a significant cost savings and thus ability to more easily upgrade a traffic system to utilize adaptive signal control.

Turning now to the figures illustrates an example system for monitoring and controlling an observed area hereinafter referred to as the system for brevity. The system includes a local processing module LPM which is communicably connectable to a controlled system that resides in an observed area . The LPM may be in the vicinity of the observed area directly within the observed area or otherwise within a communicable range of the observed area . The LPM is operable to collect or otherwise obtain data from or about the observed area process that data if applicable and communicate via a wireless network with a remote processing entity to provide the data itself or a processed version thereof for either real time processing or post processing as will be explained in greater detail below. As will be discussed below it has been found that communicating via an existing wireless network such as a cellular network e.g. GSM GPRS networks 3G or 4G networks such as EDGE UMTS and HSDPA LTE Wi Max etc. is particularly advantageous in implementing the system described herein due to inherent coverage and ubiquity and thus ability to effectively connect one or more observed areas to the remote processing entity for operating as discussed below.

In the example shown in the LPM obtains data from a camera e.g. a video signal as well as any one or more sensors that are capable of observing and capturing data pertaining to the observed area . Collectively the data that is obtained from or about the observed area may be referred to as observed data hereinafter. The observed data that is processed is sent to the remote processing entity according to a particular protocol e.g. User Datagram Protocol UDP such that one or more messages or packets are sent that include relevant information or data obtained from an analysis of the applicable observed data e.g. traffic flow determined from a video signal . The observed data or portions thereof may also be sent directly to the remote processing entity as streaming data at a later time by first storing the data in a data store and sending it later shown as store and forward data or by storing the data in the data store and making it available out of band e.g. using a physical medium such as a USB dongle removable flash drive etc. It can therefore be appreciated that the LPM can be operated to deliver the observed data or a processed version thereof using various channels and using various protocols and techniques. For example unprocessed streaming data could be provided to the remote processing entity for subsequent processing whereas the same data after being processed can be used to perform a real time analysis of the current conditions of the observed area and other observed areas in a network of observed areas as discussed below in order to return an instruction to the LPM for controlling or otherwise influencing the control of the controlled system . The controlled system may also communicate data back to the LPM e.g. for reporting its actual behaviour obtaining status information such as whether or not a command has been executed heartbeat ping i.e. whether or not controlled system is communicating etc.

The remote processing entity is also communicable via the wireless network in order to obtain the streaming processed and store and forward data from one or more LPMs . In this example the remote processing entity includes both a real time processing server for processing data as it arrives and with minimal latency determine and provide an appropriate instruction to be returned to one or more of the LPMs e.g. by receiving data from one LPM and providing an instruction to one or more other LPMs to pre emptively control other observed areas . The remote processing entity may also include a post processing server to enable data to be mined in subsequent analyses i.e. by analyzing the data when a result of the analysis is not required in real time. An operations server is also included to enable an administrator to have access to a central repository of operational data to control and or update the servers to initiate upgrades to the system including remotely upgrading LPMs etc.

In this example an operations client is provided which may run on a personal computer e.g. mobile computer desktop computer etc. to allow operations personnel to access the operational data stored on the operations server via the Internet or through another available interface or connection. The operations client can also be used to obtain reports on the status of the system . A customer browser may also access the remote processing entity via the Internet to allow a customer i.e. an entity which has an interest in any one or more of the observed data itself the processed data or data obtained through post processing to monitor and adjust parameters of an associated observed area or network of observed areas .

Both the real time processing server and the post processing server may incorporate third party data e.g. transit system information into their analyses. In order to obtain such third party data a third party system may be communicatively connectable to the remote processing entity e.g. via the wireless network the Internet or through another connection as illustrated in .

The third party system shown in may also represent an entity that obtains a copy of data from the remote processing entity e.g. for data mining or other purposes. For example the video obtained by the cameras may be streamed stored and forwarded or otherwise provided to a third party system for subsequent processing such as for integrating the video feeds into a network of security cameras or traffic cameras or provides video for policing insurance companies television stations etc. Similarly the observed data may be used to generate a model of a particular network such as a grid of roadways intersections and traffic flow thereon as discussed more fully below . Any such model can also be provided to a third party system in order to update consumer directed online map programs GPS devices or any other application or device that may rely on traffic flow data for providing ongoing information to the consumer. The observed data obtained by the sensors may also be made available to a third party system for continual monitoring or subsequent data mining. Data mining can also be performed by the post processing server and the results provided to third party systems . For example observed traffic flow and various other criteria can be obtained to determine the environmental impact achieved i.e. reduction in vehicle green house gas emissions by improving signal re timing or other optimization techniques to obtain carbon credits or otherwise track such environmental statistics for later use.

It can be appreciated that although the configuration shown in illustrates having the copy of data sent to the third party system via the remote processing entity in other example embodiments at least some of the observed data could be sent to the third party system directly from the LPM . However by routing the data through the remote processing system the operations server can track data that is being sent in order to provide subscription based services to the third party systems thus offloading such administrative burden from the LPM .

In the example shown in a first real time processing server is responsible for a pair of local processing systems one for each observed area and corresponding controlled system . As shown in multiple LPMs may be included in or otherwise operated by a system e.g. when multiple cameras are used at the same intersection. In such a scenario one of the LPMs can be made responsible for providing instructions to the controlled system and thus may be coupled thereto whereas other LPMs in that system can be configured to communicate data to the LPM connectable to the controlled system . It can be appreciated that in other embodiments each LPM can be connectable to both the remote processing entity and one or more controlled system and the remote processing entity can be responsible for determining to which of the LPMs the instruction should be sent. This can also provide redundancy to a particular system e.g. to accommodate failure of one LPM .

A second real time processing server similarly monitors and controls a plurality of local processing systems in this example and further details need not be repeated. It can also be seen in that the real time processing servers and can communicate with each other such that a result of a real time analysis in one of the servers can be used to control operation of a controlled system whose responsibility falls under another of the servers . In this way for example traffic flow at one intersection can be used to control traffic signal timing in one or more other intersections whether such intersections are controlled by the same real time processing server or another processing server .

The remote processing entity then receives the data at . In this example data which is to be subsequently or otherwise separately processed by the post processing server is sent thereto at so that one or more post processing routines may be performed at . For example video or other multimedia data may be provided to the post processing server to analyze the video content for predetermined or provided parameters to offload processing from LPM. Such an example is more fully described in co pending U.S. patent application Ser. No. 12 104 092 filed on Apr. 25 2007 and entitled Method and System for Analyzing Multimedia Content the entire contents of which are incorporated herein by reference.

The remote processing entity also provides applicable data i.e. data which has been at least partially processed by LPM to the real time processing server in order to have one or more real time analyses conducted at . Such real time analyses may incorporate data provided at by a third party system e.g. transit scheduling in a traffic model analysis.

As discussed above the real time analysis may produce an instruction typically to be provided to another LPM namely LPM in this example for controlling its controlled system and thus a corresponding observed area e.g. a set of traffic lights based on a determination made in the observed area associated with LPM. For example traffic flow observed by LPM can be used to determine a modification to traffic signal timing at the intersection observed and controlled by LPM. In the example shown in a reply e.g. a data packet comprising an instruction is generated and sent at and received by LPM at . LPM may then determine the instruction from the reply and send the instruction to the controlled system in its observed area at which is received by the controlled system at . For example LPM may send a traffic signal timing instruction to a traffic signal controller TSC see via another component coupled thereto further details of which are provided below. The instruction received at may then be executed at thus monitoring data obtained by LPM to control an observed area controlled by LPM. It can be appreciated that by communicating via the remote processing entity not only can at least some processing be offloaded from the LPM and thus reduce processing burden at the LPMs a larger network of observed areas can be modeled and optimized and subsequently controlled using the framework shown in . As such only two LPMs are shown in for ease of illustration and many additional LPMs may also be instructed by the remote processing entity as a result of a particular real time analysis at . Similarly LPM may also be instructed based on data obtained from other LPMs in a network of LPMs .

It has also been realized that the framework shown in is particularly suitable to enable the remote processing entity to centrally control and distribute not only instructions for optimizing the operation of a network of controlled systems but also for upgrading firmware on the LPMs thus avoiding the need to visit each site in order to do so. For relatively large and geographically spaced observed areas in a particular network the ability to remotely upgrade and modify firmware or any other controllable component of the LPM is particularly efficient and thus cost effective. By allowing customers to access the operations server e.g. via a security controlled access via the customer browser the customer can initiate or authorize upgrades that are suggested by the remote processing entity . For example new regulations may impose restrictions on the way a network of traffic lights can be controlled and the customer would be able to communicate with the remote processing entity using the customer browser to establish a suitable upgrade to account for these restrictions.

In this example the analytics module includes a traffic flow algorithm for performing a real time analysis of traffic flow as determined from a video signal fed to the LPM from the camera . also shows a vehicle count algorithm which may be used to perform pre processing for a post processing routine performed by a post processing server not shown in . The outputs of the analytics module are provided to an LPM application programming interface API which communicates with the remote processing entity substantially in real time e.g. by accessing a communication sub system not shown configured to access and communicate over the wireless network .

The traffic flow algorithm in this example embodiment represents or otherwise includes computer executable instructions i.e. software that is capable of transforming a video signal into one or more numeric values that correlate with one or more traffic flows observed in the video signal. It can be appreciated that a plurality of traffic flow algorithms may be utilized to obtain multiple independent numeric values which correspond to the same traffic flow in order to better predict the actual flow at any given time. Similarly different traffic flow algorithms may be required to determine multiple traffic flows in the same intersection e.g. in different directions . As such the traffic flow algorithm shown in may represent any one or more traffic flow algorithms . The traffic flow algorithm s should run in real time or substantially in real time in order to process the video signal as soon as it can be captured from the camera . The traffic flow algorithm s in this example is are executed on an embedded electronics platform e.g. the PCB as mentioned above.

The video module also includes a streaming video module operable for streaming the video signal received from the camera to the remote processing entity without performing any analytics at the LPM and a video data storage for storing video content e.g. a video file comprising a particular number of minutes or hours of video for later transmission or out of band delivery as discussed above.

To handle or otherwise process data obtained by the sensors a sensor module can also be included in the LPM . Similar to the video module the sensor module includes a sensor analytics module to enable analytics algorithms to be applied to sensor data before it is sent to the remote processing entity . The sensor module in this example also includes a streaming sensor module to enable sensor data to be streamed to the remote processing entity and a sensor data storage to enable sensor data to be stored for later transmission or to be provided for out of band delivery.

The LPM API represents or otherwise includes computer executable instructions i.e. software that controls the operation of the LPM . The LPM API can securely communicate with the remote processing entity via an internet protocol IP connection such as a broadband cellular modem or Ethernet connection and is capable of performing firmware upgrades of all software in or controlled by the LPM as noted above. The LPM API should also be capable of communicating with a communication interface closely coupled to the TSC as will be discussed in greater detail below. In some embodiments wherein the LPM and communication interface are physically separated the LPM API may be configured for participating in short range wireless communication exchanges such as over Bluetooth Zigbee WiFi etc. capable of running continuously at or near the observed area . By communicating with the sensor model and video module the LPM API can continuously or periodically record and store any particular number of hours of video data and or sensor data and execute an on demand or periodic delivery of stored data to the remote processing entity . The LPM API may therefore be configured to obtain video files and sensor data from the video data storage and sensor data storage respectively in order to provide unprocessed data i.e. data that has not been processed by the analytics module to the remote processing entity e.g. for subsequent data mining periodic post processing etc. as well as being able to direct analyzed data to the remote processing entity .

The LPM API is also operable in this example embodiment to communicate with the streaming video module and or sensor streaming module or itself contain the streaming video module and or sensor streaming module or execute equivalent operations to provide continuous periodic or on demand streaming of live video and or sensor data obtained by the camera and or sensors . The camera itself should be weather rated and capable of capturing a high quality video signal with a multi year operational capability i.e. suitable longevity . The sensors similarly should be weather rated and capable for long term use. The streaming video module shown separately from the LPM API for ease of explanation is provided to capture the camera s video signal for streaming data directly to the remote processing entity if applicable or to store the raw video signal as a video file in a video data storage . The sensor module may also be used to obtain data captured by the sensors and to store such data in a sensor data storage .

The LPM API is also communicatively connectable to the communication interface coupled to the TSC . The communication interface may also be referred to generally as a signal controller interface device. In this example the LPM API utilizes a short range communications protocol as noted above in order to pass along instructions received from the remote processing entity . The TSC is therefore capable of being modified or otherwise instructed by the communication interface in order to enable the remote processing entity and the LPM to control its operation. In this example the TSC is operable to control the timing of traffic lights at an intersection i.e. the observed area in this example. The TSC is typically housed in a mechanical enclosure or traffic cabinet with one TSC typically being located at each intersection. The communication interface is typically a hardware device that resides in the traffic cabinet to provide a secure wireless interface to the TSC s communication port not shown . The communication interface may comprise a PCB that executes communication firmware and which should be temperature rated to accommodate ambient weather conditions.

The remote processing entity in this example takes advantage of cloud computing e.g. by utilizing a cluster of computing resources that are location independent of the LPM . The use of cloud computing or server farms enables the remote processing entity to be scalable to accommodate ever increasing LPMs in a particular network as well as new networks with their constituent LPMs come online. The LPM shown in is controlled in this example by a particular real time processing server which is responsible for monitoring and controlling one or more LPMs associated with one or more intersections . The real time processing server comprises a traffic API for handling incoming data from the LPM API and for returning instructions thereto.

The traffic API is in this example is responsible for applying cryptographic and other security related measures such as encryption decryption authentication etc. as well as any data compression decompression and data translation techniques. The communication protocols and layers should be highly optimized for low latency and should be scalable to accommodate additional in field installations. The traffic API can also be used to log incoming and outgoing messages pertaining to traffic flows and signal adjustments for further off line analyses.

The traffic API is also used to direct incoming data into a grid model . The grid model is a model of a grid or network of grids e.g. mathematical visual or both each grid comprising one or more intersections and is updated in real time as the data arrives from the typically multiple LPMs in the grid. As shown in the grid model may be updated using data provided by a third party system e.g. to incorporate transit routes schedules updates about delays etc. into the model being optimized. The data from the grid model e.g. snapshots thereof may also be provided to third party systems e.g. to provide traffic data for new stations online mapping programs etc.

As the grid model is updated a grid optimization module is used to obtain snapshots of the grid model in order to analyze the most recent snapshot for optimizing the grid or the overall network of grids. It can be appreciated that by taking frequent snapshots of the grid model predictive optimizations can be performed in order to re time the network in substantially real time without having to account for continual changes occurring to the model while the optimization routine is being performed. A snapshot of the grid model in this example refers to a representation of a current state of the grid model at a particular instance of time.

A number of different types of adaptive signal control optimization methods exist. The three main types of optimization methods are 

Domain constrained optimization where an optimization search domain is very much limited to avoid high fluctuations of signal timings e.g. Split Cycle and Offset Optimization Technique SCOOT with splits and offsets .

Time constrained optimization where the optimization search process is constrained by time and or structural boundaries based on the limits of local controllers e.g. Real Time Hierarchical Optimized Distributed Effective System RHODES Optimized Policies for Adaptive Control OPAC etc. .

Rule based adjustment where simple functional relationships between parameters that describe a change of traffic conditions and resulting signal timings are used e.g. time of day phase selection .

Traditionally it has been generally held that domain constrained adaptive control is the best approach for determining traffic signal timing as it finds the optimal solution given a set of constraints independent of the amount of time that it takes to compute the best solution. Time constrained and rule based adjustment type optimizations are more commonly applied in real time and near real time systems since it is possible to limit the optimization computation to a certain number of seconds to facilitate real time performance. The downside of these approaches is that the optimization that is computed is not typically globally optimal.

The systems herein described enable an adaptive configuration to be implemented based cloud computing and therefore have access to much more computational power that a traditional implementation where the optimization processes are executed on hardware at the intersection. As a result the implementation herein described is free from the computational limits inherent with typical optimization methods. In other words the systems herein described can run the sophistication of domain constrained optimization with the real time facility of a time constrained model. To do so the system can encourage users to not overly limit the domain constraints in their model in order to minimize the amount of delay experience by the driver in traffic.

Some traditional adaptive systems update their signal timing every 5 15 minutes which means that they are unable to change signal timings to react to individual vehicles in a network. Adaptive systems that operate on a real time or cycle basis are able to adjust traffic signal timing in real time enabling a more predictive model. These predictive models are able to optimize traffic flow per vehicle or per vehicle group of vehicles. The implementation of adaptive control performed by the grid optimization module in this example is real time and is predictive. Also whereas some adaptive control systems utilize only historical data to determine optimal signal timings for a given time of day or day of week combination and other systems use only current traffic conditions the grid optimization module can be configured to use a combination of these approaches depending on the saturation of vehicles in a network which yields a more optimal result. In addition some adaptive systems are based on measuring the traffic queues at intersection directly and then try to minimize the overall length of the traffic queues and other systems measure the flow through intersections and model the length of queues with the objective of minimizing the length of the modeled queue wherein both methods are substantially equivalent in terms of optimizing traffic flow. The grid optimization module is operable to model the length of traffic queues which can allow the use of only one camera per intersection in some embodiments vs. one camera per approach which has the effect of reducing cost. The grid optimization module is also operable to process measurements of the origin destination OD i.e. left and right turns movements at an intersection and the OD movements throughout a network acquired by sensors . The system s ability to measure ODs at intersections and at the network level thus enables a more optimized transportation network model and further reduces the need for costly time consuming system calibrations.

The grid optimization module upon performing an optimization may then generate one or more instructions to be sent to one or more corresponding LPMs in the network in order to perform a predictive optimization of that network. For example by observing traffic flow through one particular intersection the grid optimization module may then be able to adjust signal timing at one or more other intersections downstream from that particular intersection in order to accommodate the traffic flow. It can be appreciated that the connectivity of the various LPMs and the remote processing entity and the continual updating of the grid model enables a network wide optimization to be performed substantially in real time.

An administrator Admin API is also provided to enable an operations server to make changes to or request information from the grid model the grid optimization module or both. In this example the Admin API can be accessed directly by the operations client or via another Admin API in the operations server . The operations server also includes a web server for hosting a web page for the customer browser to interface with. The Admin API and web server are both connectable to a database which is used to store a repository of operations data.

Communication Network typical adaptive systems use citywide Ethernet and fibre networks. There are also some examples of cities using WiFi networks to enable adaptive control systems.

Detection Sensors typical adaptive system use magnetic induction loops to detect the presence of vehicles waiting or passing through at an intersection stop bar. Other sensors include radar and video based systems.

Adaptive Controller depending on the adaptive implementation the controller is enabled by a central management system a traffic signal controller or a third party hardware component.

The implementation of an adaptive system as shown in can be based on a single camera single LPM and a serial dongle e.g. to provide the communication interface which is significantly lower cost than traditional induction loops leverages existing broadband wireless networks to minimize network installation costs and uses economies of scale of the remote processing entity to minimize the need for expensive controller hardware at the intersection. The average cost of an adaptive system is 65 000 per intersection according to the Adaptive Traffic Control Systems Domestic and Foreign State of Practice report onlinepubs.trb.org onlinepubs nchrp nchrp syn403.pdf .

The configuration shown in can be utilized to provide a monthly subscription based service to a municipality or other entity without the large capital costs upfront since the hardware installation process is easier and more cost effective and the remote processing entity provides economies of scale to service multiple customers. All of these benefits represent a significant cost savings and thus ability to more easily upgrade a traffic system to utilize adaptive signal control.

As discussed above an LPM used to monitor an intersection and control a TSC can process a video signal to determine traffic flow using the analytics module and send traffic flow data e.g. one or more values representing traffic flow in a particular direction to the remote processing entity in order to perform a real time optimization of a grid model including that LPM . It can be appreciated that an intersection typically includes multiple roads intersecting thus creating multiple flows within the same intersection . In order to distinguish between different flows the video analytics module or LPM API can assign a flow ID to each flow and associate one or more flow value to each flow ID as shown in according to the number of algorithms used to determine a particular flow. The video analytics module in this example monitors a plurality of frames of video in order to understand the movements through the intersection and generates a flow value. For example a range of values may be possible which can be interpreted by the remote processing entity such as values that range between 0 and 1. illustrates an example data packet that may be generated by the LPM e.g. using the LPM API to include the outputs of the video analytics module . In this example an intersection ID is added to identify the intersection to which the analytics applies and an LPM ID is added to identify the LPM that is communicating with the remote processing entity e.g. to distinguish multiples LPMs from each other at the same intersection see . Each flow ID e.g. and . . . in is added to the packet and one or more corresponding values e.g. and respectively . The packet thus generated carries a series of values and identifying information to enable the traffic API to update the grid model accordingly. The packet may also carry sensor data either raw sensor data or processed versions thereof. Alternatively or in addition to augmenting video and sensor data separate sensor data packets can be used wherein a sensor ID and sensor value for each sensor can be included along with the intersection ID and LPM ID .

It can be appreciated that the data packet shown in is representative only and may differ in structure according to the protocol being used to deliver the data packet . As noted above the UDP can be used to send datagrams to the remote processing entity which is another host on an IP network i.e. via the wireless network . The use of UDP avoids the need to set up special transmission channels or data paths by using a simple transmission model without implicit hand shaking dialogues for providing reliability ordering or data integrity. The trade off by using UDP is that a lower latency can be achieved when compared to other IP based protocols such as TCP IP. However it can be appreciated that other protocols such as TCP IP could be used in particular for transmissions from the LPM to the remote processing entity that are not meant to be in real time e.g. for post processing or bulk file transfers etc.

By using a wireless network to deliver the data packets to the remote processing entity relatively minor upgrades are required to existing hardware at an intersection. The wireless network also provides scalability and ubiquity of access in particular when using a broadband cellular network. Therefore despite inherent problems with wireless and cellular communication models access to such networks is typically easy to achieve from most if not all intersections . In order to address such inherent problems the LPM API and traffic API can be configured to implement suitable security measures to account for usual security concerns with wireless networks . Also by optimizing the processing e.g. by having much processing offloaded to the remote processing entity and by using effective optimization and modeling software any time constraint i.e. latency issues can also be overcome in order to derive the maximum benefit from the ease of access and convenience of using a wireless network to communicate with many LPMs . By routing data and instructions through the remote processing entity and by maintaining control over the LPMs a data subscription model can be achieved that allows the remote processing entity to provide the services described herein to customers on a monthly subscription basis rather than by selling expensive hardware and trying to capture ongoing costs using other models.

The traffic API obtains the packet thus received by the remote processing entity and parses the packet to determine how to update the grid model at . The grid optimization module then obtains a snapshot of the grid model at and performs an optimization routine at to thereby conduct a real time analysis of the data provided by LPM pertaining the corresponding intersection . The real time analysis may incorporate third party data provided by a third party system at . A control packet is then generated at by identifying the intersection and LPM that is to be re timed and including one or more instructions or commands to be provided to that LPM in this example LPM. The control packet is sent at and received by LPM at and sent to the communication interface at . It can be appreciated that as will be explained below LPM may need to parse the control packet and if necessary translate the value provided as the command or instruction into a format that is recognized by the TSC . Such translation may also be performed by the communication interface if the communication interface has these capabilities. Translation of the instruction may involve modifications required by the communication protocol used and or modifications to the format of the actual instructions or commands being provided.

The instruction or a packet or message containing the instruction is received by the communication interface at e.g. via a Bluetooth or other short term wireless connection. It can be appreciated that the use of a short term wireless connection between the LPM and the communication interface minimizes the installation costs and effort required to interface with the TSC which is typically an existing component at the intersection that should not be modified in any substantial way. The communication interface is in this example closely coupled to the TSC and sends the instruction to the TSC at to enable the TSC to modify its traffic signals at . As noted above the instruction may comprise any one or more instruction command setting or parameter modification replacement file or any other software component or data structure that is capable of altering an existing signal timing scheme to generate a new one in accordance with the optimization performed in the real time analysis at .

Turning now to example operations are shown that may be executed by the traffic API to update the grid model . The traffic API determines at any one or more characteristics of a flow based on the corresponding values in order to update the corresponding portion of the grid model at . For example traffic flow in one direction through an intersection in a particular direction can be reflected in the grid model upon determining the meaning of the value sent in the data packet and assigning it to the model based on the intersection ID . The traffic API then determines at if more flow values are to be processed. If so and are repeated. It can be appreciated that other values representing sensor data if in the same packet may be processed at the same time or separate packets may be processed in order to update the model using both camera and sensor data if applicable. Once all values in the data packet s have been processed the grid model is thereby updated.

The hardware used at the intersection can be implemented using temporary or permanent hardware set ups as will now be described making reference to .

The configuration shown in includes a temporary camera situated at the intersection which can record video of traffic flow at the intersection. The camera records video and can feed that video and other additional data through the wireless network either itself camera component or an LPM to the remote processing entity . The remote processing entity in such a configuration then initiates processing of the video to collect traffic data vehicle classes volumes and movements at the intersection. In other words in the temporary set up shown in the remote processing entity performs all processing including the analytics performed at the LPM as shown in . Once data is returned the remote processing entity initiates an analysis of the data uses signal delay modeling methodologies and linear optimization to propose an optimal signal timing for that particular traffic signal. It should be noted that described solution can also work with multiple intersections more than 1 to optimize a network or corridor of traffic signals.

Once the analysis is completed a traffic engineer reviews the results from a web application and signs off on the proposed changes. Or they can modify the delay model methodology or change the inputs to the linear optimization problem to come up with alternative solutions. Once an appropriate solution is found the traffic engineer must manually program the signal controller through a laptop other interface. The signal controller is programmed using the proposed changes identified by the analysis and approved by the traffic engineer.

The configuration shown in includes a permanent camera and analysis system hardware i.e. LPM located in communication with a traffic cabinet housing the TSC as described above. The LPM has an interface to the camera to record video and the TSC to read from and to write to program changes to the signal timing and to the wireless network to send receive video and data to the remote processing entity as discussed above. When compared to it can be seen that the configuration shown in greater detail in enables a permanent or semi permanent installation to collect data over a relatively long period of time and to perform a real time analysis and control whereas the temporary set up shown in allows the optimization processing performed by the remote processing entity to be utilized in a temporary fashion. It can be appreciated that the LPM may not be needed in such situations in particular if the temporary camera is capable of accessing the wireless network or is connected to a computing device at the intersection that itself is capable of communicating via the wireless network .

Signal timing projects are usually completed by public sector transportation agencies using the following methodology 

Currently a traffic engineer contracts someone to collect the data and once this is done they contract someone to do the modeling and analysis. Finally the traffic engineer contracts someone to reprogram the controller or they may do this themselves.

The traffic engineer can likely find a company that will do all the above steps for them. However that is an expensive option and the company who is completing the signal retiming project still would need to manually record the data port the data into the analysis tool and then reprogram the signals. The system described herein provides an underlying framework and solution that can perform all the aforementioned steps in a cost effective manner by removing time consuming and costly manual operations.

By incorporating the system shown in or a public sector transportation agency can continuously record traffic data and optimize the traffic signals within their transportation network. This service can be provided to a public sector transportation on a monthly subscription based model. A subscription based model is more cost effective than the current model which requires expensive hardware at the intersection and large upfront capital costs

Turning now to an example traffic network is illustrated comprising four intersections namely and . By situating at least one LPM and at least one camera at various intersections and including various sensors and or obtaining third party data various measurements can be made in order to model the intersection such that a snapshot can be obtained for performing a traffic signal re timing optimization. In this example at intersection the LPM monitors flow through the intersection at a Bluetooth sensor monitors flow through the traffic network at and various sensors monitor environmental conditions such as temperature humidity fog etc. at . It can be appreciated that the various data obtained by the sensors can be useful to capture a more complete picture of conditions at the intersection . Such conditions can be reported to various third party systems or used in analyses conducted by the remote processing entity . It can also be appreciated that other sensors can be used for example at to determine traffic volume sensors such as lidar radar ground loops etc. Meanwhile an LPM at intersection can monitor the length of a queue at its intersection at . GPS data i.e. from a third party system is provided at which is responsible for tasks such as monitoring the position of a bus or emergency vehicle midway between intersections and and a camera captures pedestrian crossing information midblock between intersections and at . At intersection vehicle volumes entering that intersection from a highway on ramp are captured at and midway between intersection and midblock vehicle volumes are captured at . Vehicle outflows from the traffic network can also be modeled at intersection at . By enabling all LPMs to communicate over the wireless network with the remote processing entity a model can be built from measurements taken such as shown in and the model can be continually updated using the various sensors and cameras and other third party data if applicable .

As shown in the network of intersections can be modeled in order to perform the optimization algorithm. In this example the queue length at intersection can be modeled at to try to minimize wait times in such queues the intersection can be modeled at based on the time of day and day of week using historical data the inflow of traffic into the network can be modeled at at intersection based on the time of day e.g. from data obtained at in and the outflow from the network modeled at at intersection based on the time of day e.g. from data obtained at in . In other words provides a view of the intersections as they are measured i.e. the measurements that would be taken and where the measurements come from. provides a view of the intersection as it would be modeled i.e. the optimization model . Measurements such as those illustrated in would be plugged into the grid model as shown in and then the grid model would optimize according to the operations shown in . It can be appreciated that the optimizations shown in are illustrative only and may include additional optimizations e.g. by modeling the intersections and themselves.

As discussed above the grid model can be built and updated using not only traffic flow values obtained from video feeds but also based on historical and real time data obtained from the sensors . As such both camera data and sensor data can be augmented to further enhance the optimization of the traffic network for determining appropriate signal re timings. Turning to an example schematic diagram of a pair of intersections A B is shown. It can be seen in that in this example vehicle flow or volume X travelling from A to B is accumulated from vehicle flow through intersection A from F G or H. As such the volume X may be modeled as a set of three components namely X X X. The turning patterns for at least some vehicles can be determined using sensors such as the Bluetooth sensor at in . By detecting Bluetooth transceivers in vehicles over time the typical patterns of traffic can be modeled. For example there may be a historical percentage of vehicles that turn into A from F and a different percentage that turn into A from G and yet another percentage turning from H into A. Either from real time sensor data or historical averages a particular volume X can be estimated to have proportions that originated from F G or H.

When arriving at B based on historical data the likelihood that particular portions of the volume X will turn towards C D or E can also be relied on in order to estimate how the volume X will likely disperse when entering B. The historical data can again be obtained from sensors such as Bluetooth sensors at the intersection B. In addition to historical data other data such as third party data can also affect the percentages. For example an emergency vehicle down stream that is likely approaching B may affect the paths vehicles will take when approaching B.

The origins of the vehicles in volume X may also affect the likelihood of entering C D or E when approaching B. For example vehicles that came from H may be less likely to turn towards E as they would towards C or D. As such the origin of a particular vehicle can affect the likelihood of it having a particular destination. Using historical and real time data matrices of percentages can be built as shown in . A corresponding matrix may then be referenced to estimate the destination based on the vehicle s origin according to the direction of travel. In the example of a matrix corresponding to vehicles going from A to B is shown. From this matrix one can determine that vehicle travelling from A to B and coming from H have a certain percentage likelihood that for example that vehicle will turn towards C. This may be done by finding the row labelled with the origin e.g. H in the above example and determining from that row percentages for the available destinations e.g. H C in the above example .

It will be appreciated that any module or component exemplified herein that executes instructions may include or otherwise have access to computer readable media such as storage media computer storage media or data storage devices removable and or non removable such as for example magnetic disks optical disks or tape. Computer storage media may include volatile and non volatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Examples of computer storage media include RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by an application module or both. Any such computer storage media may be part of the LPM controlled system remote processing entity third party system operations client customer browser etc. or accessible or connectable thereto. Any application or module herein described may be implemented using computer readable executable instructions that may be stored or otherwise held by such computer readable media.

Although the above has been described with reference to certain specific embodiments various modifications thereof will be apparent to those skilled in the art without departing from the scope of the claims appended hereto.

