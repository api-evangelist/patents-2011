---

title: Prepaid account funds transfer apparatuses, methods and systems
abstract: The PREPAID ACCOUNT FUNDS TRANSFER APPARATUSES, METHODS AND SYSTEMS (“PAFT”) transform prepaid account invitation requests via PAFT components into scheduled prepaid account transactions. In one embodiment, the PAFT obtains, from a transferor user holding a transferor prepaid account, a prepaid account invitation request specifying a transferee user and a prepaid funds transfer amount. The PAFT generates a customized prepaid account invitation for the transferee user based on the prepaid account invitation request, and provides the customized prepaid account invitation for the transferee user. Upon obtaining an invitation acceptance from the transferee user in response to the provided customized prepaid account invitation, the PAFT creates a transferee prepaid account for the transferee user, and transfers, upon creating the transferee prepaid account, the prepaid funds transfer amount of funds specified in the prepaid account invitation request from the transferor prepaid account to the created transferee prepaid account.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09355390&OS=09355390&RS=09355390
owner: VISA INTERNATIONAL SERVICE ASSOCIATION
number: 09355390
owner_city: San Francisco
owner_country: US
publication_date: 20110215
---
Applicant hereby claims priority under 35 USC 119 for U.S. provisional patent application Ser. No. 61 304 594 filed Feb. 15 2010 entitled PREPAID ACCOUNT TRANSFEROR INVITATION FOR A TRANSFEREE LINKED PREPAID ACCOUNT . The entire contents of the aforementioned application are herein expressly incorporated by reference.

This patent application disclosure document hereinafter description and or descriptions describes inventive aspects directed at various novel innovations hereinafter innovation innovations and or innovation s and contains material that is subject to copyright mask work and or other intellectual property protection. The respective owners of such intellectual property have no objection to the facsimile reproduction of the patent disclosure document by anyone as it appears in published Patent Office file records but otherwise reserve all rights.

The present inventions are directed generally to apparatuses methods and systems for account based transactions and more particularly to PREPAID ACCOUNT FUNDS TRANSFER APPARATUSES METHODS AND SYSTEMS PAFT .

Many users prefer to engage in account based transactions such as credit or debit transactions because of the security and convenience they provide. Prepaid cards are particularly attractive because they provide additional advantages such as spending alerts and controls. The range of account based transactions is currently limited in terms of the types of transactions possible and the persons with whom such transactions may be conducted.

The leading number of each reference number within the drawings indicates the figure in which that reference number is introduced and or detailed. As such a detailed discussion of reference number would be found and or introduced in . Reference number is introduced in etc.

The PREPAID ACCOUNT FUNDS TRANSFER APPARATUSES METHODS AND SYSTEMS hereinafter PAFT transform prepaid account invitation requests via various PAFT components into scheduled prepaid account transactions.

In some implementations the PAFT may allow the prepaid account holder to invite the users to whom the prepaid account holder desires to transfer funds owed to open prepaid accounts via the PAFT. The PAFT may open prepaid accounts for such users and may provide links between the prepaid account of the prepaid account holder and the user . In some implementations the PAFT may facilitate fast reliable and secure transfer of funds from the prepaid account of the prepaid account holder to the prepaid accounts of the users . In some implementations the PAFT may initiate funds transfer immediately upon opening of the prepaid accounts of the users . Thus if the users accept the invitation of the prepaid account holder the PAFT may in some implementations conduct real time secure transfer of funds from the prepaid account holder to the users. In some implementations the PAFT may also allow the account holders and or users to create transfer schedules for future funds transfers. In some implementations the PAFT may enable the users who received new accounts to similarly invite others who do not have prepaid accounts to establish new prepaid accounts with the PAFT to facilitate further funds transfers. Such prepaid account funds transfers may also allow the transferors of funds owed to exercise spending controls for themselves via their prepaid accounts.

In some implementations the user may provide invitation request input e.g. to the transferor client indicating that the user desires to invite the transferee user to apply for a prepaid account. For example the transferor user may desire for the transferee user to open the prepaid account so that the transferor user can transfer funds to the transferee user s newly opened prepaid account. As another example the transferor user may wish to obtain funds from the transferee user on a regular basis e.g. according to a predetermined schedule and may wish for the transferee user to utilize a prepaid account to provide the payments for funds transfer for risk minimization and or security purposes.

In response to the transferor providing the invitation request input the transferor client may generate a prepaid account invitation request e.g. and provide e.g. the generated prepaid account invitation request to the server e.g. . For example a browser application executing on the transferor client may provide on behalf of the user a Secure Hypertext Transfer Protocol HTTP S POST message including the prepaid account invitation request details for the server in the form of data formatted according to the eXtensible Markup Language XML . Below is an example HTTP S POST message that may be sent by a browser executing on the transferor client to provide a prepaid account invitation request to the server 

Upon receiving the prepaid account invitation request from the transferor client the server may parse the invitation request to extract the included invitation request data. Parsing procedures that the server may employ are outlined in the description below with reference to . Upon determining the parameters of the invitation request the server may generate a unique ID associated with the invitation to be generated based on the request. In some implementations the server may extract based on parsing the request message data regarding the messaging mode e.g. SMS email voicemail automated manual phone call postal mail etc. by which the transferor user desires the PAFT to provide a prepaid account invitation for the transferee user. Based on the user messaging mode preference s the server may generate a query e.g. for a template from a database which the server can utilize to generate a customized prepaid account invitation message for the transferee user in accordance with the messaging mode preferences of the transferor user. The server may issue the query e.g. to a database storing invitation templates e.g. forms database . For example the server may execute a PHP script including Structured Query Language SQL commands to query a relational database storing invitation templates. An example listing written substantially in the form of PHP SQL commands illustrating substantive aspects of querying the database for an invitation template is provided below 

In response to the invitation template query the forms database may provide e.g. the requested invitation template to the server. In some implementations the server may parse e.g. the invitation request to determine information of the transferee user who will be the recipient of the prepaid account invitation. Based on the recipient information of the transferee user the server may generate a customized prepaid account invitation. For example the customized prepaid account invitation may take the form of a text message SMS email electronic communication fax voicemail automated phone call script print out for a customer service representative to make a manual phone call automated manual online chat script webpage and or the like. In some implementations the server may store e.g. the generated customized invitation unique ID and or other invitation data to a database eg. invitations database . An example listing written substantially in the form of PHP SQL commands to store the invitation data to a database is provided below 

In some implementations the server may provide the generated customized prepaid account invitation e.g. for a transferee client e.g. of a transferee user e.g. specified by the invitation request of the transferor user. For example the server may send an electronic mail message to an electronic mail messaging account of the transferee user. An example listing written substantially in the form of PHP SQL commands for the server to send an electronic mail message to an electronic mail messaging account of the transferee user is provided below 

In some implementations the transferee client may render e.g. the customized prepaid account invitation for presentation to the transferee user. For example the transferee client may render a webpage electronic message text SMS message buffer a voicemail emit a ring tone for the transferee user to answer a phone and or play an audio message etc. The transferee client may then present the customized prepaid account invitation for the transferee user e.g. . For example the transferee client may provide output including but not limited to sounds music audio video images tactile feedback vibration alerts e.g. on vibration capable client devices such as a smartphone etc. and or the like. In some implementations the server may also provide an invitation confirmation message e.g. for the transferor client of the transferor user. For example the server may send an electronic mail message to an electronic mail messaging account of the transferor user. The transferor client may render e.g. the customized prepaid account invitation for presentation to the transferor user. For example the transferee client may render a webpage electronic message text SMS message buffer a voicemail emit a ring tone for the transferee user to answer a phone and or play an audio message etc. The transferor client may then present the customized prepaid account invitation for the transferor user e.g. . For example the transferor client may provide output including but not limited to sounds music audio video images tactile feedback vibration alerts e.g. on vibration capable client devices such as a smartphone etc. and or the like.

Upon obtaining e.g. the prepaid account invitation request from the transferor client the server may parse the invitation request to extract the included invitation request data e.g. . Parsing procedures that the server may employ are outlined in the description below with reference to . Based on the parsing the server may extract data fields including but not limited to request id timestamp transferor id client IP transferee details list transferee type first name last name contact type contact info alt contact info alt contact type alt contact info client type num invite attempts account params list same bank flag same branch flag persistent link flag transfer param list on schedule flag one time flag amount instant transfer flag custom invitation transferee details list transferee client IP and or the like. Upon determining the parameters of the invitation request the server may generate a unique ID associated with the invitation to be generated based on the request e.g. . For example the server may execute a hypertext preprocess PHP script which invokes the md5 command to generate a hash of the invitation request message and utilize the generated message hash as the unique invitation ID. As another example the server may utilize the rand command to generate a random number to be utilized as the unique invitation ID. In some implementations the server may extract based on parsing the request message data regarding the messaging mode e.g. SMS email voicemail automated manual phone call postal mail etc. by which the transferor user desires the PAFT to provide a prepaid account invitation for the transferee user. Based on the user messaging mode preference s the server may generate a query e.g. for a template from a database which the server can utilize to generate a customized prepaid account invitation message for the transferee user in accordance with the messaging mode preferences of the transferor user. The server may issue the query to a database storing invitation templates e.g. a forms database. In response to the invitation template query the forms database may provide e.g. the invitation template to the server.

In some implementations the server may parse e.g. the invitation request to determine information of the transferee user who will be the recipient of the prepaid account invitation. For example the server may extract data field such as but not limited to transferee ID transferee type first name last name contact type contact info alt contact info alt contact type alt contact info client type and or the like. Based on the recipient information of the transferee user the server may generate e.g. a customized prepaid account invitation. For example the customized prepaid account invitation may take the form of a text message SMS email electronic communication fax voicemail automated phone call script print out for a customer service representative to make a manual phone call automated manual online chat script webpage and or the like. In some implementations the server may generate e.g. a customized invitation data record including the data fields unique ID customized invitation and or other invitation data and provide the invitation data record to a database e.g. invitations database for storing the invitation data e.g. . In some implementations the server may provide the generated customized prepaid account invitation e.g. for a transferee client of a transferee user specified by the invitation request of the transferor user. In some implementations the transferee client may render e.g. the customized prepaid account invitation for presentation to the transferee user. The transferee client may then present the customized prepaid account invitation for the transferee user e.g. . In some implementations the server may also provide an invitation confirmation message e.g. for the transferor client of the transferor user. The transferor client may render e.g. the customized prepaid account invitation for presentation to the transferor user. The transferor client may then present the customized prepaid account invitation for the transferor user e.g. .

Upon receiving the prepaid account invitation acceptance message from the transferee client the server may parse the invitation acceptance to extract the included invitation acceptance data e.g. . For example the server may extract the unique invitation ID of the invitation which the transferee user has accepted. Based on the extracted invitation data the server may in some implementations determine the type of invitation to which the transferee user has response with acceptance and a client type of the transferee user. In alternate implementations the server may use the extracted invitation data e.g. the unique invitation ID to query e.g. a database e.g. invitations database for the type of the invitation. For example the server may obtain the invitation type from the database by issuing PHP SQL commands similar to those described above with reference to . In response the database may provide the invitation type e.g. for the server.

In some implementations the server may generate a query for a prepaid account application form using the invitation type and client type of the transferee user. For example various transferee users and or client may require and or prefer different types of prepaid account application forms. For example a prepaid account application form may be provided as a Dynamic HyperText Markup Language HTML page interactive Adobe Flash object iPhone app Android app interactive voice application etc. Also the size resolution fidelity and or like attributes of the prepaid account application form may be customized depending on the screen size pixel count audio video processing capabilities and or like attributes and or preferences of the transferee client and or transferee user. Thus the server may generate a query for a prepaid application form that is customized to the transferee client and or transferee user and issue the query e.g. to a database e.g. forms database . In response to the prepaid account application form query the database may provide a prepaid account application form e.g. that is customized to the attributes and or preferences of the transferee client and or transferee user. The server may provide the obtained prepaid account application form e.g. to the transferee client. For example the server may provide the transferee client with a HTML page including a reference to an Adobe Flash object stored on the server including the prepaid account application. An example HTML code listing including JavaScript commands referencing an Adobe Flash object within the HTML page is provided below 

Upon obtaining the prepaid account application the transferee client may execute the prepaid account application for presentation to the user e.g. . For example with reference to the examples above a web browser executing on the transferee client device may render e.g. the HTML web page and may communicate with the server to download the Adobe Flash object. An Adobe Flash browser plug in installed on the transferee client and operating in conjunction with the browser may play execute the downloaded Flash object for presentation e.g. to the transferee user.

In some implementations the transferee user may provide application form input e.g. to the transferee client. For example with reference to the example above the Adobe Flash object including the prepaid account application may provide interactive features and may allow the user to enter user input feedback e.g. via a variety of mechanisms e.g. keyboard entry into a command line interface mouse input in a graphical user interface gestures on a touch sensitive interface voice commands etc. . Using the user application form input the client may generate e.g. a completed prepaid account application. For example the transferee client executing the Adobe Flash object may generate maintain update and or store data pertaining to the user s interaction with the Adobe Flash object e.g. an application state an application data structure a block of memory with data variables etc. . For example the Adobe Flash object may store a prepaid account application data structure encoded according to the JavaScript Object Notation JSON format. An example JSON encoded prepaid account application data structure is provided below 

In some implementations the server may generate a secure communications session with the transferee client in order to facilitate communication during the prepaid account application procedure between the transferee client and server. As an example the prepaid account application may provide data stored on the transferee client for the server as prepaid account application data e.g. completed prepaid account application . For example an Adobe Flash object running on the transferee client may include ActionScript 3.0 commands to create a Secure Sockets Layer SSL connection with a server generate a message including a JSON encoded data structure such as illustrated in the example above and send the message via the secure SSL connection to the server. Example commands written substantially in the form of ActionScript 3.0 to create a secure SSL connection to a server load prepaid account application data from a locally stored JSON encoded data file and send a message including the JSON encoded data via the SSL connection to the server are provided below 

In some implementations the server may be executing a PHP script implementing a SSL socket server which listens to incoming communications on a server port to which the transferee client may send data e.g. prepaid account application encoded according to the JSON format. Upon identifying an incoming communication the PHP script may read the incoming data from the transferee client into a memory variable which can then be operated upon by the transferee client. An example listing written substantially in the form of PHP SQL commands to accept JSON encoded prepaid account application data from a transferee client via a SSL connection is provided below 

In some implementations the server may parse the obtained completed prepaid account application form from the transferee client and extract the application data from the completed prepaid account application form. Based on the application data the server may generate an application screening request e.g. . In some implementations the server may generate a request to perform a security and or credit check on the applicant. For example the server may generate an applicant screening request e.g. for a credit check service such as Equifax . In such an example the server may provide a HTTP S POST message to a screening server e.g. including applicant details extracted from the completed prepaid account application. An example HTTP S POST message including an applicant screening request that may be sent by the PAFT server to a screening server is provided below 

Upon receiving the applicant screening request the screening server may process the applicant screening request and may generate an applicant screening report. For example the screening server may determine that the applicant fails the screening tests for obtaining a prepaid account with the PAFT. In such an example the screening server may provide an applicant screening failure report e.g. . If the screening server determines that the applicant passed the screening tests for obtaining a prepaid account with the PAFT the screening server may respond to the applicant screening request with an applicant screening success report e.g. . For example the screening server may provide a HTTP S POST message to a PAFT server including an applicant screening report indicating success or failure on the part of the applicant to pass the screening tests. An example HTTP S POST message including an applicant screening report is provided below 

Upon receiving the applicant screening report the PAFT server may determine whether the transferee user applicant passed the screening tests. If the applicant failed the screening tests the server may generate an application denial notification e.g. . For example the server may generate a HTTP S POST message similar to the example described above. The server may provide the application denial notification to the transferee client and the transferee client may render e.g. and display e.g. the application denial notification for the transferee user.

In some implementations the server may determine that the transferee user applicant passed the screening tests performed by the screening server based on parsing the applicant screening report. In such implementations the server may proceed with creation of a new prepaid account for the transferee user. For example the server may determine whether the new prepaid account can be hosted locally of if the prepaid account should be hosted at a different bank branch server. For example the server may obtain the prepaid account preferences from the transferor user s prepaid account application invitation request and or from the transferee user s completed prepaid application. If the new prepaid account can be hosted locally the server may generate a new user profile and or user account database record s reflecting a new prepaid account for the transferee user e.g. . If the prepaid account is required to be hosted on another server e.g. bank branch server the PAFT server may generate a prepaid account opening request message e.g. for the bank branch server. For example the PAFT server may generate a HTTP S GET message including a prepaid account opening request message similar to the example provided below 

In some implementations the bank branch server may require additional information on the transferee user invitation request and or the like and may request additional user information e.g. additional user information request . For example the bank branch server may provide to the PAFT server a HTTP S POST message similar to the examples above. The PAFT server may parse any obtained additional user information request s and obtain from local storage database s and or any PAFT affiliated entities and or components the additional information requested e.g. . The PAFT server may in response generate e.g. an additional user information message for example in the form of a HTTP S POST message similar to the examples above and provide the message to the bank branch server. In some implementations the bank branch server may create a new prepaid account for the transferee user based on the information provided by the PAFT server e.g. . The bank branch server may provide an account issue message e.g. to notify the PAFT server and or other PAFT entities and or components that a prepaid account has been created at the bank branch server for the transferee user.

In some implementations the PAFT server may upon creating the prepaid account for the transferee server e.g. locally or at another server such as the bank branch server generate a prepaid account link data record that provides a link between the prepaid accounts of the transferor and transferee user. The server may also generate e.g. a transfer schedule that may specify funds transfer attributes between the transferor and transferee prepaid accounts such attributes including but not limited to number of transfers transfer dates transfer frequency transfer intervals transfer amounts transfer notification settings and or the like. An example transfer schedule encoded according to the XML format is provided below 

In some implementations the server may store a user profile record e.g. prepaid account link data record e.g. and prepaid account funds transfer schedule record e.g. to database s e.g. users database links database and schedules database . For example the server may issue PHP SQL commands similar to the example below to store the user profile prepaid account link data and prepaid account funds transfer schedule records in database s 

In some implementations the server may provide an account issue notification e.g. for the transferee and or transferor user s . For example the server may provide a HTTP S POST message similar to the examples above. The client s may render e.g. the account issue notification for presentation to the user s . For example the client s may render a webpage electronic message text SMS message buffer a voicemail emit a ring tone for the user s to answer a phone and or play an audio message etc. The client s may then present the account issue notification for the user s e.g. . For example the client s may provide output including but not limited to sounds music audio video images tactile feedback vibration alerts e.g. on vibration capable client devices such as a smartphone etc. and or the like.

In some implementations the server may generate a query for a prepaid account application form using the invitation type and client type of the transferee user. The server may generate a query for a prepaid application form e.g. that is customized to the transferee client and or transferee user and issue the query to a database e.g. a forms database. In response to the prepaid account application form query the database may provide a prepaid account application form e.g. that is customized to the attributes and or preferences of the transferee client and or transferee user. The server may provide the obtained prepaid account application form e.g. to the transferee client. Upon obtaining the prepaid account application the transferee client may render execute e.g the prepaid account application and present the prepaid account application for the transferee user e.g. .

In some implementations the transferee user may provide application form input e.g. to the transferee client. Using the user application form input the client may generate e.g. a completed prepaid account application. The transferee client may provide the completed prepaid account application for the server. In some implementations the server may obtain the completed prepaid account application form from the transferee client e.g. and parse e.g. the completed application to extract the application data from the completed prepaid account application form. For example the server may obtain fields such as but not limited to applicant ID applicant firstname applicant lastname dob ssn credit check ok flag address line address line zipcode city state account params list account mode account type account expiry bank name branch name and or the like. Based on the application data the server may generate an application screening request e.g. . In some implementations the server may generate a request to perform a security and or credit check on the applicant. Upon receiving the applicant screening request e.g. the screening server may process e.g. the applicant screening request and may generate an applicant screening report e.g. . For example the screening server may determine whether the applicant passes or fails the screening tests for obtaining a prepaid account with the PAFT. Upon obtaining and parsing e.g. the applicant screening report the PAFT server may determine whether the transferee user applicant passed the screening tests e.g. . If the applicant failed the screening tests e.g. option No the server may generate an application denial notification e.g. . The server may provide the application denial notification to the transferee client and the transferee client may render e.g. and display e.g. the application denial notification for the transferee user.

In some implementations the server may determine that the transferee user applicant passed the screening tests performed by the screening server based on parsing the applicant screening report e.g. option Yes. In such implementations the server may proceed with creation of a new prepaid account for the transferee user. The server may generate a user profile for the transferee user applicant e.g. . The server may also determine whether the new prepaid account can be hosted locally of if the prepaid account should be hosted at a different bank branch server e.g. . For example the server may obtain the prepaid account preferences from the transferor user s prepaid account application invitation request and or from the transferee user s completed prepaid application. If the new prepaid account can be hosted locally e.g. option No the server may generate a new user profile and or user account database record s reflecting a new prepaid account for the transferee user e.g. . If the prepaid account is required to be hosted on another server e.g. option Yes the PAFT server may generate a prepaid account opening request message e.g. for the bank branch server. The PAFT server may provide the prepaid account opening request message to the bank branch server where the account should be opened based on the applicant data extracted from the applicant s completed prepaid account application form. In some implementations the bank branch server may upon obtaining the prepaid account opening request e.g. parse the prepaid account opening request e.g. and extract request data. For example the bank branch server may extract fields including but not limited to applicant firstname applicant lastname applicant address line applicant address line applicant clear flag and or the like. If the bank branch server determines that it requires additional information e.g. for example on the transferee user invitation request and or the like the bank branch server may generate an additional user information request e.g. and provide the request for additional user information to the PAFT server. The PAFT server may parse e.g. the additional user information request from the bank branch server and determine the additional user information requested e.g. . The PAFT server may generate an additional user information message e.g. using for example information obtained from local storage database s and or any PAFT affiliated entities and or components. The PAFT server may provide the message to the bank branch server. Upon obtaining the additional user information message e.g. the bank branch server may in some implementations create a new prepaid account for the transferee user based on the information provided by the PAFT server e.g. . The bank branch server may generate an account issue message e.g. and provide the account issue message to notify the PAFT server and or other PAFT entities and or components that a prepaid account has been created at the bank branch server for the transferee user.

In some implementations the PAFT server may upon obtaining notification and or creating the prepaid account for the transferee server e.g. locally or at another server such as the bank branch server generate a prepaid account link data record that provides a link between the prepaid accounts of the transferor and transferee user e.g. . The server may also generate e.g. a prepaid account funds transfer schedule that may specify funds transfer attributes between the transferor and transferee prepaid accounts such attributes including but not limited to number of transfers transfer dates transfer frequency transfer intervals transfer amounts transfer notification settings and or the like. In some implementations the server may also generate a user profile record e.g. . The server may provide the user account data record prepaid account link data record and or prepaid account funds transfer schedule record to database s e.g. users database links database and or schedules database. In some implementations the server may provide an account issue notification e.g. for the transferee and or transferor user s . The client s may render e.g. the account issue notification for presentation to the user s . The client s may then present the account issue notification for the user s e.g. .

As an example the server may spontaneously initiate a prepaid accounts funds transfer upon creation of a new prepaid account e.g. a transferor and or transferee user account by the PAFT and or affiliated entities and or components.

As another example a transferor user e.g. may provide a payment order input e.g. into a transferor client e.g. requesting that funds be transferred from the transferor user s prepaid account into the transferee user s prepaid account. The transferor client may utilize the transferor user s payment order input to generate a prepaid account payment order e.g. . The transferor client may provide the prepaid account payment order e.g. to the server e.g. which may trigger the server to execute transfer of funds as requested by the transferor user.

As another example a transferee user e.g. may provide a receivables request input e.g. into a transferee client e.g. requesting that funds owed be transferred from the transferor user s prepaid account into the transferee user s prepaid account. The transferee client may utilize the transferee user s receivables request input to generate a prepaid account receivables request e.g. . The transferee client may provide the prepaid account receivables request e.g. to the server e.g. which may trigger the server to execute transfer of funds as requested by the transferee user.

As another example the server e.g. may query a database e.g. schedules database for a transfer schedule e.g. . For example the server may query the database on a continuous periodically on demand on trigger and or like basis. In response to the query the database may provide a transfer schedule e.g. . The server may obtain the transfer schedule and parse it to extract schedule data pertaining to transfers between the transferor user e.g. and the transferee user e.g. . The server may analyze the data e.g. to determine whether a transfer should be initiated between the prepaid account of the transferor user and the prepaid account of the transferee user.

In general it is contemplated that a variety of events and or changes in data at any of the PAFT components and or affiliated entities may trigger the PAFT to perform prepaid account funds transfer from a transferor user s prepaid account to a transferee user s prepaid account.

In some implementations the PAFT server may obtain a trigger such as those described above to perform prepaid account funds transfer from a transferor user s prepaid account to a transferee user s prepaid account. In response to the trigger the server may generate a query for a link data record and provide the query e.g. to a database e.g. links database . For example the server may issue PHP SQL commands similar to the example provided below 

The database may provide the transfer link data record e.g. in response to obtaining the query from the server. In some implementations the server may generate a query for one or more user profile data records e.g. the user profile data records of the transferor user and or transferee user . The server may provide the user profile data query e.g. to a database e.g. users database . For example the server may issue PHP SQL commands similar to the example above to the users database. In response to the query the users database may provide the requested user profile data records.

In some implementations using the link data record and or the user profile data records the server may initiate transfer for funds from the prepaid account of the transferor user to the prepaid account of the transferee user. For example the server may determine whether the prepaid accounts of the transferor user and the transferee user are both stored locally. If the prepaid accounts are both stored locally the server may debit the prepaid account of the transferor user and credit the prepaid account of the transferee user e.g. . Alternatively in another example if a prepaid account of the transferor user and or transferee user is not stored locally the server may generate one or more transaction request messages using the link data and or user profile data and provide the transaction request messages e.g. to one or more bank branch servers e.g. . For example the server may provide a HTTP S POST message for the bank branch server similar to the example provided below 

In response the bank branch server may process the transaction request e.g. and provide a transaction completion message e.g. for the PAFT server. Upon obtaining the transaction completion message s for the bank branch server s involved in the prepaid account funds transfer the PAFT server may generate transaction notification message s and provide the transaction notification message s e.g. to the transferor client and or transferee client. For example the server may provide a HTTP S POST message similar to the examples above. The client s may render e.g. the transaction notification message s for presentation to the user s . For example the client s may render a webpage electronic message text SMS message buffer a voicemail emit a ring tone for the user s to answer a phone and or play an audio message etc. The client s may then present the transaction notification message s for the user s e.g. . For example the client s may provide output including but not limited to sounds music audio video images tactile feedback vibration alerts e.g. on vibration capable client devices such as a smartphone etc. and or the like.

If the server determines that both prepaid accounts are stored locally e.g. option Yes the server may debit the prepaid account of the transferor user by the determined amount of the prepaid account funds transfer and credit the prepaid account of the transferee user by the determined amount of the prepaid account funds transfer e.g. . In some implementations the server may determine that both prepaid accounts are not stored locally e.g. option No. The server may in such implementations generate one or more transaction request message s to perform prepaid account actions e.g. credit and or debit . The server may provide the transaction request message s to one or more bank branch servers. The bank branch server upon obtaining the transaction request message e.g. may perform the transaction according to the request message e.g. . The bank branch server may generate a transaction completion message e.g. and provide the transaction completion message to the PAFT server.

In some implementations the PAFT server may obtain an indication that funds transfer has been successfully completed between the prepaid accounts of the transferor user and transferee user. If the server determines that the funds transfer was successful e.g. option Yes the server may generate a funds transfer notification message for the transferor and or transferee user e.g. . If the server determines that the funds transfer was not successful e.g. option No the server may generate a funds transfer failure notification message for the transferor and or transferee user e.g. . The server may provide the generated notifications for the transferor and or transferee clients. The client may render e.g. the notifications and present e.g. the notifications for the users. In some implementations the server may generate e.g. updated transaction data user profile data and or schedule data records based on the prepaid account funds transfer or failure thereof and provide the data records to database s . The database s e.g. schedules database s and or users database s may store e.g. the data records provided by the server.

In some implementations the user interface may provide various elements for inviting see e.g. other users to apply for obtaining new prepaid accounts with the PAFT. For example the user interface may provide a hyperlink e.g. upon activation of which the user may be provided with graphical user interface elements to generate and send invitation requests for the PAFT. In various implementations the user may e able to invite other user to create prepaid accounts with the PAFT via text message e.g. phone e.g. chat social networking e.g. and or the like.

Typically users which may be people and or other systems may engage information technology systems e.g. computers to facilitate information processing. In turn computers employ processors to process information such processors may be referred to as central processing units CPU . One form of processor is referred to as a microprocessor. CPUs use communicative circuits to pass binary encoded signals acting as instructions to enable various operations. These instructions may be operational and or data instructions containing and or referencing other instructions and data in various processor accessible and operable areas of memory e.g. registers cache memory random access memory etc. . Such communicative instructions may be stored and or transmitted in batches e.g. batches of instructions as programs and or data components to facilitate desired operations. These stored instruction codes e.g. programs may engage the CPU circuit components and other motherboard and or system components to perform desired operations. One type of program is a computer operating system which may be executed by CPU on a computer the operating system enables and facilitates users to access and operate computer information technology and resources. Some resources that may be employed in information technology systems include input and output mechanisms through which data may pass into and out of a computer memory storage into which data may be saved and processors by which information may be processed. These information technology systems may be used to collect data for later retrieval analysis and manipulation which may be facilitated through a database program. These information technology systems provide interfaces that allow users to access and operate various system components.

In one embodiment the PAFT controller may be connected to and or communicate with entities such as but not limited to one or more users from user input devices peripheral devices an optional cryptographic processor device and or a communications network .

Networks are commonly thought to comprise the interconnection and interoperation of clients servers and intermediary nodes in a graph topology. It should be noted that the term server as used throughout this application refers generally to a computer other device program or combination thereof that processes and responds to the requests of remote users across a communications network. Servers serve their information to requesting clients. The term client as used herein refers generally to a computer program other device user and or combination thereof that is capable of processing and making requests and obtaining and processing any responses from servers across a communications network. A computer other device program or combination thereof that facilitates processes information and requests and or furthers the passage of information from a source user to a destination user is commonly referred to as a node. Networks are generally thought to facilitate the transfer of information from source points to destinations. A node specifically tasked with furthering the passage of information from a source to a destination is commonly called a router. There are many forms of networks such as Local Area Networks LANs Pico networks Wide Area Networks WANs Wireless Networks WLANs etc. For example the Internet is generally accepted as being an interconnection of a multitude of networks whereby remote clients and servers may access and interoperate with one another.

The PAFT controller may be based on computer systems that may comprise but are not limited to components such as a computer systemization connected to memory .

A computer systemization may comprise a clock central processing unit CPU s and or processor s these terms are used interchangeable throughout the disclosure unless noted to the contrary a memory e.g. a read only memory ROM a random access memory RAM etc. and or an interface bus and most frequently although not necessarily are all interconnected and or communicating through a system bus on one or more mother board s having conductive and or otherwise transportive circuit pathways through which instructions e.g. binary encoded signals may travel to effect communications operations storage etc. Optionally the computer systemization may be connected to an internal power source e.g. optionally the power source may be internal. Optionally a cryptographic processor and or transceivers e.g. ICs may be connected to the system bus. In another embodiment the cryptographic processor and or transceivers may be connected as either internal and or external peripheral devices via the interface bus I O. In turn the transceivers may be connected to antenna s thereby effectuating wireless transmission and reception of various communication and or sensor protocols for example the antenna s may connect to a Texas Instruments WiLink WL1283 transceiver chip e.g. providing 802.11n Bluetooth 3.0 FM global positioning system GPS thereby allowing PAFT controller to determine its location Broadcom BCM4329FKUBG transceiver chip e.g. providing 802.11n Bluetooth 2.1 EDR FM etc. a Broadcom BCM4750IUB8 receiver chip e.g. GPS an Infineon Technologies X Gold 618 PMB9800 e.g. providing 2G 3G HSDPA HSUPA communications and or the like. The system clock typically has a crystal oscillator and generates a base signal through the computer systemization s circuit pathways. The clock is typically coupled to the system bus and various clock multipliers that will increase or decrease the base operating frequency for other components interconnected in the computer systemization. The clock and various components in a computer systemization drive signals embodying information throughout the system. Such transmission and reception of instructions embodying information throughout a computer systemization may be commonly referred to as communications. These communicative instructions may further be transmitted received and the cause of return and or reply communications beyond the instant computer systemization to communications networks input devices other computer systemizations peripheral devices and or the like. Of course any of the above components may be connected directly to one another connected to the CPU and or organized in numerous variations employed as exemplified by various computer systems.

The CPU comprises at least one high speed data processor adequate to execute program components for executing user and or system generated requests. Often the processors themselves will incorporate various specialized processing units such as but not limited to integrated system bus controllers memory management control units floating point units and even specialized processing sub units like graphics processing units digital signal processing units and or the like. Additionally processors may include internal fast access addressable memory and be capable of mapping and addressing memory beyond the processor itself internal memory may include but is not limited to fast registers various levels of cache memory e.g. level 1 2 3 etc. RAM etc. The processor may access this memory through the use of a memory address space that is accessible via instruction address which the processor can construct and decode allowing it to access a circuit path to a specific memory address space having a memory state. The CPU may be a microprocessor such as AMD s Athlon Duron and or Opteron ARM s application embedded and secure processors IBM and or Motorola s DragonBall and PowerPC IBM s and Sony s Cell processor Intel s Celeron Core 2 Duo Itanium Pentium Xeon and or XScale and or the like processor s . The CPU interacts with memory through instruction passing through conductive and or transportive conduits e.g. printed electronic and or optic circuits to execute stored instructions i.e. program code according to conventional data processing techniques. Such instruction passing facilitates communication within the PAFT controller and beyond through various interfaces. Should processing requirements dictate a greater amount speed and or capacity distributed processors e.g. Distributed PAFT mainframe multi core parallel and or super computer architectures may similarly be employed. Alternatively should deployment requirements dictate greater portability smaller Personal Digital Assistants PDAs may be employed.

Depending on the particular implementation features of the PAFT may be achieved by implementing a microcontroller such as CAST s R8051XC2 microcontroller Intel s MCS 51 i.e. 8051 microcontroller and or the like. Also to implement certain features of the PAFT some feature implementations may rely on embedded components such as Application Specific Integrated Circuit ASIC Digital Signal Processing DSP Field Programmable Gate Array FPGA and or the like embedded technology. For example any of the PAFT component collection distributed or otherwise and or features may be implemented via the microprocessor and or via embedded components e.g. via ASIC coprocessor DSP FPGA and or the like. Alternately some implementations of the PAFT may be implemented with embedded components that are configured and used to achieve a variety of features or signal processing.

Depending on the particular implementation the embedded components may include software solutions hardware solutions and or some combination of both hardware software solutions. For example PAFT features discussed herein may be achieved through implementing FPGAs which are a semiconductor devices containing programmable logic components called logic blocks and programmable interconnects such as the high performance FPGA Virtex series and or the low cost Spartan series manufactured by Xilinx. Logic blocks and interconnects can be programmed by the customer or designer after the FPGA is manufactured to implement any of the PAFT features. A hierarchy of programmable interconnects allow logic blocks to be interconnected as needed by the PAFT system designer administrator somewhat like a one chip programmable breadboard. An FPGA s logic blocks can be programmed to perform the function of basic logic gates such as AND and XOR or more complex combinational functions such as decoders or simple mathematical functions. In most FPGAs the logic blocks also include memory elements which may be simple flip flops or more complete blocks of memory. In some circumstances the PAFT may be developed on regular FPGAs and then migrated into a fixed version that more resembles ASIC implementations. Alternate or coordinating implementations may migrate PAFT controller features to a final ASIC instead of or in addition to FPGAs. Depending on the implementation all of the aforementioned embedded components and microprocessors may be considered the CPU and or processor for the PAFT.

The power source may be of any standard form for powering small electronic circuit board devices such as the following power cells alkaline lithium hydride lithium ion lithium polymer nickel cadmium solar cells and or the like. Other types of AC or DC power sources may be used as well. In the case of solar cells in one embodiment the case provides an aperture through which the solar cell may capture photonic energy. The power cell is connected to at least one of the interconnected subsequent components of the PAFT thereby providing an electric current to all subsequent components. In one example the power source is connected to the system bus component . In an alternative embodiment an outside power source is provided through a connection across the I O interface. For example a USB and or IEEE 1394 connection carries both data and power across the connection and is therefore a suitable source of power.

Interface bus ses may accept connect and or communicate to a number of interface adapters conventionally although not necessarily in the form of adapter cards such as but not limited to input output interfaces I O storage interfaces network interfaces and or the like. Optionally cryptographic processor interfaces similarly may be connected to the interface bus. The interface bus provides for the communications of interface adapters with one another as well as with other components of the computer systemization. Interface adapters are adapted for a compatible interface bus. Interface adapters conventionally connect to the interface bus via a slot architecture. Conventional slot architectures may be employed such as but not limited to Accelerated Graphics Port AGP Card Bus Extended Industry Standard Architecture E ISA Micro Channel Architecture MCA NuBus Peripheral Component Interconnect Extended PCI X PCI Express Personal Computer Memory Card International Association PCMCIA and or the like.

Storage interfaces may accept communicate and or connect to a number of storage devices such as but not limited to storage devices removable disc devices and or the like. Storage interfaces may employ connection protocols such as but not limited to Ultra Serial Advanced Technology Attachment Packet Interface Ultra Serial ATA PI Enhanced Integrated Drive Electronics E IDE Institute of Electrical and Electronics Engineers IEEE 1394 fiber channel Small Computer Systems Interface SCSI Universal Serial Bus USB and or the like.

Network interfaces may accept communicate and or connect to a communications network . Through a communications network the PAFT controller is accessible through remote clients e.g. computers with web browsers by users . Network interfaces may employ connection protocols such as but not limited to direct connect Ethernet thick thin twisted pair 10 100 1000 Base T and or the like Token Ring wireless connection such as IEEE 802.11a x and or the like. Should processing requirements dictate a greater amount speed and or capacity distributed network controllers e.g. Distributed PAFT architectures may similarly be employed to pool load balance and or otherwise increase the communicative bandwidth required by the PAFT controller. A communications network may be any one and or the combination of the following a direct interconnection the Internet a Local Area Network LAN a Metropolitan Area Network MAN an Operating Missions as Nodes on the Internet OMNI a secured custom connection a Wide Area Network WAN a wireless network e.g. employing protocols such as but not limited to a Wireless Application Protocol WAP I mode and or the like and or the like. A network interface may be regarded as a specialized form of an input output interface. Further multiple network interfaces may be used to engage with various communications network types . For example multiple network interfaces may be employed to allow for the communication over broadcast multicast and or unicast networks.

Input Output interfaces I O may accept communicate and or connect to user input devices peripheral devices cryptographic processor devices and or the like. I O may employ connection protocols such as but not limited to audio analog digital monaural RCA stereo and or the like data Apple Desktop Bus ADB IEEE 1394a b serial universal serial bus USB infrared joystick keyboard midi optical PC AT PS 2 parallel radio video interface Apple Desktop Connector ADC BNC coaxial component composite digital Digital Visual Interface DVI high definition multimedia interface HDMI RCA RF antennae S Video VGA and or the like wireless transceivers 802.11a b g n x Bluetooth cellular e.g. code division multiple access CDMA high speed packet access HSPA high speed downlink packet access HSDPA global system for mobile communications GSM long term evolution LTE WiMax etc. and or the like. One typical output device may include a video display which typically comprises a Cathode Ray Tube CRT or Liquid Crystal Display LCD based monitor with an interface e.g. DVI circuitry and cable that accepts signals from a video interface may be used. The video interface composites information generated by a computer systemization and generates video signals based on the composited information in a video memory frame. Another output device is a television set which accepts signals from a video interface. Typically the video interface provides the composited video information through a video connection interface that accepts a video display interface e.g. an RCA composite video connector accepting an RCA composite video cable a DVI connector accepting a DVI display cable etc. .

User input devices often are a type of peripheral device see below and may include card readers dongles finger print readers gloves graphics tablets joysticks keyboards microphones mouse mice remote controls retina readers touch screens e.g. capacitive resistive etc. trackballs trackpads sensors e.g. accelerometers ambient light GPS gyroscopes proximity etc. styluses and or the like.

Peripheral devices may be connected and or communicate to I O and or other facilities of the like such as network interfaces storage interfaces directly to the interface bus system bus the CPU and or the like. Peripheral devices may be external internal and or part of the PAFT controller. Peripheral devices may include antenna audio devices e.g. line in line out microphone input speakers etc. cameras e.g. still video webcam etc. dongles e.g. for copy protection ensuring secure transactions with a digital signature and or the like external processors for added capabilities e.g. crypto devices force feedback devices e.g. vibrating motors network interfaces printers scanners storage devices transceivers e.g. cellular GPS etc. video devices e.g. goggles monitors etc. video sources visors and or the like. Peripheral devices often include types of input devices e.g. cameras .

It should be noted that although user input devices and peripheral devices may be employed the PAFT controller may be embodied as an embedded dedicated and or monitor less i.e. headless device wherein access would be provided over a network interface connection.

Cryptographic units such as but not limited to microcontrollers processors interfaces and or devices may be attached and or communicate with the PAFT controller. A MC68HC16 microcontroller manufactured by Motorola Inc. may be used for and or within cryptographic units. The MC68HC16 microcontroller utilizes a 16 bit multiply and accumulate instruction in the 16 MHz configuration and requires less than one second to perform a 512 bit RSA private key operation. Cryptographic units support the authentication of communications from interacting agents as well as allowing for anonymous transactions. Cryptographic units may also be configured as part of CPU. Equivalent microcontrollers and or processors may also be used. Other commercially available specialized cryptographic processors include the Broadcom s CryptoNetX and other Security Processors nCipher s nShield SafeNet s Luna PCI e.g. 7100 series Semaphore Communications 40 MHz Roadrunner 184 Sun s Cryptographic Accelerators e.g. Accelerator 6000 PCIe Board Accelerator 500 Daughtercard Via Nano Processor e.g. L2100 L2200 U2400 line which is capable of performing 500 MB s of cryptographic instructions VLSI Technology s 33 MHz 6868 and or the like.

Generally any mechanization and or embodiment allowing a processor to affect the storage and or retrieval of information is regarded as memory . However memory is a fungible technology and resource thus any number of memory embodiments may be employed in lieu of or in concert with one another. It is to be understood that the PAFT controller and or a computer systemization may employ various forms of memory . For example a computer systemization may be configured wherein the functionality of on chip CPU memory e.g. registers RAM ROM and any other storage devices are provided by a paper punch tape or paper punch card mechanism of course such an embodiment would result in an extremely slow rate of operation. In a typical configuration memory will include ROM RAM and a storage device . A storage device may be any conventional computer system storage. Storage devices may include a drum a fixed and or removable magnetic disk drive a magneto optical drive an optical drive i.e. Blueray CD ROM RAM Recordable R ReWritable RW DVD R RW HD DVD R RW etc. an array of devices e.g. Redundant Array of Independent Disks RAID solid state memory devices USB memory solid state drives SSD etc. other processor readable storage mediums and or other devices of the like. Thus a computer systemization generally requires and makes use of memory.

The memory may contain a collection of program and or database components and or data such as but not limited to operating system component s operating system information server component s information server user interface component s user interface Web browser component s Web browser database s mail server component s mail client component s cryptographic server component s cryptographic server the PAFT component s and or the like i.e. collectively a component collection . These components may be stored and accessed from the storage devices and or from storage devices accessible through an interface bus. Although non conventional program components such as those in the component collection typically are stored in a local storage device they may also be loaded and or stored in memory such as peripheral devices RAM remote storage facilities through a communications network ROM various forms of memory and or the like.

The operating system component is an executable program component facilitating the operation of the PAFT controller. Typically the operating system facilitates access of I O network interfaces peripheral devices storage devices and or the like. The operating system may be a highly fault tolerant scalable and secure system such as Apple Macintosh OS X Server AT T Nan 9 Be OS Unix and Unix like system distributions such as AT T s UNIX Berkley Software Distribution BSD variations such as FreeBSD NetBSD OpenBSD and or the like Linux distributions such as Red Hat Ubuntu and or the like and or the like operating systems. However more limited and or less secure operating systems also may be employed such as Apple Macintosh OS IBM OS 2 Microsoft DOS Microsoft Windows 2000 2003 3.1 95 98 CE Millenium NT Vista XP Server Palm OS and or the like. An operating system may communicate to and or with other components in a component collection including itself and or the like. Most frequently the operating system communicates with other program components user interfaces and or the like. For example the operating system may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses. The operating system once executed by the CPU may enable the interaction with communications networks data I O peripheral devices program components memory user input devices and or the like. The operating system may provide communications protocols that allow the PAFT controller to communicate with other entities through a communications network . Various communication protocols may be used by the PAFT controller as a subcarrier transport mechanism for interaction such as but not limited to multicast TCP IP UDP unicast and or the like.

An information server component is a stored program component that is executed by a CPU. The information server may be a conventional Internet information server such as but not limited to Apache Software Foundation s Apache Microsoft s Internet Information Server and or the like. The information server may allow for the execution of program components through facilities such as Active Server Page ASP ActiveX ANSI Objective C C and or .NET Common Gateway Interface CGI scripts dynamic D hypertext markup language HTML FLASH Java JavaScript Practical Extraction Report Language PERL Hypertext Pre Processor PHP pipes Python wireless application protocol WAP WebObjects and or the like. The information server may support secure communications protocols such as but not limited to File Transfer Protocol FTP HyperText Transfer Protocol HTTP Secure Hypertext Transfer Protocol HTTPS Secure Socket Layer SSL messaging protocols e.g. America Online AOL Instant Messenger AIM Application Exchange APEX ICQ Internet Relay Chat IRC Microsoft Network MSN Messenger Service Presence and Instant Messaging Protocol PRIM Internet Engineering Task Force s IETF s Session Initiation Protocol SIP SIP for Instant Messaging and Presence Leveraging Extensions SIMPLE open XML based Extensible Messaging and Presence Protocol XMPP i.e. Jabber or Open Mobile Alliance s OMA s Instant Messaging and Presence Service IMPS Yahoo Instant Messenger Service and or the like. The information server provides results in the form of Web pages to Web browsers and allows for the manipulated generation of the Web pages through interaction with other program components. After a Domain Name System DNS resolution portion of an HTTP request is resolved to a particular information server the information server resolves requests for information at specified locations on the PAFT controller based on the remainder of the HTTP request. For example a request such as http 123.124.125.126 myInformation.html might have the IP portion of the request 123.124.125.126 resolved by a DNS server to an information server at that IP address that information server might in turn further parse the http request for the myInformation.html portion of the request and resolve it to a location in memory containing the information myInformation.html. Additionally other information serving protocols may be employed across various ports e.g. FTP communications across port and or the like. An information server may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the information server communicates with the PAFT database operating systems other program components user interfaces Web browsers and or the like.

Access to the PAFT database may be achieved through a number of database bridge mechanisms such as through scripting languages as enumerated below e.g. CGI and through inter application communication channels as enumerated below e.g. CORBA WebObjects etc. . Any data requests through a Web browser are parsed through the bridge mechanism into appropriate grammars as required by the PAFT. In one embodiment the information server would provide a Web form accessible by a Web browser. Entries made into supplied fields in the Web form are tagged as having been entered into the particular fields and parsed as such. The entered terms are then passed along with the field tags which act to instruct the parser to generate queries directed to appropriate tables and or fields. In one embodiment the parser may generate queries in standard SQL by instantiating a search string with the proper join select commands based on the tagged text entries wherein the resulting command is provided over the bridge mechanism to the PAFT as a query. Upon generating query results from the query the results are passed over the bridge mechanism and may be parsed for formatting and generation of a new results Web page by the bridge mechanism. Such a new results Web page is then provided to the information server which may supply it to the requesting Web browser.

Also an information server may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses.

Computer interfaces in some respects are similar to automobile operation interfaces. Automobile operation interface elements such as steering wheels gearshifts and speedometers facilitate the access operation and display of automobile resources and status. Computer interaction interface elements such as check boxes cursors menus scrollers and windows collectively and commonly referred to as widgets similarly facilitate the access capabilities operation and display of data and computer hardware and operating system resources and status. Operation interfaces are commonly called user interfaces. Graphical user interfaces GUIs such as the Apple Macintosh Operating System s Aqua IBM s OS 2 Microsoft s Windows 2000 2003 3.1 95 98 CE Millenium NT XP Vista 7 i.e. Aero Unix s X Windows e.g. which may include additional Unix graphic interface libraries and layers such as K Desktop Environment KDE mythTV and GNU Network Object Model Environment GNOME web interface libraries e.g. ActiveX AJAX D HTML FLASH Java JavaScript etc. interface libraries such as but not limited to Dojo jQuery UI MooTools Prototype script.aculo.us SWFObject Yahoo User Interface any of which may be used and provide a baseline and means of accessing and displaying information graphically to users.

A user interface component is a stored program component that is executed by a CPU. The user interface may be a conventional graphic user interface as provided by with and or atop operating systems and or operating environments such as already discussed. The user interface may allow for the display execution interaction manipulation and or operation of program components and or system facilities through textual and or graphical facilities. The user interface provides a facility through which users may affect interact and or operate a computer system. A user interface may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the user interface communicates with operating systems other program components and or the like. The user interface may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses.

A Web browser component is a stored program component that is executed by a CPU. The Web browser may be a conventional hypertext viewing application such as Microsoft Internet Explorer or Netscape Navigator. Secure Web browsing may be supplied with 128 bit or greater encryption by way of HTTPS SSL and or the like. Web browsers allowing for the execution of program components through facilities such as ActiveX AJAX D HTML FLASH Java JavaScript web browser plug in APIs e.g. FireFox Safari Plug in and or the like APIs and or the like. Web browsers and like information access tools may be integrated into PDAs cellular telephones and or other mobile devices. A Web browser may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the Web browser communicates with information servers operating systems integrated program components e.g. plug ins and or the like e.g. it may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses. Of course in place of a Web browser and information server a combined application may be developed to perform similar functions of both. The combined application would similarly affect the obtaining and the provision of information to users user agents and or the like from the PAFT enabled nodes. The combined application may be nugatory on systems employing standard Web browsers.

A mail server component is a stored program component that is executed by a CPU . The mail server may be a conventional Internet mail server such as but not limited to sendmail Microsoft Exchange and or the like. The mail server may allow for the execution of program components through facilities such as ASP ActiveX ANSI Objective C C and or .NET CGI scripts Java JavaScript PERL PHP pipes Python WebObjects and or the like. The mail server may support communications protocols such as but not limited to Internet message access protocol IMAP Messaging Application Programming Interface MAPI Microsoft Exchange post office protocol POPS simple mail transfer protocol SMTP and or the like. The mail server can route forward and process incoming and outgoing mail messages that have been sent relayed and or otherwise traversing through and or to the PAFT.

Access to the PAFT mail may be achieved through a number of APIs offered by the individual Web server components and or the operating system.

Also a mail server may contain communicate generate obtain and or provide program component system user and or data communications requests information and or responses.

A mail client component is a stored program component that is executed by a CPU . The mail client may be a conventional mail viewing application such as Apple Mail Microsoft Entourage Microsoft Outlook Microsoft Outlook Express Mozilla Thunderbird and or the like. Mail clients may support a number of transfer protocols such as IMAP Microsoft Exchange POPS SMTP and or the like. A mail client may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the mail client communicates with mail servers operating systems other mail clients and or the like e.g. it may contain communicate generate obtain and or provide program component system user and or data communications requests information and or responses. Generally the mail client provides a facility to compose and transmit electronic mail messages.

A cryptographic server component is a stored program component that is executed by a CPU cryptographic processor cryptographic processor interface cryptographic processor device and or the like. Cryptographic processor interfaces will allow for expedition of encryption and or decryption requests by the cryptographic component however the cryptographic component alternatively may run on a conventional CPU. The cryptographic component allows for the encryption and or decryption of provided data. The cryptographic component allows for both symmetric and asymmetric e.g. Pretty Good Protection PGP encryption and or decryption. The cryptographic component may employ cryptographic techniques such as but not limited to digital certificates e.g. X.509 authentication framework digital signatures dual signatures enveloping password access protection public key management and or the like. The cryptographic component will facilitate numerous encryption and or decryption security protocols such as but not limited to checksum Data Encryption Standard DES Elliptical Curve Encryption ECC International Data Encryption Algorithm IDEA Message Digest 5 MD5 which is a one way hash function passwords Rivest Cipher RC5 Rijndael RSA which is an Internet encryption and authentication system that uses an algorithm developed in 1977 by Ron Rivest Adi Shamir and Leonard Adleman Secure Hash Algorithm SHA Secure Socket Layer SSL Secure Hypertext Transfer Protocol HTTPS and or the like. Employing such encryption security protocols the PAFT may encrypt all incoming and or outgoing communications and may serve as node within a virtual private network VPN with a wider communications network. The cryptographic component facilitates the process of security authorization whereby access to a resource is inhibited by a security protocol wherein the cryptographic component effects authorized access to the secured resource. In addition the cryptographic component may provide unique identifiers of content e.g. employing and MD5 hash to obtain a unique signature for an digital audio file. A cryptographic component may communicate to and or with other components in a component collection including itself and or facilities of the like. The cryptographic component supports encryption schemes allowing for the secure transmission of information across a communications network to enable the PAFT component to engage in secure transactions if so desired. The cryptographic component facilitates the secure accessing of resources on the PAFT and facilitates the access of secured resources on remote systems i.e. it may act as a client and or server of secured resources. Most frequently the cryptographic component communicates with information servers operating systems other program components and or the like. The cryptographic component may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses.

The PAFT database component may be embodied in a database and its stored data. The database is a stored program component which is executed by the CPU the stored program component portion configuring the CPU to process the stored data. The database may be a conventional fault tolerant relational scalable secure database such as Oracle or Sybase. Relational databases are an extension of a flat file. Relational databases consist of a series of related tables. The tables are interconnected via a key field. Use of the key field allows the combination of the tables by indexing against the key field i.e. the key fields act as dimensional pivot points for combining information from various tables. Relationships generally identify links maintained between tables by matching primary keys. Primary keys represent fields that uniquely identify the rows of a table in a relational database. More precisely they uniquely identify rows of a table on the one side of a one to many relationship.

Alternatively the PAFT database may be implemented using various standard data structures such as an array hash linked list struct structured text file e.g. XML table and or the like. Such data structures may be stored in memory and or in structured files. In another alternative an object oriented database may be used such as Frontier ObjectStore Poet Zope and or the like. Object databases can include a number of object collections that are grouped and or linked together by common attributes they may be related to other object collections by some common attributes. Object oriented databases perform similarly to relational databases with the exception that objects are not just pieces of data but may have other types of functionality encapsulated within a given object. If the PAFT database is implemented as a data structure the use of the PAFT database may be integrated into another component such as the PAFT component . Also the database may be implemented as a mix of data structures objects and relational structures. Databases may be consolidated and or distributed in countless variations through standard data processing techniques. Portions of databases e.g. tables may be exported and or imported and thus decentralized and or integrated.

In one embodiment the database component includes several tables . A User table may include fields such as but not limited to user id applicant id firstname lastname address line address line dob ssn credit check flag zipcode city state account params list account mode account type account expiry preferred bank name preferred branch name credit report and or the like. The User table may support and or track multiple entity accounts on a PAFT. A Clients table may include fields such as but not limited to client ID client type client MAC client IP presentation format pixel count resolution screen size audio fidelity hardware settings list software compatibilities list installed apps list and or the like. An Invitations table may include fields such as but not limited to request id timestamp transferor id client IP transferee details list transferee type first name last name contact type contact info alt contact info alt contact type alt contact info client type num invite attempts account params list same bank flag same branch flag persistent link flag transfer param list on schedule flag one time flag amount instant transfer flag custom invitation transferee details list transferee client IP and or the like. A Forms table may include fields such as but not limited to invitation template list invitation type invitation data and or the like. A Clearance table may include fields such as but not limited to applicant firstname applicant lastname applicant address line applicant address line consumer bureau data list consumer bureau data applicant clear flag credit limit credit score account balances delinquency flag quality flags and or the like. A Links table may include fields such as but not limited to timestamp link ID bidirectional flag transferor ID transferor account num transferor bank transferor branch transferor ABA transferee ID transferee account num transferee bank transferee branch transferee ABA and or the like. A Schedules table may include fields such as but not limited to timestamp transferor ID transferee ID link ID num transfers transfer date transfer frequency transfer interval notify transfers settings and or the like. A Bank Accounts table may include fields such as but not limited to account id account firstname account lastname accountholder type account type contact type contact info opening balance current balance and or the like. A Transfers table may include fields such as but not limited to transfer ID transferor ID transferee ID link ID transfer amount timestamp notify transfers flags and or the like. An App Modules table may include fields such as but not limited to app ID app name app type OS compatibilities list version timestamp developer ID and or the like. A Market Data table may include fields such as but not limited to market data feed ID asset ID asset symbol asset name spot price bid price ask price and or the like in one embodiment the market data table is populated through a market data feed e.g. Bloomberg s PhatPipe Dun Bradstreet Reuter s Tib Triarch etc. for example through Microsoft s Active Template Library and Dealing Object Technology s real time toolkit Rtt.Multi.

In one embodiment the PAFT database may interact with other database systems. For example employing a distributed database system queries and data access by search PAFT component may treat the combination of the PAFT database an integrated data security layer database as a single database entity.

In one embodiment user programs may contain various user interface primitives which may serve to update the PAFT. Also various accounts may require custom database tables depending upon the environments and the types of clients the PAFT may need to serve. It should be noted that any unique fields may be designated as a key field throughout. In an alternative embodiment these tables have been decentralized into their own databases and their respective database controllers i.e. individual database controllers for each of the above tables . Employing standard data processing techniques one may further distribute the databases over several computer systemizations and or storage devices. Similarly configurations of the decentralized database controllers may be varied by consolidating and or distributing the various database components . The PAFT may be configured to keep track of various settings inputs and parameters via database controllers.

The PAFT database may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the PAFT database communicates with the PAFT component other program components and or the like. The database may contain retain and provide information regarding other nodes and data.

The PAFT component is a stored program component that is executed by a CPU. In one embodiment the PAFT component incorporates any and or all combinations of the aspects of the PAFT discussed in the previous figures. As such the PAFT affects accessing obtaining and the provision of information services transactions and or the like across various communications networks.

The PAFT component may transform prepaid account invitation requests via PAFT components into scheduled prepaid account transactions and or the like and use of the PAFT. In one embodiment the PAFT component takes inputs e.g. invitation request input invitation template invitation acceptance input invitation type prepaid account application form application form input applicant screening failure report applicant screening success report payment order input receivables request input transfer schedule transfer link data user profile data and or the like etc. and transforms the inputs via various components e.g. PAM component PAR component Tr FTT component Te FTT component S FTT component PA FTP component and or the like into outputs e.g. invitation data customized prepaid account invitation invitation confirmation message prepaid account application form application denial notification prepaid account opening request message account issue message user profile prepaid account link data prepaid account funds transfer schedule transaction data transactions notifications and or the like .

The PAFT component enabling access of information between nodes may be developed by employing standard development tools and languages such as but not limited to Apache components Assembly ActiveX binary executables ANSI Objective C C and or .NET database adapters CGI scripts Java JavaScript mapping tools procedural and object oriented development tools PERL PHP Python shell scripts SQL commands web application server extensions web development environments and libraries e.g. Microsoft s ActiveX Adobe AIR FLEX FLASH AJAX D HTML Dojo Java JavaScript jQuery UI MooTools Prototype script.aculo.us Simple Object Access Protocol SOAP SWFObject Yahoo User Interface and or the like WebObjects and or the like. In one embodiment the PAFT server employs a cryptographic server to encrypt and decrypt communications. The PAFT component may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the PAFT component communicates with the PAFT database operating systems other program components and or the like. The PAFT may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses.

The structure and or operation of any of the PAFT node controller components may be combined consolidated and or distributed in any number of ways to facilitate development and or deployment. Similarly the component collection may be combined in any number of ways to facilitate deployment and or development. To accomplish this one may integrate the components into a common code base or in a facility that can dynamically load the components on demand in an integrated fashion.

The component collection may be consolidated and or distributed in countless variations through standard data processing and or development techniques. Multiple instances of any one of the program components in the program component collection may be instantiated on a single node and or across numerous nodes to improve performance through load balancing and or data processing techniques. Furthermore single instances may also be distributed across multiple controllers and or storage devices e.g. databases. All program component instances and controllers working in concert may do so through standard data processing communication techniques.

The configuration of the PAFT controller will depend on the context of system deployment. Factors such as but not limited to the budget capacity location and or use of the underlying hardware resources may affect deployment requirements and configuration. Regardless of if the configuration results in more consolidated and or integrated program components results in a more distributed series of program components and or results in some combination between a consolidated and distributed configuration data may be communicated obtained and or provided. Instances of components consolidated into a common code base from the program component collection may communicate obtain and or provide data. This may be accomplished through intra application data processing communication techniques such as but not limited to data referencing e.g. pointers internal messaging object instance variable communication shared memory space variable passing and or the like.

If component collection components are discrete separate and or external to one another then communicating obtaining and or providing data with and or to other component components may be accomplished through inter application data processing communication techniques such as but not limited to Application Program Interfaces API information passage distributed Component Object Model D COM Distributed Object Linking and Embedding D OLE and or the like Common Object Request Broker Architecture CORBA Jini local and remote application program interfaces JavaScript Object Notation JSON Remote Method Invocation RMI SOAP process pipes shared files and or the like. Messages sent between discrete component components for inter application communication or within memory spaces of a singular component for intra application communication may be facilitated through the creation and parsing of a grammar. A grammar may be developed by using development tools such as lex yacc XML and or the like which allow for grammar generation and parsing capabilities which in turn may form the basis of communication messages within and between components.

where Value1 is discerned as being a parameter because http is part of the grammar syntax and what follows is considered part of the post value. Similarly with such a grammar a variable Value1 may be inserted into an http post command and then sent. The grammar syntax itself may be presented as structured data that is interpreted and or otherwise used to generate the parsing mechanism e.g. a syntax description text file as processed by lex yacc etc. . Also once the parsing mechanism is generated and or instantiated it itself may process and or parse structured data such as but not limited to character e.g. tab delineated text HTML structured text streams XML and or the like structured data. In another embodiment inter application data processing protocols themselves may have integrated and or readily available parsers e.g. JSON SOAP and or like parsers that may be employed to parse e.g. communications data. Further the parsing grammar may be used beyond message parsing but may also be used to parse databases data collections data stores structured data and or the like. Again the desired configuration will depend upon the context environment and requirements of system deployment.

For example in some implementations the PAFT controller may be executing a PHP script implementing a Secure Sockets Layer SSL socket server via the information server which listens to incoming communications on a server port to which a client may send data e.g. data encoded in JSON format. Upon identifying an incoming communication the PHP script may read the incoming message from the client device parse the received JSON encoded text data to extract information from the JSON encoded text data into PHP script variables and store the data e.g. client identifying information etc. and or extracted information in a relational database accessible using the Structured Query Language SQL . An example listing written substantially in the form of PHP SQL commands to accept JSON encoded input data from a client device via a SSL connection parse the data to extract variables and store the data to a database is provided below 

Also the following resources may be used to provide example embodiments regarding SOAP parser implementation 

In order to address various issues and advance the art the entirety of this application for PREPAID ACCOUNT FUNDS TRANSFER APPARATUSES METHODS AND SYSTEMS including the Cover Page Title Headings Field Background Summary Brief Description of the Drawings Detailed Description Claims Abstract Figures Appendices and or otherwise shows by way of illustration various embodiments in which the claimed inventions may be practiced. The advantages and features of the application are of a representative sample of embodiments only and are not exhaustive and or exclusive. They are presented only to assist in understanding and teach the claimed principles. It should be understood that they are not representative of all claimed inventions. As such certain aspects of the disclosure have not been discussed herein. That alternate embodiments may not have been presented for a specific portion of the invention or that further undescribed alternate embodiments may be available for a portion is not to be considered a disclaimer of those alternate embodiments. It will be appreciated that many of those undescribed embodiments incorporate the same principles of the invention and others are equivalent. Thus it is to be understood that other embodiments may be utilized and functional logical organizational structural and or topological modifications may be made without departing from the scope and or spirit of the disclosure. As such all examples and or embodiments are deemed to be non limiting throughout this disclosure. Also no inference should be drawn regarding those embodiments discussed herein relative to those not discussed herein other than it is as such for purposes of reducing space and repetition. For instance it is to be understood that the logical and or topological structure of any combination of any program components a component collection other components and or any present feature sets as described in the figures and or throughout are not limited to a fixed operating order and or arrangement but rather any disclosed order is exemplary and all equivalents regardless of order are contemplated by the disclosure. Furthermore it is to be understood that such features are not limited to serial execution but rather any number of threads processes services servers and or the like that may execute asynchronously concurrently in parallel simultaneously synchronously and or the like are contemplated by the disclosure. As such some of these features may be mutually contradictory in that they cannot be simultaneously present in a single embodiment. Similarly some features are applicable to one aspect of the invention and inapplicable to others. In addition the disclosure includes other inventions not presently claimed. Applicant reserves all rights in those presently unclaimed inventions including the right to claim such inventions file additional applications continuations continuations in part divisions and or the like thereof. As such it should be understood that advantages embodiments examples functional features logical organizational structural topological and or other aspects of the disclosure are not to be considered limitations on the disclosure as defined by the claims or limitations on equivalents to the claims. It is to be understood that depending on the particular needs and or characteristics of a PAFT individual and or enterprise user database configuration and or relational model data type data transmission and or network framework syntax structure and or the like various embodiments of the PAFT may be implemented that enable a great deal of flexibility and customization. For example aspects of the PAFT may be adapted for credit cards certificates of deposit CDs money market accounts stock purchases trading systems mortgages insurance policies and or the like. In general it is contemplated that aspects of the PAFT may be adapted for any mode of transfer of wealth from one entity to another. While various embodiments and discussions of the PAFT have been directed to account based transactions however it is to be understood that the embodiments described herein may be readily configured and or customized for a wide variety of other applications and or implementations.

