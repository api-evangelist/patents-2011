---

title: Method and apparatus for building a hardware root of trust and providing protected content processing within an open computing platform
abstract: A system architecture provides a hardware-based root of trust solution for supporting distribution and playback of premium digital content. In an embodiment, hardware root of trust for digital content and services is a solution where the basis of trust for security purposes is rooted in hardware and firmware mechanisms in a client computing system, rather than in software. From this root of trust, the client computing system constructs an entire media processing pipeline that is protected for content authorization and playback. In embodiments of the present invention, the security of the client computing system for content processing is not dependent on the operating system (OS), basic input/output system (BIOS), media player application, or other host software.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08625788&OS=08625788&RS=08625788
owner: Intel Corporation
number: 08625788
owner_city: Santa Clara
owner_country: US
publication_date: 20110105
---
The present disclosure generally relates to the field of computing system architectures for securely processing digital content. More particularly an embodiment of the invention relates to building a hardware root of trust and protecting digital content processing end to end in a computing system.

On open computing platforms such as a personal computer PC system for example when playing premium content such as from a DVD Blu Ray etc. the digital rights management DRM processing and key management are typically performed in software by a media player application program. These schemes are not well protected and there have been instances of hacking resulting in pirated content and loss of revenue to content owners. When content is played even though the media decompression such as H.264 MPEG 2 etc. is done in hardware the content is in the clear in system memory and can be stolen with software based and or hardware based attacks. Due to these noted security weaknesses only lower fidelity such as standard definition SD content or less valuable high definition HD content is typically distributed to open computing platforms. Improvements to the secure handling of digital content by open computing platforms such as a PC for example are desired.

Embodiments of the present invention comprise a system architecture that provides a hardware based root of trust HW ROT solution for supporting distribution and playback of premium digital content. In an embodiment HW ROT for digital content and services is a solution where the basis of trust for security purposes is rooted in hardware and firmware mechanisms in a client computing system rather than in software. From this root of trust the client computing system constructs an entire media processing pipeline that is protected for content authorization and playback. In embodiments of the present invention the security of the client computing system for content processing is not dependent on the operating system OS basic input output system BIOS media player application or other host software. In order to compromise the system one will need to compromise the hardware and or firmware mechanisms as opposed to attacking the software running on top of the OS.

In the following description numerous specific details are set forth in order to provide a thorough understanding of various embodiments. However various embodiments of the invention may be practiced without the specific details. In other instances well known methods procedures components and circuits have not been described in detail so as not to obscure the particular embodiments of the invention. Further various aspects of embodiments of the invention may be performed using various means such as integrated semiconductor circuits hardware computer readable instructions organized into one or more programs stored on a computer readable storage medium software or some combination of hardware and software. For the purposes of this disclosure reference to logic shall mean hardware software including for example micro code that controls the operations of a processor firmware or some combination thereof.

Embodiments of the present invention protect content protection processing key management processing and content playback by using firmware and hardware in the CPU chipset and integrated graphics media engine of a client computing system to perform these functions. Embodiments of the present invention provide end to end protection of the content as the content is processed by components within a computing system. is a diagram of a secure content processing pipeline according to an embodiment of the present invention. Content may be accessible by a service provider SP server . Content may be any digital information such as audio video or audio video data images text books magazines games or application programs. Service provider server may include one or more servers for providing the content to a client computing system over any telecommunications channel such as the Internet cellular networks wired or wireless networks etc. . Content may be protected by any known content protection technology e.g. digital rights management DRM technology cryptographic techniques etc. while stored in the SP server and during transfer to the client computing system . In one embodiment the content may be protected by the Enhanced Privacy ID EPID signature verification protocol as discussed herein. In one embodiment video data may be encrypted using the Advanced Encryption Standard AES cryptographic processing with CTR mode. The client computing system may be a PC laptop netbook tablet computer handheld computer smart phone personal digital assistant PDA set top box consumer electronics equipment or any other computing device capable of receiving storing and rendering content.

Within the client computing system content protection processing may be performed by a Security Processor . In one embodiment the security processor may be within a chipset of the client computing system. In an embodiment the chipset comprises a platform control hub PCH . In another embodiment the Security Processor may be within the CPU of the client computing system. In another embodiment having a system on chip SOC configuration the Security Processor may be integral with other system components on a single chip. In one embodiment the security processor comprises a Manageability Engine ME . In other embodiments other types of security processors may be used. The Security Processor is a subsystem implemented in hardware and firmware that interacts with other components of the client computing system. The Security Processor operates by loading firmware code from a protected flash memory region and executing the firmware code in protected memory. Since the content protection processing is performed in hardware and firmware within the Security Processor protection of the content may be improved over software based systems.

Cryptographic key information may be sent from the security processor over a protected chip to chip interconnect to a component containing a central processing unit CPU and an integrated graphics GFX media engine. In an embodiment the protected chip to chip interconnect comprises a secure Direct Media Interface DMI communications link to the CPU GFX component. DMI comprises a chip to chip interconnect with two unidirectional lanes of concurrent data traffic and isochronous transfer with improved quality of service. Data transferred over the DMI link may be protected by known cryptographic processing techniques. In an embodiment the chip to chip secure link may be used for passing encrypted title keys over the DMI. Security is based on a shared secret between the PCH and the CPU. This shared secret may be established on each power cycle and can vary between families of products generations and random groupings as needed to ensure protection and integrity of the shared secret. The DMI mechanism is independent of the OS the BIOS and software running on the CPU. The DMI mechanism may be used to create a trust relationship between the security processor in the PCH and the CPU.

The GFX engine may include content protection processing to decrypt the content. The GFX engine also includes decoder logic to process decode the decrypted audio video content and pass the audio video content as media blocks to a graphics processing unit GPU within the GFX engine . The GPU includes security techniques including using encoder logic to protect the media blocks during processing in memory. GFX engine also includes composition logic to compose the image data to be shown on display . As the content is being handled within and between the security processor in the PCH and the GFX engine in the CPU GFX component the content may be protected by a hardware protected data path . In an embodiment the hardware protected data path comprises a Protected Audio Video Path PAVP to maintain the security of the content. PAVP also supports an encrypted connection state between system components. By using the PAVP the system may further protect the content during transfer between system components and within memory.

The interface between the GFX engine the PCH and the display may be implemented by protected wired wireless display links . In one embodiment display data sent from the GFX engine via a memory through the PCH to the display may be protected by a High Bandwidth Digital Content Protection HDCP content protection scheme. The HDCP specification provides a robust cost effective and transparent method for transmitting and receiving digital entertainment content to compliant digital displays. In an embodiment the wired link may be implemented according to the HDCP Specification Revision 2.0 available from Digital Content Protection LLC or subsequent revisions. HDCP may be employed to deter copying of the display data as the data travels over a DisplayPort Digital Visual Interface DVI High Definition Multimedia Interface HDMI Gigabit Video Interface GVIF or a Unified Display Interface UDI connection. The HDCP revision 2.0 specification addresses emerging usage models that let end users conveniently connect displays devices and home theater systems via standard protocols and interfaces like TCP IP USB Wi Fi and WirelessHD. The HDCP revision 2.0 specification uses standards based RSA public key and Advanced Encryption Standard AES 128 bit encryption for robust content protection. In an HDCP system two or more HDCP devices are interconnected through an HDCP protected interface. The audiovisual content protected by HDCP flows from the Upstream Content Control Function into the HDCP system at the most upstream HDCP Transmitter. From there the HDCP content encrypted by the HDCP system flows through a tree shaped topology of HDCP receivers over HDCP protected interfaces.

The HDCP content protection mechanism includes three elements 1 Authentication of HDCP receivers to their immediate upstream connection to an HDCP transmitter . The authentication protocol is the mechanism through which the HDCP transmitter verifies that a given HDCP Receiver is licensed to receive HDCP. 2 Revocation of HDCP receivers that are determined by the DCP to be invalid. 3 HDCP encryption of audiovisual content over the HDCP protected interfaces between HDCP transmitters and their downstream HDCP receivers. HDCP receivers may render the HDCP content in audio and visual form for human consumption. HDCP receivers may be HDCP repeaters that serve as downstream HDCP transmitters emitting the HDCP content further downstream to one or more additional HDCP receivers. In one embodiment display data sent to the display may be sent over a protected wireless display WiDi link using 802.11n wireless local area network WLAN technology.

As can be seen from in embodiments of the present invention from the time the content is received from the service provider server until the content is displayed on the display no cryptographic key or content is available in unencrypted form to any software or unauthorized hardware running on the computing system. Further memory protection for video data is offered over the whole chain across the decrypt decode encode compose and display pipelines. This capability is offered at the full memory bandwidth without compromising overall system performance.

The deployment component includes a certificate issuance component a key generation Key Gen component and a revocation manager . Certificate Cert issuance component issues a digital certificate for the SP Server and Client components giving them the authorization to interact with such client systems for service deployment. Key generation Key Gen component generates a cryptographic signing key pair a root key pair digital certificates and group public keys and signs the group public keys for each group. Revocation manager determines identifiers and signatures of client computing systems to be added to a revocation list RL updates the RL and distributes updated RLs.

The SP server communicates over network such as the Internet with the client computing system. The service provider server comprises a SP server application and a SP server agent . The SP server application provides content browsing capabilities. The SP server agent controls the sending of client specific messages manages cryptographic keys and authorized user tokens and maintains content delivery service status for deployment purposes and could be physically different servers firewalled and separated . Content encrypter accepts content and encrypts the content for secure delivery to a client computing system. Content server sends the encrypted content to the client. Key server is responsible for provisioning the title keys to the client computing systems within an authenticated session. Server certificate is used by the SP server agent to participate in mutual authentication and establishment of the authenticated session with the client computing systems. Communications links between SP server agent key server and content server are protected by well accepted information security practices. The key server has the highest network and access protection to ensure only authorized parties are able to reach it and the keys managed by the key server are isolated and firewalled from attackers from outside network entities. The SP server agent or the key server has access to the private key associated with the server certificate . In an embodiment this private key and all operations done with this private key are protected using a hardware security module HSM not shown in on the server.

In an embodiment the cryptographic scheme used to authenticate the client computing system with the SP server comprises a cryptographic authentication protocol protecting a user s privacy based on the use of zero knowledge proofs. In an embodiment the cryptographic authentication protocol comprises the Enhanced Privacy ID EPID scheme a Direct Anonymous Attestation DAA scheme with enhanced revocation capabilities. EPID mitigates the privacy issues of common Rivest Shamir Adleman RSA public key infrastructure PKI security implementations where every individual is uniquely identified for each transaction. Instead EPID provides the capability of remote attestation but only identifies the client computing system as having a component such as a chipset from a particular technology generation. EPID is a group signature scheme where one group s public key corresponds to multiple private keys and private keys generate a group signature which is verified by the group public key. EPID provides the security property of being anonymous and unlinkable given two signatures one cannot determine whether the signatures are generated from one or two private keys. EPID also provides the security property of being unforgeable without a private key one cannot create a valid signature.

Generally setting up a secure communications channel with EPID may be accomplished as follows. A first party such as the client computing system sends an EPID certificate to a second party such as the service provider server . Never knowing the identity of the first party and only knowing the first party is a computing platform with a trusted security processor the second party authenticates the first party. The first party then authenticates the second party using the second party s public key certificate. Since the second party doesn t require privacy the second party s public key certificate may not be an EPID certificate but it could be . The parties may then enter into a Diffie Hellman DH key exchange agreement.

Various suitable embodiments of DAA and EPID are described in the following co patent applications incorporated herein by reference An Apparatus and Method of Direct Anonymous Attestation from Bilinear Maps by Ernest F. Brickell and Jingtao Li Ser. No. 11 778 804 filed Jul. 7 2007 An Apparatus and Method for a Direct Anonymous Attestation Scheme from Short Group Signatures by Ernest F. Brickell and Jingtao Li Ser. No. 12 208 989 filed Sep. 11 2008 and Direct Anonymous Attestation Scheme with Outsourcing Capability by Ernest F. Brickell and Jingtao Li Ser. No. 12 286 303 filed Sep. 29 2008. In other embodiments other authentication and attestation schemes may also be used.

The client computing system comprises at least three main components host software chipset hardware firmware and the CPU GFX Media engines. It is assumed in embodiments of the present invention that the host software is untrusted. Even if the host software gets attacked no secrets will be compromised. Host software is responsible for network connection to SP server and downloading media from content server . Host software acts as a proxy between various SP servers and the chipset hardware firmware. Host software sends encrypted content directly to the graphics hardware after the chipset hardware firmware has completed title key unwrap and injection into the CPU GFX component.

Chipset hardware firmware is responsible for all protected processing taking the role of the protected device for content protection processing. In an embodiment the chipset hardware firmware sends protected title keys to the graphics hardware using the DMI mechanism.

The CPU GFX component is responsible for final stream decryption decode and display. The GFX engine is a passive device making no policy decisions. When asked the GFX engine simply decrypts the content then decodes the submitted video slices. In an embodiment the GFX engine with protected media encoders re encrypts the display content for HDCP output protection over HDMI and wireless e.g. WiDi displays.

A protected client computing system must be remotely identified by a service provider before sending highly sensitive information. The mechanism used to identify the platform must not violate user privacy. Embodiments of the present invention provide a protected mechanism for a service provider to verify over the network that the service provider server is communicating to a suitable client computing system and transfer title keys and other confidential material to that client computing system. In one embodiment the protocol utilized to establish a protected session between the service provider server and the client computing system is EPID. EPID allows for a single public key to anonymously verify the signature generated by N private keys in what is called an EPID group. To implement EPID each chipset contains a unique private key blown into the platform control hub PCH fuses during silicon manufacturing. In an embodiment the chipset manufacturer places 1 000 000 private keys in a single group and produces 400 groups for each chipset produced. In order to act as the EPID verifier each service provider will be provisioned with these 400 public keys.

Once a protected EPID session has been established the service provider server is free to exchange protected confidential information with the protected client computing system. For content streaming protected title keys may be passed from an SP server to the security processor in the chipset. The security processor sends the protected title keys to the graphics and audio hardware. At this point encrypted video and audio content can be directly sent from a content server to client computing system graphics and audio hardware which decrypts decodes and displays the content. For downloading content the security processor binds the title keys to the client computing system using a unique platform storage key again burned into PCH fuses during manufacturing and returns the bound keys to media player software. When playback is desired the bound title keys are re submitted to the security processor which unbinds and sends them in a protected manner to the graphics and audio hardware.

SP client application enables the SP player media browser and the service agent to access content protection features on the client computing system s hardware and firmware and for relaying messages to the service provider server . In an embodiment the SP client application comprises a host agent software development kit SDK including content protection APIs. In an embodiment the SP client application communicates with the security processor in the platform control hub PCH of the chipset.

Audio driver provides an interface between the media player and audio decrypt hardware . Similarly graphics GFX driver provides an interface between the media player and the GFX engine . In an embodiment the PCH comprises security processor which executes firmware to provide content protection functionality along with other well known system functions. In an embodiment the security processor may be implemented by a Manageability Engine ME . As content is handled by the PCH and the GFX engine the content may be protected at least in part by Protected Audio Video Path PAVP components in the PCH hardware firmware and GFX engine hardware respectively.

The client computing system then gets the encrypted content at block from content server over network for streaming operations or from local storage on the client computing system for content previously purchased downloaded and stored . The system is prepared to work on video slices e.g. sub frame . As a result the hardware can process the data as soon as the first slice of data is submitted.

At block the user initiates playback of the selected content using the SP player media browser . The key blob is submitted to the security processor for unpacking and extracting of the title key. When that is done the title key is loaded by the security processor into the graphics hardware for decryption. The SP player media browser submits the encrypted content to the media processing engine within GFX engine at block . The GFX engine decrypts the content using the title keys and re encrypts the content using a local protected key. Re encrypted data may be stored in protected local or system memory. The re encrypted content is subsequently obtained decrypted and decompressed at block . The decrypt is performed first. Once the data is decrypted the data is decoded decompressed. Once the data is decompressed the data is re encrypted and passed to the composition engine via the system memory. Once the composition is finished the data is again protected and passed using system memory to the display engine. In an embodiment each component along the way has the ability to decrypt process and re encrypt as necessary.

At block the GFX engine re encrypts the media content using HDCP technology in an embodiment and delivers the content to the display for viewing by the user. At each step of the process the content is never in the clear where it is accessible by software or unauthorized hardware components running on the client computing system.

GFX engine comprises a plurality of components. Media encrypt decrypt engine comprises logic to encrypt and decrypt content. Media encode decode engine comprises logic to encode and decode content. GFX Composition Comp engine comprises logic to construct display images. Display engine comprises logic to pass the composed display images to the display. Display encrypt decrypt engine comprises logic to encrypt and decrypt display data prior to sending the display data to display over protected link . Memory encrypt decrypt engine comprises logic to encrypt and decrypt data stored in protected intermediate surfaces in memory . Memory also includes logic to implement confidentiality and integrity protected memory operations .

Second component comprises a plurality of components some of which are not shown in order to simplify . Second component comprises a security processor . Security processor includes firmware and or hardware logic to provide attestation provisioning key management and output control operations for the client computing system. Security processor also includes fuses shared secret and trust anchors for supporting a PKI such as verification keys and key hierarchy information. Fuses are programmed into the hardware of the first and second components during manufacturing of the chipset with key material for EPID use. The hardware root of trust is built up from the information programmed into the fuses on the manufacturing floor when the client computing system is manufactured. This ensures that each individual client computing system is unique yet privacy protected. Shared secret is hard coded into the hardware of the first and second components during manufacturing of the chipset and CPU GFX components. In an embodiment the shared secret may be used in setting up the secure chip to chip communications channel over the DMI link .

Client computing system also includes a protected real time clock for providing secure clock services a display and a non volatile memory NVM . In an embodiment the protected real time clock may be seeded by a third party and may be virtualized for multiple service providers. The NVM may be used to store the firmware image for the second component as well as to store temporary data such as integrity and state information for security processor processing operations.

In an embodiment a processing flow may be described as follows. SP player media browser presents a user interface to the user. The user goes to the service provider s web site to browse available content. The SP web site has an auto detection capability to determine if the user s client computing system has integrated within it the capability of authenticating with the SP server . If capable the user ias allowed to choose content. The content may be bought rented or subscribed to or may be streamed. The user pays for the content. SP player media browser invokes security processor to authenticate the client computing system with the SP server . In an embodiment the authentication uses EPID technology. The client computing system is authenticated at least in part by having the SP server verify the client computing system s certificate perform a revocation check and verify a certification path to a certificate authority using the EPID protocol in one embodiment . When both the client computing system and the SP server are authenticated a secure communications channel may be set up based on the EPID protocol in one embodiment. In an embodiment once the secure communication channel is set up a command set may be used for end to end content protection capabilities.

The SP Server provisions an encrypted title key to the client computing system with constraints on usage of the content e.g. time . The SP server sends the encrypted title key over the secure channel to security processor . Security processor decrypts the encrypted title key using its own key hierarchy. Security processor uses a storage key to re encrypt the newly decrypted title key to form a key blob. The key blob is bound to the client computing system for a specified time period. Security processor sends the key blob to SP player media browser running in the CPU core. SP player media browser stores the key blob in HDD SSD . SP player media browser then downloads the user selected encrypted content. In one embodiment the downloaded encrypted content may be stored in the HDD SSD .

When a user wants to play the content the SP player media browser submits the key blob back to the security processor . The security processor verifies the signature of the key blob and checks usage constraints such as time for example. The security processor sends the encrypted title key over the encrypted channel e.g. DMI link to the media encrypt decrypt component of the GFX engine . The security processor instructs the SP player media browser that the GFX media engine is ready to process the encrypted content. The SP player media browser reads the encrypted content from the HDD SDD or obtains the encrypted content from the SP server over the network for a streaming application and sends the encrypted content to the GFX engine slice by slice.

The GFX engine processes the encrypted content in a slice by slice manner. For each slice the SP player media browser reads the slice headers in the clear. The rest of the slice is encrypted so that the SP player media browser cannot access the content. The SP player media browser keeps track of playback state information using an initialization vector. The media encrypt decrypt engine decrypts the content using the title key after decrypting the encrypted title key received from the security processor. In one embodiment the output data of the media encrypt decrypt engine is still compressed according to the well known H.264 encoding scheme. In other embodiments other encoding schemes may be used. The media encode decode engine decodes each slice and then re encrypts the slice using memory encrypt decrypt . The re encrypted content slice is stored in protected intermediate surfaces in memory . GFX composition engine controls the composition of the image to be displayed on the display including the foreground and background images windows etc. The GFX composition engine obtains the re encrypted content slices from protected intermediate surfaces in memory to generate the composed image. The GFX composition engine sends the composed image data to the display engine .

The display engine uses display encrypt decrypt engine to decrypt the composed image from the encryption that was used to store the content slices in memory . The display engine uses the display encrypt decrypt engine to re encrypt the composed image data according to the HDCP technology in one embodiment. The encrypted composed image data is sent by the GFX engine over the protected chip to chip data interface e.g. DMI link to the second component for transfer to the display over protected display interface link .

In an embodiment there can be any number of concurrent independent content streams being processed by the client computing system. Each content stream has its own cryptographic context so as not to interfere with other streams. This also allows for the client computing system to ensure that any kind of attack or compromise on one stream does not affect the other content streams.

1. Downloading of high definition HD standard definition SD Portable Definition PD content titles. The service providers distribute the content in the right format for a given client computing system. Users are able to opt for an electronic copy of a content title instead of obtaining physical optical discs such as DVD or Blu Ray discs .

2. Streaming of HD SD PD content titles. The service providers are able to setup a session and stream the content to a client computing system as needed. The client computing system stays connected to the service for the entire period of the content consuming experience.

3. Rental of HD SD PD content titles. The service providers are able to rent titles to consumers on an on demand basis for a set time period. The protection and policy enforcement is done by an embodiment of the present invention.

4. Time based unlocking of content titles. The service providers are able to push content to client computing systems ahead of the content release date or availability schedule and have the client computing system unlock the title for use at a given time in the future.

5. User s constellation of devices and easy sharing. Embodiments of the present invention provide for a domain of client computing systems for a given user. This enables the content to freely flow between these authorized devices within the user s domain.

6. Offline transactions. Embodiments of the present invention provide for the ability to record a transaction for later reconciliation. This allows the service providers to preload or speculatively distribute content to client computing systems and have them complete a transaction whether they are connected to the Internet or not.

Reference in the specification to one embodiment or an embodiment means that a particular feature structure or characteristic described in connection with the embodiment may be included in at least an implementation. The appearances of the phrase in one embodiment in various places in the specification may or may not be all referring to the same embodiment.

Also in the description and claims the terms coupled and connected along with their derivatives may be used. In some embodiments of the invention connected may be used to indicate that two or more elements are in direct physical or electrical contact with each other. Coupled may mean that two or more elements are in direct physical or electrical contact. However coupled may also mean that two or more elements may not be in direct contact with each other but may still cooperate or interact with each other.

Thus although embodiments of the invention have been described in language specific to structural features and or methodological acts it is to be understood that claimed subject matter may not be limited to the specific features or acts described. Rather the specific features and acts are disclosed as sample forms of implementing the claimed subject matter.

