---

title: Adaptable user interface for business software
abstract: An adaptable user interface is formed based on a role assumed by a user and the identification of tasks in a process that need to be performed. For each role assumed by the user, a set of tasks assigned to the role is identified. Each task is evaluated to determine if it is an active task that needs to be performed in one or more processes. For each active task, an element is added to the user interface.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09224127&OS=09224127&RS=09224127
owner: MICROSOFT TECHNOLOGY LICENSING, LLC
number: 09224127
owner_city: Redmond
owner_country: US
publication_date: 20110119
---
The present application is a continuation of and claims priority from U.S. patent application Ser. No. 11 233 881 filed on Sep. 23 2005 which claims priority benefit to U.S. Provisional Application 60 658 130 filed on Mar. 3 2005.

Business software applications are designed to allow users to perform a number of tasks. In general user interfaces for these applications are fixed such that for a particular user the interface always contains the same controls and types of information. As a result user interfaces tend to provide too many controls and too much information because the designers need to provide access to all of the controls the user may need. This results in a confusing using interface that includes too much information for the user and does not provide the user with guidance as to which tasks should be completed next.

The discussion above is merely provided for general background information and is not intended to be used as an aid in determining the scope of the claimed subject matter.

An adaptable user interface is formed based on a role assumed by a user and the identification of tasks in a process that need to be performed. For each role assumed by the user a set of tasks assigned to the role is identified. Each task is evaluated to determine if it is an active task that needs to be performed in one or more processes. For each active task an element is added to the user interface.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

Embodiments are operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with various embodiments include but are not limited to personal computers server computers hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputers mainframe computers telephony systems distributed computing environments that include any of the above systems or devices and the like.

Embodiments may be described in the general context of computer executable instructions such as program modules being executed by a computer. Generally program modules include routines programs objects components data structures etc. that perform particular tasks or implement particular abstract data types. Some embodiments are designed to be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules are located in both local and remote computer storage media including memory storage devices.

With reference to an exemplary system for implementing some embodiments includes a general purpose computing device in the form of a computer . Components of computer may include but are not limited to a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit . The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus 

Video Electronics Standards Association VESA local bus and Peripheral Component Interconnect PCI bus also known as Mezzanine bus.

Computer typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer and includes both volatile and nonvolatile media removable and non removable media. By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computer . Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.

The system memory includes computer storage media in the form of volatile and or nonvolatile memory such as read only memory ROM and random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other program modules and program data .

The computer may also include other removable non removable volatile nonvolatile computer storage media. By way of example only illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that can be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive is typically connected to the system bus through a non removable memory interface such as interface and magnetic disk drive and optical disk drive are typically connected to the system bus by a removable memory interface such as interface .

The drives and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for the computer . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components can either be the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers here to illustrate that at a minimum they are different copies.

A user may enter commands and information into the computer through input devices such as a keyboard a microphone and a pointing device such as a mouse trackball or touch pad. Other input devices not shown may include a joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through a user input interface that is coupled to the system bus but may be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB . A monitor or other type of display device is also connected to the system bus via an interface such as a video interface . In addition to the monitor computers may also include other peripheral output devices such as speakers and printer which may be connected through an output peripheral interface .

The computer is operated in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be a personal computer a hand held device a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer . The logical connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks. Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking environment the computer is connected to the LAN through a network interface or adapter . When used in a WAN networking environment the computer typically includes a modem or other means for establishing communications over the WAN such as the Internet. The modem which may be internal or external may be connected to the system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to the computer or portions thereof may be stored in the remote memory storage device. By way of example and not limitation illustrates remote application programs as residing on remote computer . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

Memory is implemented as non volatile electronic memory such as random access memory RAM with a battery back up module not shown such that information stored in memory is not lost when the general power to mobile device is shut down. A portion of memory is preferably allocated as addressable memory for program execution while another portion of memory is preferably used for storage such as to simulate storage on a disk drive.

Memory includes an operating system application programs as well as an object store . During operation operating system is preferably executed by processor from memory . Operating system in one preferred embodiment is a WINDOWS CE brand operating system commercially available from Microsoft Corporation. Operating system is preferably designed for mobile devices and implements database features that can be utilized by applications through a set of exposed application programming interfaces and methods. The objects in object store are maintained by applications and operating system at least partially in response to calls to the exposed application programming interfaces and methods.

Communication interface represents numerous devices and technologies that allow mobile device to send and receive information. The devices include wired and wireless modems satellite receivers and broadcast tuners to name a few. Mobile device can also be directly connected to a computer to exchange data therewith. In such cases communication interface can be an infrared transceiver or a serial or parallel communication connection all of which are capable of transmitting streaming information.

Input output components include a variety of input devices such as a touch sensitive screen buttons rollers and a microphone as well as a variety of output devices including an audio generator a vibrating device and a display. The devices listed above are by way of example and need not all be present on mobile device . In addition other input output devices may be attached to or found with mobile device .

A customer model is used to associate tasks in a process with users in an organization. Using these associations and keeping track of progress through the processes a user interface is adapted to provide a user with those tasks that are relevant to the user while suppressing those tasks that are either not performed by the user or are not available given the progress through the process.

Each task in each process is assigned to a role where a single role may encompass multiple tasks. For example role is responsible for performing tasks and . Role and perform tasks and respectively.

Each user in the organization such as users and assume one or more roles. For instance user assumes role and user assumes roles and . Through the assumption of these roles each user is assigned the tasks associated with those roles by default. As discussed further below this default assignment of tasks can be modified through user specific settings.

In step a request to display a homepage is received. This request includes an identification of the user for whom the homepage is being generated. At step a homepage generation unit retrieves roles stored in user settings that have been associated with the user. At step homepage generation unit identifies tasks associated with the roles using roles to task mapping . Roles to task mapping provides a list of the tasks that have been associated with a role in the customer model.

At step the task list created from the roles is modified based on a set of blocked tasks in user settings . Blocked tasks are tasks that would normally be assigned to the user based on their roles but that are blocked based on the skill level of the user or based on the size of the department or organization. For instance in very large organizations tasks tend to be more specialized so that a group of tasks that are placed within a role may be divided among several users that assume the role. For example if a role contained two tasks one user who assumes the role may perform the first task while another user who also assumes the role may perform the second task.

At step homepage generation unit determines which tasks in the modified task list are active. This determination is made by consulting process tracking which lists tasks that need to be performed. Process tracking updates the tasks that need to be performed by removing tasks after they are performed and adding the next task in the process description. Tasks do not become active until they can be performed. Thus if other tasks must be performed or some information is needed before a task can be performed it would not be designated as an active task by process tracking .

At step homepage generation adds activity page links to the homepage user interface for each of the user s roles that have at least one active task. Each activity page is associated with a particular role in a role to activity page mapping . An activity page is a user interface that displays a set of tasks or links to a set of tasks that are associated with a role.

At step homepage generation adds links for each of a set of added tasks that are found in user settings and that are active. Added task represents tasks outside of the roles that have been assigned to the user. These added tasks can be temporary tasks that have been assigned to the user to overcome a change in personnel or can be a tailored modification that assigns a task normally associated with another role to a particular user who does not assume that role.

At step homepage generation consults user preferences to identify links and data that the user has requested be displayed in their homepage. The data displayed can include key performance indicators related to the roles assumed by the user as well as key performance indicators that the user finds interesting but that are not normally associated with their roles.

At step homepage generation generates homepage user interface by displaying the task links the activity page links the user preference links and the user preference data.

Under various embodiments each activity page is also an adaptable user interface that has its contents change depending on the roles performed by the user the user s preferences and the stage of various processes that the user is involved with. In an activity page generation unit generates activity pages using the process shown in .

In step of activity page generation unit adds links for each active task associated with the role for this activity page. Under some embodiments the active tasks are those tasks found in the modified task list at step for the current role.

At step activity page generation unit identifies data associated with the active tasks. This can be done by consulting a task to data mapping of . At step activity page generation unit consults user preferences to identify data that the user has indicated they want displayed in the activity page for this role.

At step activity page generation unit displays activity page by displaying all of the task links for the active tasks associated with the role and the data associated with those tasks and the data requested in the user preferences. In other embodiments instead of providing task links in the activity page task areas are provided in which the user may perform the task without opening another page.

The activity page of also includes bank balances data and budget versus due invoices data . Bank balances data and budget versus due invoices data are associated with the submit documents for payment approval task.

Because the activity page of only provides links for active tasks the user is not distracted by tasks that do not require their attention. Further since the tasks presented in the activity page are determined from the stages of various processes the user does not have to remember the sequences of the processes. Instead the user can simply view the active tasks and know which tasks need to be performed.

Selecting one of the task links causes a task user interface to be shown such as the task user interface of which is the submit documents for payment approval task user interface. The task user interface includes data and control buttons that can be used to perform a task. For example in invoices are broken into overdue invoices due invoices and all invoices . The user may select one of these groups of invoices by clicking on a check box below the group. The user may also expand each group to select individual invoices in the group by double clicking on the group. Once an invoice or group of invoices is selected the selected invoice s may be viewed using view invoice control button or the selected invoices may be submitted for approval using submit for approval button . In addition the task page of provides bank balances data and group budgets data which help the user to decide which invoices to submit for approval.

After the user has submitted invoices for approval process tracking unit will update its process data for the invoices that were submitted for approval and advance them to the next task in the process.

Because the user interfaces are adapted based on a stage of processing the user interfaces are driven by the process definitions. If a task is deleted from a process the task will be omitted from the activity page automatically since process tracking will never indicate that the deleted task is active. If tasks are reorganized such that a task is moved from one role to another the user interfaces for the users associated with those roles will automatically be updated. For example a user who loses a task under one of their roles will have that task automatically deleted from the activity page since roles to task mapping will no longer indicate that this is a possible task to be displayed in an activity page. For the user that gained a task in one of the roles role to task mapping will now show this as a possible task for that role.

The present invention also permits easy integration of new tasks into processes. provides a flow diagram for adding a user interface for a new task in a process.

At step of the user interface for the task is designed. At step the task is positioned in one or more processes. At step the task is mapped to one or more roles and at step user settings are updated as desired for users associated with the role s to either allow the role to dictate that the task appears or to block the task for particular users.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

