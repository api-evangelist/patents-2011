---

title: Temporal scope translation of meta-models using semantic web technologies
abstract: Implementation of a meta-model service of a service oriented architecture industry model repository into a web ontology language representation of at least one topic map meta-model into a plurality of temporal scope topic map meta-models representing states of the at least one topic map meta-model at different times. The implementation includes assigning topics, occurrences, and attributes from the meta-model service to the at least one topic map meta-model. The topics, occurrences, and attributes are assigned from the at least one topic map meta-model to plurality of temporal scope topic map meta-models. The topics, occurrences, and attributes from the plurality of temporal scope topic map meta-models are converted into resource description framework triples; and the resource description framework triples are persisted into the resource description framework repository.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09111004&OS=09111004&RS=09111004
owner: International Business Machines Corporation
number: 09111004
owner_city: Armonk
owner_country: US
publication_date: 20110201
---
This application is a continuation in part of parent patent application Ser. No. 12 640 697 filed Dec. 17 2009 entitled IMPLEMENTING SERVICE ORIENTED ARCHITECTURE INDUSTRY MODEL REPOSITORY USING SEMANTIC WEB TECHNOLOGIES .

The present invention relates to meta models and more specifically to temporal scope translation of customer relationship management using semantic web technologies.

Most customers have complex legacy application environments. Legacy application environments are all of the applications and programs that the customer depends on for their day to day operations. The ability to model the complex legacy environments is helpful for service oriented architecture SOA engagement.

Many meta models that can model the complex legacy application environments define a holistic end to end and abstract to detail picture of an existing business or information technology solution including data for the past and present states where relevant transformation of informational at levels of abstraction took place. Therefore the meta model has time modeled as part of the meta model.

According to one embodiment of the present invention a method for implementing topic map meta models of a service oriented architecture SOA industry model repository IMR is provided comprising a meta model service associated with a physical asset repository. The meta model service includes at least one topic map meta model included within an information model repository common meta meta model and the information model repository common meta meta model included within a meta meta meta model with a topic map based index. The method comprises a computer assigning topics occurrences and attributes from the meta model service to the at least one topic map meta model the computer assigning the topics occurrences and attributes from the at least one topic map meta model to a plurality of temporal scope topic map meta models wherein a first temporal scope topic map meta model represents a state of the at least one topic map meta model at a first time and wherein a second temporal scope topic map meta model of the plurality of temporal scope topic map meta models represents a state of the at least one topic map meta model at a second time the computer converting the topics occurrences and attributes from the plurality of temporal scope topic map meta models into resource description framework triples and the computer persisting the resource description framework triples into a resource description framework repository.

According to another embodiment of the present invention a computer program product for implementing a meta model service of a service oriented architecture industry model repository into a web ontology language representation of at least one topic map meta model specific to temporal scope. The computer product comprises one or more computer readable tangible storage devices program instructions stored on at least one of the one or more storage devices to assign topics occurrences and attributes from the meta model service to the at least one topic map meta model program instructions stored on at least one of the one or more storage devices to assign topics occurrences and attributes from the at least one topic map meta model to a plurality of temporal scope topic map meta models wherein a first temporal scope topic map meta model of the plurality of temporal scope topic map meta models represents a state of the at least one topic map meta model at a first time and wherein a second temporal scope topic map meta model of the plurality of temporal scope topic map meta models represents a state of the at least one topic map meta model at a second time program instructions stored on at least one of the one or more storage devices to convert the topics occurrences and attributes from the plurality of temporal scope topic map meta models into resource description framework triples and program instructions stored on at least one of the one or more storage devices to persist the resource description framework triples into a resource description framework repository.

According to another embodiment of the present invention a computer system for implementing a meta model service of a service oriented architecture industry model repository into a web ontology language representation of at least one topic map meta model specific to temporal scope. The computer system comprises one or more processors one or more computer readable memories and one or more computer readable tangible storage devices program instructions stored on at least one of the one or more storage devices for execution by at least one of the one or more processors via at least one of the one or more memories to assign topics occurrences and attributes from the meta model service to the at least one topic map meta model program instructions stored on at least one of the one or more storage devices for execution by at least one of the one or more processors via at least one of the one or more memories to assign topics occurrences and attributes from the at least one topic map meta model to a plurality of temporal scope topic map meta models wherein a first temporal scope topic map meta model of the plurality of temporal scope topic map meta models represents a state of the at least one topic map meta model at a first time and wherein a second temporal scope topic map meta model of the plurality of temporal scope topic map meta models represents a state of the at least one topic map meta model at a second time program instructions stored on at least one of the one or more storage devices for execution by at least one of the one or more processors via at least one of the one or more memories to convert the topics occurrences and attributes from the plurality of temporal scope topic map meta models into resource description framework triples and program instructions stored on at least one of the one or more storage devices for execution by at least one of the one or more processors via at least one of the one or more memories to persist the resource description framework triples into a resource description framework repository.

As will be appreciated by one skilled in the art aspects of the present invention may be embodied as a system method or computer program product. Accordingly aspects of the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium s having computer readable program code embodied thereon.

Any combination of one or more computer readable medium s may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device.

Program code embodied on a computer readable medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF etc. or any suitable combination of the foregoing.

Computer program code for carrying out operations of the present invention may be written in an object oriented programming language such as Java Smalltalk C or the like. However the computer program code for carrying out operations of the present invention may also be written in conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

Aspects of the present invention are described below with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable memory that can direct a computer or other programmable data processing apparatus to function in a particular manner such that the instructions stored in the computer readable memory produce an article of manufacture including instruction means which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operational steps to be performed on the computer or other programmable apparatus to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide steps for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

With reference now to the figures and in particular with reference to exemplary diagrams of data processing environments are provided in which illustrative embodiments may be implemented. It should be appreciated that are only exemplary and are not intended to assert or imply any limitation with regard to the environments in which different embodiments may be implemented. Many modifications to the depicted environments may be made.

In the depicted example server and server connect to network along with storage unit . In addition clients and connect to network . Clients and may be for example personal computers or network computers. In the depicted example server provides information such as boot files operating system images and applications to clients and . Clients and are clients to server in this example. Network data processing system may include additional servers clients and other devices not shown.

Program code or meta models located in network data processing system may be stored on a computer readable storage device and downloaded to a data processing system or other device for use. For example program code may be stored on a computer readable storage device on server and downloaded to client over network for use on client .

In the depicted example network data processing system is the Internet with network representing a worldwide collection of networks and gateways that use the Transmission Control Protocol Internet Protocol TCP IP suite of protocols to communicate with one another. At the heart of the Internet is a backbone of high speed data communication lines between major nodes or host computers consisting of thousands of commercial governmental educational and other computer systems that route data and messages. Of course network data processing system also may be implemented as a number of different types of networks such as for example an intranet local area network LAN or a wide area network WAN . is intended as an example and not as an architectural limitation for the different illustrative embodiments.

With reference now to a block diagram of a data processing system is shown in which illustrative embodiments may be implemented. Data processing system is an example of a computer such as server or client in in which computer usable program code or instructions implementing the processes may be located for the illustrative embodiments. In this illustrative example data processing system includes communications fabric which provides communications between processor unit memory persistent storage communications unit input output I O unit and display .

Processor unit serves to execute instructions for software such as temporal scope program that may be loaded into memory . Processor unit may be a set of one or more processors or may be a multi processor core depending on the particular implementation. Further processor unit may be implemented using one or more heterogeneous processor systems in which a main processor is present with secondary processors on a single chip. As another illustrative example processor unit may be a symmetric multi processor system containing multiple processors of the same type.

Memory and persistent storage are examples of computer readable storage devices . Memory in these examples may be for example a random access memory or any other suitable volatile or non volatile computer readable storage device. Persistent storage may take various forms depending on the particular implementation. For example persistent storage may contain one or more components or devices. For example persistent storage may be a hard drive a flash memory a rewritable optical disk a rewritable magnetic tape or some combination of the above. The media used by persistent storage also may be removable. For example a removable hard drive may be used for persistent storage .

Communications unit in these examples provides for communications with other data processing systems or devices. In these examples communications unit is a network interface card. Communications unit may provide communications through the use of either or both physical and wireless communication links.

Input output unit allows for input and output of data with other devices that may be connected to data processing system . For example input output unit may provide a connection for user input through a keyboard a mouse and or some other suitable input device. Further input output unit may send output to a printer. Display provides a mechanism to display information to a user.

Instructions for an operating system applications and or programs may be located in one or more of computer readable storage devices . Computer readable storage devices are in communication with processor unit through communications fabric . In these illustrative examples the instructions are in a functional form on persistent storage . These instructions may be loaded into memory for running by processor unit . The processes of the different embodiments may be performed by processor unit using program instructions which may be located in a memory such as memory .

These program instructions are referred to as program code computer usable program code or computer readable program code that may be read and run by a processor in processor unit . The program code in the different embodiments may be embodied on different physical or tangible computer readable media such as memory or persistent storage .

Temporal scope program is located in a functional form on one or more computer readable storage devices . One or more of computer readable storage devices may be selectively removable. Temporal scope program may be loaded onto or transferred to data processing system for running by processor unit . Temporal scope program and computer readable storage devices form computer program product in these examples. In some instances one or more of computer readable storage devices may not be removable.

Alternatively temporal scope program may be transferred to data processing system from computer readable storage devices through a communications link to communications unit and or through a connection to input output unit . The communications link and or the connection may be physical or wireless in the illustrative examples.

In some illustrative embodiments temporal scope program may be downloaded over a network to persistent storage from another device or data processing system for use within data processing system . For instance program code stored in a computer readable storage device in a server data processing system may be downloaded over a network from the server to data processing system . The data processing system providing temporal scope program may be a server computer a client computer or some other device capable of storing and transmitting temporal scope program .

The different components illustrated for data processing system are not meant to provide architectural limitations to the manner in which different embodiments may be implemented. The different illustrative embodiments may be implemented in a data processing system including components in addition to or in place of those illustrated for data processing system . Other components shown in can be varied from the illustrative examples shown. The different embodiments may be implemented using any hardware device or system capable of executing program code. As one example the data processing system may include organic components integrated with inorganic components and or may be comprised entirely of organic components excluding a human being. For example a storage device may be comprised of an organic semiconductor.

As another example a bus system may be used to implement communications fabric and may be comprised of one or more buses such as a system bus or an input output bus. Of course the bus system may be implemented using any suitable type of architecture that provides for a transfer of data between different components or devices attached to the bus system. Additionally a communications unit may include one or more devices used to transmit and receive data such as a modem or a network adapter. Further a memory may be for example memory or a cache such as found in an interface and memory controller hub that may be present in communications fabric .

The IMR architecture system includes federated physical model assets that are stored in different types of repositories depending on the model driven framework tools and products that are being deployed by the IMR architecture system . The federated physical assets may include framework industry models business models unified modeling language UML design applications data models business services service components and technical services. The federated physical assets are not limited to the assets shown in .

Applications and services are provided to IMR users through the network e.g. intranet or Internet or network of using interfaces . The interfaces may be a graphically enabled allowing display of topics maps to a user . The interfaces used by the IMR users includes reports generation and tools supporting multi formats and visualization tools supporting complex views. The interfaces may be packaged as an Eclipse client provided by a vendor specialized in providing software development tools and products or deployed inside bigger scope modeling tools for example IBM Rational Software Architect or WebSphere Business Modeler products of International Business Machines Corporation. Examples of a graphical display using an Eclipse client are shown in .

The applications and services may include registration and profile management creating and customizing repository meta model importing customized and disparate model data into the repository examining decomposing complex diagrams and structures structure link and trace change disparate model assets advanced search and query navigate browse data assets select and download model assets customize add models assets submit for repository upload and impact analysis. The application and services are not limited to the assets shown in . The applications and services are described in greater detail in applications entitled FRAMEWORK TO POPULATE AND MAINTAIN A SERVICE ORIENTED ARCHITECTURE INDUSTRY MODEL filed Dec. 17 2009 as application Ser. No. 12 640 749 MANAGING AND

MAINTAINING SCOPE IN A SERVICE ORIENTED ARCHITECTURE INDUSTRY MODEL REPOSITORY filed Dec. 17 2009 as application Ser. No. 12 640 852 and RECOGNITION OF AND SUPPORT FOR MULTIPLE VERSIONS OF AN ENTERPRISE CANONICAL MESSAGE MODEL filed Dec. 17 2009 as application Ser. No. 12 640 865. The interfaces are further described in greater detail in an application entitled SERVICE ORIENTED ARCHITECTURE INDUSTRY MODEL REPOSITORY META MODEL WITH A STANDARD BASED INDEX filed Dec. 17 2009.

The IMR users may include but are not limited to a repository administrator a model manager a system architect and a business analyst.

The internal meta model service of the SOA IMR component is an SOA IMR meta model service and preferably uses at least one topic map meta model that is an ISO Standard topic map meta model. Topic Maps are an ISO IEC standard ISO 13250 1 and map both web and real world information resources by reifying real world resources as subjects and creating topic constructs to capture their characteristics and relationships with other topics and subjects. By using the meta models and as the physical asset repository internal meta model an interface of the common meta model service allows users to programmatically access manage and maintain these meta models.

A meta model based on topic maps can be built using a number of technologies such as topic map related ISO IEC standards ISO 13250 1 and individual semantic technologies such as web ontology language OWL resource description framework RDF and SPARQL protocol and RDF query language SPARQL .

Unified Modeling Language UML meta models may be used to present artifacts of an object oriented software intensive system under development. The UML meta model may be of an object oriented software intensive system that is part of the network data processing system shown in and or the physical assets of the IMR architecture system shown in and is preferably stored in a repository .

The SOA IMR meta model service maps the at least one topic map meta models to an OWL representation of the at least one topic map meta models . The industry model repository IMR provides the context for the implementation of mapping the at least one topic map meta model to the OWL representations of the at least one topic map meta model . The OWL representation of the at least one topic map meta model are stored in a resource description framework RDF semantic web repository . An example of semantic web repository is a Sesame RDF Server which is an open source framework for querying and analyzing RDF data. Semantic web repository preferably allows for versioning and merging of asset requirement topic maps and therefore allows topic maps to be built up by different domain experts to be organized in conceptual spaces according to meaning and by temporal scope or time.

In accordance with one embodiment of the present invention a method of expressing a meta model is provided. The meta model may have temporal dependent relationships or no temporal dependent relationships such that time or temporal variance is treated orthogonal to the model and mathematical set theory can be used to create maintain and validate the model with a high degree of accuracy. The method can also show evolution of the model over time through at least two different times or temporal scopes. The meta model may also display relevant subsets of the information to the end user based on user criteria such as time and relationships. Therefore unlike the prior art snap shots of specific time points through the evolution of the meta model may be viewed by a user.

Referring to a first step of a method of expressing a meta model such that temporal variance is orthogonal to the model obtains a meta model service such as meta model service of from an asset repository such as physical asset repository of step . If the meta model service includes temporal dependent relationships step identify the temporal dependent relationships step and remove the temporal dependent relationships from the meta model service step . The identification of the temporal dependent relationships may be done by a domain expert and facilitated by temporal scope program of . In response to removing the temporal dependent relationships have been removed from the meta model service step convert the resulting meta model service representation to a topic map representation or topic map of the meta model service step . From the topic map representation or the topic map of the meta model service assign all topics occurrences and attributes within the at least one topic map meta model to the temporal scope topic map meta models step . Next convert all topics occurrences and attributes from each of the temporal scope topic map meta models into resource description framework triples specific to temporal scopes step . Then persist all of the resource description framework triples specific to temporal scope into an RDF repository such as RDF semantic web repository step . Step may be carried out using the steps shown in 

Referring to the temporal scope program obtains a handle to an asset repository such as physical asset repository of or another repository step . Uniform resource identifiers for each topic of a temporal scope topic map meta model are created step . The temporal scope program obtains a connection to an RDF repository such as RDF semantic web repository step . Topic RDF statements or RDF triples for each topic of the temporal scope topic map meta model with data specific to temporal scope are created step and the topic RDF statements or RDF triples are added to the RDF repository step .

Topic occurrence RDF statements or RDF triples are created step to be sent to the RDF repository. To create a topic occurrence RDF statement or RDF triple step an occurrence of the topic with data specific to temporal scope in the temporal scope topic map meta model is read step and a topic occurrence RDF statement or RDF triple based on the occurrence of the topic with data specific to temporal scope is created step . The topic occurrence RDF statement or RDF triple is added to the RDF repository step . If there are additional occurrences of the topic with data specific to temporal scope in the topic map step the steps of creating a topic occurrence RDF statement or RDF triple step and adding a topic occurrence RDF statement to the RDF repository step are repeated until no more occurrence of the topic on the temporal scope topic map meta model occur.

When no occurrences remain the topic attribute RDF statements or RDF triples are created step to be sent to the RDF repository. To create a topic attribute RDF statement or RDF triple step an attribute of the topic with data specific to temporal scope in the temporal scope topic map meta model is read step and a topic attribute RDF statement or RDF triple based on the attribute of the topic with data specific to temporal scope is created step . The topic attribute RDF statement or RDF triple is added to the RDF repository such as RDF semantic web repository step . If there are additional attributes of the topic with data specific to temporal scope in the topic map step the steps of creating a topic attribute RDF statement or RDF triple step and adding a topic attribute RDF statement to the RDF repository step are repeated until no more attribute of the topic on the temporal scope topic map meta model occur.

When no attributes remain the method of taking in a topic and all of the locations of the topic on the RDF server and the particular repository to be used for persisting the resulting RDF ends. All of the locations of the topic on the RDF server and the particular repository to be used for persisting the resulting RDF triples are accounted for and the resource description framework triples specific to temporal scope are persisted into the RDF repository step .

Returning to if the meta model service does not include temporal dependent relationships step convert the meta model service representation to a topic map representation or topic map of the meta model service step . From the topic map representation or the topic map of the meta model service assign all topics occurrences and attributes to temporal scope topic map meta models step . Next convert all topics occurrences and attributes from each of the temporal scope topic map meta models into resource description framework triples specific to temporal scopes step . Then persist all of the resource description framework triples specific to temporal scope into the RDF repository step . Step may be carried out using the steps shown in 

In for example Component A Component B Node and Interface are all assigned as topics. Association types from the topic map may include is an deploy use and offers for example.

In the first temporal situation shown in Component B offers Interface Interface uses Component A and Node deploys Components A and B .

In the second temporal situation shown in Component B no longer offers Interface . Instead a Component C is deployed from Node and offers Interface . Additionally as in the first temporal situation Interface uses Component A and Node deploys Components A and B .

In viewing the model in the second temporal situation the relationship that was originally present in a different temporal scope between Component B and Interface would not be apparent since temporal scope is the measured or measurable period during which an action process or condition exists or continues.

In other words for example in the first temporal situation the topic map of the model indicates the architecture of a subway system as present in and in the second temporal situation the topic map of the model indicates the architecture of the same subway system as present in . The subway system in now offers Station Component C which is deployed from an originating stop Node and offers Destination Station Interface. In Station Component C was not present and could not be used to get to Destination Station Interface instead Station Component B offered the only means to offer Destination Station Interface as a location in the subway .

One example of how all topics occurrences and attributes from each temporal scope topic map meta models are converted into resource description framework triples specific to temporal scopes step may be carried out is to implement the ISO topic map of the UML meta model to a web ontology language OWL representation of the topic map. The industry model repository IMR provides the context for the implementation of the at least one topic map meta models to the OWL representation of the topic maps. The OWL representation of the topic map is preferably stored in a resource description framework RDF semantic web repository. An example of a semantic web repository is a Sesame RDF Server which is an open source framework for querying and analyzing RDF data. The RDF repository preferably allows for versioning and merging of topic maps through different temporal scopes and therefore allows topic maps to be built up by different domain experts to be organized into conceptual spaces by a measured or measurable period during which an action process or condition exists or continues meaning.

As shown a relationship is present between a Concept and Component A Component B Node Interface and Component C indicated by the solid line . Interface uses Component A as indicated by the dotted line . Node deploys Component C Component B and Component A as indicated by the dashed line . Interface offers Component C and Component B as indicated by the dash dot dot lines .

In referring back to showing the temporal scope topic maps of the UML models at different times the graphical OWL representation in indicates the relationships between Interface and Components B and C but not when they occurred or whether they are current to the system.

As discussed above the semantic web RDF repository allows for versioning and merging of asset requirement topic maps. With versioning and merging of asset requirement topic maps topic maps may be built by different domain experts and organized in conceptual spaces according to meaning.

For example a domain expert could build up an asset requirements topic map in an information service space of the SOA and another domain expert could build an assets requirements topic map in an integration services space of the SOA. Both maps could then be easily merged together to provide multiple view on the topic map based on the role of whom is using them. A user would only need to see the relevant subset of the asset requirement topic map to help understand what particular assets are relevant to his requirements. An asset requirements domain expert would only see the relevant services topic map for his domain. An asset requirements topic map administrator would be able to see and navigate the entire map and create new association types of new topic types. More specifically a legacy application asset domain expert could build up in a series of time dependent snap shots topic maps of a legacy application asset environment e.g. all legacy application assets in a particular insurance company and how those legacy applications changed over time. A user interested in a historical perspective would only see the relevant subset of legacy applications assets topic map to help understand what particular assets existed at a particular point in time.

By providing an implementation for converting the SOA IMR topic map meta model to a semantic representation the standards based query language of SPARQL Protocol and RDF Query Language SPARQL may be used to query the SOA IMR topic map meta model. SPARQL allows for very fast querying and will scale to millions of data items. Another advantage is that the requirement maps are maintained and information is kept up to date. By using a standards based query language search and query requirement maps may be used to understand the suitable industry model assets or combinations of assets to be used for a particular set of requirements. Querying of relevant information about a particular model asset can be carried out using the standard based query language such as where the particular model asset can be found and what assets the particular model asset can be used in conjunction with new information. The new information may be associations between assets that can be uncovered using inference technology such as semantic web based query languages for example SPARQL to provide answers to queries across the asset requirements topic maps. The selection of an RDF based repository like Sesame provides support for the kind of querying to determine that all of the assets can be used to satisfy a particular requirement or temporal scope even though some assets do not have explicit relationships with the requirement.

By using semantic web technologies of the World Wide Web Consortium W3C such as OWL and RDF a user has the OWL capabilities and tools for expressing constraints doing constraint checking and automated reasoning inference and for querying and visualization of ontology. In addition using semantic web technologies for converting the SOA IMR topic map meta model to an OWL DL representation also has many additional benefits. Using semantic web technology allows the complex model model model requirement and requirement requirement associations both abstract and instance data to be expressed mathematically in the form of triples subject predicate which may be continuously checked for consistency to ensure the integrity of the data. Automatic tools can be used for consistency checking Additional constrains can also be introduced depending on the particular industry model. Since the semantic web technologies are mathematically based inference of the data can be performed to identify new associations. By using standard XML based technologies of the World Wide Web Consortium W3C such as OWL and RDF a variety of tools such as security can be leveraged. Controlled access to the topic maps maps or subsection of the maps is supported using the family of XML security based standards.

The flowchart and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms comprises and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof.

The corresponding structures materials acts and equivalents of all means or step plus function elements in the claims below are intended to include any structure material or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiment was chosen and described in order to best explain the principles of the invention and the practical application and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.

Having thus described the invention of the present application in detail and by reference to embodiments thereof it will be apparent that modifications and variations are possible without departing from the scope of the invention defined in the appended claims.

