---

title: Caching user information in an integrated communication system
abstract: An integrated messaging system for performing various types of messaging across different types of networks, including integrated user interfaces and administrator interfaces. Embodiments include a communication server that couples among networks of different types, and an interface module that couples to the communication server. The interface module may be hosted on a messaging server of a network. The interface module pulls various user information from the messaging server, including information relevant to at least the network that includes the messaging server. A cache couples to the communication server and to the interface module to hold information from the communication server and/or the user information pulled from messaging server. The interface module directs a message from the messaging server and/or the cache to at least one device on the networks using the user information.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08391461&OS=08391461&RS=08391461
owner: Avaya Inc.
number: 08391461
owner_city: Basking Ridge
owner_country: US
publication_date: 20110208
---
This application is a Divisional of U.S. patent application Ser. No. 12 016 350 filed on Jan. 18 2008 which is a Continuation of U.S. patent application Ser. No. 11 053 272 filed on Feb. 7 2005 now U.S. Pat. No. 7 321 655 and is related to the following U.S. patent applications 

The disclosure herein relates generally to communication systems and more particularly to integrated communication and messaging systems.

As methods of communication continue to proliferate enterprises continue to desire integrated systems for handling all aspects of multi media communication for enterprise users. An enterprise can be any collection of users of communication media having some common purpose but a typical example is a company with one or more sites and some number of employees who are users of communication media. Communication media include electronic mail email messaging Short Messaging Service SMS messaging voice messaging and more. Users receive and send messages over a variety of wired and wireless networks via a variety of devices such as desktop computers wired phones wireless devices e.g. phones and personal digital assistants PDAs and more.

Enterprises currently have the ability to centralize and manage email messaging using commercially available groupware that centrally stores information about all of the users and their messages. Enterprises also have the ability to centrally manage traditional voice messaging using a Private Branch Exchange PBX . However the systems for managing email messaging and the systems for managing voice mail messaging are not at all well integrated. For example when a new user is added to the enterprise a system administrator for the enterprise sets up the user in the email system using the groupware application and its set methods data and protocols. In addition a different administrator specializing in telephony must set up the user in the voice messaging system using different methods data and protocols. Voice data and email data are typically stored in separate databases. Both initial user setup and updating user information are complicated by the fact that the email and voice systems are so distinct.

The management of and access to the voice mail message information and email information in the enterprise is also complicated by the current lack of integration of the two voice and email systems. There are various challenges to be overcome if one were to attempt to integrate the two systems.

All publications and patent applications mentioned in this specification are herein incorporated by reference to the same extent as if each individual publication or patent application was specifically and individually indicated to be incorporated by reference.

In the drawings the same reference numbers identify identical or substantially similar elements or acts. To easily identify the discussion of any particular element or act the most significant digit or digits in a reference number refer to the Figure number in which that element is first introduced e.g. element is first introduced and discussed with respect to .

Integrated multi media communication systems and methods are provided below. These communication systems and methods collectively referred to herein as integrated communication systems or ICS integrate different types of messaging so that a user of the ICS can access multiple types of messages e.g. voice mail messages electronic mail email messages instant messaging messages SMS Short Messaging System messages MMS Multimedia Messaging System messages etc. with a single message interface. In providing integrated messaging functionality via a single message interface the ICS of an embodiment relieves the dependency of a voice mail system for example by providing users with access to voice mail messages and capabilities of the voice mail system through the local groupware applications and email messaging system.

The ICS generally includes a communication server a cache system and an interface module. The ICS integrates with a messaging and collaboration system and the corresponding groupware applications in a network environment for example. In providing integrated messaging capabilities the communication server and interface module function to route a call received from a caller to a user and in the event the user is not available to receive and route a voice mail message left by the caller. The ICS uses caching processes during the receiving and routing of voice mail messages that provide users with fast access to voice mail messages user information and contact information. Using caching process the ICS also provides access to the voice mail messaging system during periods when the messaging and collaboration system is offline. The ICS also leverages the storage capability of the messaging and collaboration system to eliminate the need for a separate voice mail database.

The message interface of the ICS includes a form based interface for use in retrieving voice mail messages and controlling actions taken on voice mail messages received in the enterprise network system. This form based interface enables a user to retrieve and take various actions on voice mail messages using data of a form provided to the user s client device by the enterprise network email system. Use of the form based interface thus provides users with access to the integrated messaging functions offered by the ICS without a requirement to install or run a dedicated client application on the user s client device.

In the following description numerous specific details are introduced to provide a thorough understanding of and enabling description for embodiments of the ICS. One skilled in the relevant art however will recognize that these embodiments can be practiced without one or more of the specific details or with other components systems etc. In other instances well known structures or operations are not shown or are not described in detail to avoid obscuring aspects of the disclosed embodiments.

IM of ICS couples to transfer information or data with communication server . Additionally IM couples to transfer information with one or more components of a messaging server where transferring information includes one or more of pulling receiving retrieving polling transmitting and pushing operations to name a few. As an example of an information transfer between IM and messaging server IM pulls user information from messaging server and makes the pulled user information available to other components of ICS wherein the user information includes information relevant to at least network .

The components of messaging server may include for example one or more processors also referred to as central processing units or CPUs and one or more databases coupled to CPU . In an embodiment IM may be hosted on or running under control of messaging server but is not limited to this configuration. Further messaging server may be a component of network that hosts communication server but is not so limited. For example messaging server may be hosting a groupware application e.g. Microsoft Exchange LotusNotes etc. of an enterprise network .

Cache couples to communication server and communicates to transfer information with one or more of communication server IM and one or more components of messaging server as described below. Cache may also couple to additional components not shown of network .

As an example of information transfers between cache and communication server cache may receive caller information e.g. voice mail messages caller identification etc. from client devices via communication server . An example of information transfers between cache and messaging server includes transfers in which cache receives user information from messaging server where the user information may be routed from messaging server via IM and or communication server . Another example of information transfers between cache and messaging server includes transfers in which messaging server receives information from cache routed from cache via communication server and or IM .

Examples of information transfers between cache and IM include transfers of user information pulled from messaging server by IM and directed to cache and transfers in which IM directs a message from at least one of messaging server and cache to at least one device on networks and using the user information. Cache holds or temporarily stores the received information under the above examples.

Networks and include various network components not shown of one or more communication service providers or carriers but are not so limited. Further networks and and corresponding network components can be any of a number combination of network types known in the art for providing communications among coupled devices and including but not limited to proprietary networks local area networks LANs metropolitan area networks MANs wide area networks WANs backend networks public switched telephone networks PSTN the Internet and other public networks for example. Additionally networks and may include hybrid networks that use a proprietary network for some portion of the communications routing for example while using one or more different public networks for other portions of the communications routing.

Client devices and include communication devices like telephones cellular telephones and radio telephones. Client devices and also include processor based devices like for example portable computers PC portable computing devices personal digital assistants PDA communication devices cellular telephones portable telephones portable communication devices and user devices or units. Client devices can include so called multi modal devices where the user can interact with the device and or the ICS through any form of input and output such as text input speech recognition text output text to speech graphics recorded files and video. In such devices the speech recognition and text to speech generation may partly take place in the device and partly in the ICS. Sound and or video may be generated by the ICS by a continuous stream of sound and or video data sent to the device. Client devices can include all such devices and equivalents and are not limited to any particular type of communication and or processor based device. In an embodiment client devices are client devices operating in a private network environment like an enterprise network while client devices are client devices operating in different private network environments or under any number of public networks.

Continuing processes include pulling user information from a messaging server coupled to the ICS at block as described above. The user information includes information relevant to users of at least the network hosting the ICS but is not so limited. Processes also include caching pulled user information from the messaging server at block . Additionally processes include use of the user information of the cache to direct a message from at least one of the messaging server and the cache to one or more client devices on any of the networks at block .

The ICS of an embodiment integrates different types of messaging so that a user of the ICS can access all of the message types e.g. voice mail messages electronic mail or email messages etc. with a single message interface also referred to as a user interface or UI . In providing integrated messaging functionality via a single message interface the ICS of an embodiment relieves the dependency on a voice mail system with a dedicated voicemail and user database for example by providing users with access to voice mail messages and capabilities of the voice mail system through the local email messaging system.

Components of ICS include a communication server and an interface not shown . The interface of ICS may run under control of messaging server as described above but is not so limited. Information flow begins when in response to receiving data streams from networks of different types ICS generates a first message and transfers first message to messaging server via a communication with messaging server . First message may be a voice mail message Voice Mail Type or VMT but is not limited to this type of message. For purposes of the description herein a voice mail message is left by a caller to the ICS. For example in an embodiment where Microsoft Exchange is the messaging server the VMT may be implemented using Message Class and or Message Type fields associated with messages in Microsoft Exchange.

Following or simultaneous with receipt of first message the messaging server detects or identifies a type of first message using information of the first message and generates a second message . Second message is of a different type from that of first message and includes information of first message . Second message may for example be an email message but is not limited to this type of message. Second message is transferred to a client device via a communication with client device where the communication uses a communication protocol of network .

Responsive to receipt of second message client device determines a type of the second message and requests form data that corresponds to second message . Messaging server in response to the request for form data transfers form data to client device via the second coupling. One or more components of ICS generate and or provide form data for storage in messaging server and form data is generated under the communication infrastructure of network . The form data may be displayed to the user using the corresponding form.

Client device uses form data to view contents of second message . The client device also uses form data to establish communications with communication server of ICS via a third coupling. The communication protocol of the third coupling is different than the communication protocol of the second coupling but is not so limited. An embedded control controls activation of the third coupling. Furthermore the client device allows a user using the client device to direct actions on first message via the third coupling with the ICS using the form data. For purposes of the description herein a user is an individual with enabled capability to use functions within the ICS.

As an example under information flows is a flow diagram for integrated communication processes using ICS under an embodiment. Processes include transferring a first message to a messaging server from a communication server via a first coupling at block . Processes also include generating a second message at the messaging server in response to a type of the first message and transferring the second message to a client device via a second coupling at block . The second message may be of a different type than the first message and includes data of the first message. Processes further include transferring to the client device form data that corresponds to the first message at block . Additionally processes include establishing a third coupling between the client device and the communication server using the form data at block . Moreover processes include directing actions on the first message from the client device using the form data the actions directed via the third coupling at block .

The ICS of an embodiment integrates messages of different types to enable a user to access a number of message types through components of the ICS. Thus an application of the ICS of an embodiment is as a substitute for a voice mail system in an enterprise network where the ICS enables a user to receive and or take action on voice mail messages using the enterprise email system.

Communication server couples to any number of client devices external to enterprise network via one or more networks not shown as described above with reference to . Similarly communication server couples to any number of client devices local to enterprise network .

Communication server includes an operating system as well as numerous components or subsystems. These components include but are not limited to one or more Voice Applications an Execution Engine and any number of Mobile Application Modules as described below or any other type of application module.

The MCS of an embodiment includes an Operating System along with an Execution Engine some number of Voice Applications and some number of Mobile Applications. The Operating System includes for example a Linux kernel with a journaling file system that provides integrity of file system tables and the data structure. The storage on the MCS may be configured as a RAID Redundant Array of Independent Disks configuration to provide high reliability access to software and data. The Operating System supports operations of numerous other components of the MCS as described below.

With regard to the Operating System the MCS includes a Telephony Interface that couples calls and connects callers and users to from the MCS. The Telephony Interface couples call information to from a private branch exchange PBX not shown for example where the PBX is a component of enterprise network system . The Telephony Interface couples to the PBX using a variety of telephony integrations that include one or more of analog Simplified Message Desk Interface SMDI T1 E1 Voice over Internet Protocol VOIP and Digital Set Emulation DSE signals but may couple using other signals signaling protocols. When receiving a call from the PBX for example the MCS receives data of an incoming call from the PBX where the data includes called party information a reason for transfer of call e.g. called party line busy no answer by called party called party using call forwarding etc. and calling parting information caller ID etc. .

A Driver couples information received at the Telephony Interface to the Telephony Services component of the MCS. The Driver may perform low level signaling and or data conversion as appropriate to the received signals. The Telephony Services include one or more components for use in processing the received signals. These components include for example voice processing switching control and PBX signaling but are not limited to these components.

The MCS of an embodiment includes at least one Voice Browser that when the MCS receives a call receives voice information of the call. The Voice Browser controls the use of automatic speech recognition ASR for speech recognition and DTMF recognition. The Voice Browser of an embodiment couples to a cache or other temporary store that holds voice recordings and or name grammars Voice Recordings Grammars the name grammars are cached after being generated from names in a user list as described below . The ASR may use information of the name grammars. Further the Voice Browser controls the use of text to speech TTS as well as the play of any number of pre recorded prompts e.g. WAVE format files . The Voice Browser uses voice extensible markup language VXML but is not limited to this protocol. Alternative embodiments of the MCS may not include the Voice Browser. As an alternative to a Voice Browser the MCS may directly communicate with or use other software or processes for communication between the voice application and the Telephony Services and or Driver.

The Virtual Machine Voice Applications and Execution Engine form a hierarchical state machine framework in which the Virtual Machine runs a number of APIs and modules. Consequently the Voice Applications can include one component controlling the user interfaces UI to the MCS and another component handling lower level communications with the modules. Use of a loose coupling between the modules and the Voice Browser provided by the state machine framework allows independence between the languages used in the different modules and the Voice Browser. The state machine framework may receive hypertext transport protocol HTTP requests from the Voice Browser for example and generate VXML or Speech Application Language Tags SALT SALT extends existing mark up languages such as hypertext markup language HTML extensible hypertext markup language XHTML and extensible markup language XML and enables multimodal and telephony enabled access to information applications and web services from devices like PCs telephones and PDAs for example .

The Voice Applications of an embodiment include a number of components including an automatic attendant a caller interface a user interface and a system main menu but may include other types of voice applications. The automatic attendant is speech enabled but may be dual tone multi frequency DTMF enabled. The automatic attendant which can be enabled or disabled uses information of contact lists e.g. User List in the Cache.

The Voice Applications also include at least one voice mail application. The voice mail application uses information of the Cache e.g. User List Global Address List Public Folders Personal Contact. Folders in operations that include sending a new voice mail and or forwarding a received voice mail. The voice mail application also uses Cache information in support of voice mail networking in which voice mails and corresponding information are exchanged with groupware applications of enterprise network system as described below.

The voice mail application couples to the MCS state machine framework described above via one or more application programming interfaces API . The APIs handle the different data formats types in use by enterprise network system e.g. greeting data PIN Personal Identification Number code data voice mail message data system parameters etc. . Similarly the Cache also couples to the state machine framework where the Cache includes one or more of local cache and distributed cache. Therefore communications among the voice mail application the Cache and the MSERV take place via the state machine framework and the APIs as appropriate to the state e.g. offline online of the MSERV.

In addition to the Voice Applications the modules running under the Virtual Machine of an embodiment include Mobile Applications. The Mobile Applications provide access to user information via mobile devices where the access may include transferring information of email calendar and or contacts to a user s mobile client device via an electronic message e.g. SMS MMS and or pager .

The MCS also includes an Administration Configuration manager. The Administration Configuration manager provides access to and control of a unified configuration file of the MCS. The Administration Configuration manager uses information of the unified configuration file to provide separate Configuration Files to one or more of the components of the MCS as appropriate. The unified configuration file can be copied from the MCS and stored for backup purposes. Additionally a predefined configuration file may be uploaded to the MCS to provide the appropriate configuration for the MCS. A browser interface to the Administration Configuration manager allows remote access to the MCS.

The MCS also includes a Self Maintenance Supervisor or reliability server that monitors MCS components and restarts failed processes when necessary for example. In addition the MCS also includes Security Restrictions for use in controlling MCS port security.

As described above the MCS of an embodiment interfaces with the MSERV via the IM. The MCS communicates with the IM via the Groupware Connector for example but is not so limited. The Groupware Connector of an embodiment includes a Web Server but is not so limited. The MSERV functions as a messaging and collaboration server. The IM is an interface that runs under the MSERV in one embodiment to provide communications and information transfers between components of the MCS and components of the MSERV. In other embodiments the IM may run under control of the MCS for example. The IM includes and or couples with Management Console as well as with a diagnostics component Diagnostics Component and or a run time component RTC not shown .

Management Console supports access to the MCS by a system administrator of enterprise network system for purposes of managing user access. Consequently Management Console allows a system administrator to enable new users with integrated messaging functionality of the ICS and administer and monitor one or more MCSs.

The Diagnostics Component of the IM supports on the fly diagnostics gathering computing and or compiling of pre specified diagnostics information or parameters from the MSERV. In this manner the MCS may provide diagnostics information and a user may provide dynamically updateable diagnostics information.

The RTC translates communications between components of the MCS and components of the MSERV. As an example the RTC may be used to retrieve user information from the directory service e.g. Active Directory of a groupware application in response to a request from the MCS as described below. Communications between the RTC and components of the MCS use for example XML and Web Services. Communications between the RTC and the MSERV may use one or more APIs of the MSERV e.g. MAPI Collaboration Data Objects CDO Web Distributed Authoring and Versioning WebDAV etc. .

The MSERV of an embodiment represents a messaging and collaboration server. The messaging and collaboration server includes a groupware application that runs on one or more servers and enables users via local client devices to send and or receive electronic mail and other forms of interactive communication through computer networks. The MCS of an embodiment interoperates with groupware applications that include but are not limited to Microsoft Exchange Server but alternative embodiments may use other types of messaging and collaboration servers. Therefore the MCS of an embodiment interoperates with client device applications client applications such as Microsoft Outlook as well as with other email client applications e.g. Microsoft Outlook Express .

The MSERV sends and receives email messages through what is commonly referred to as a client device such as a personal computer workstation or a mobile device including mobile phones or PDAs. The client device typically connects to the LAN which may include any number and or combination of servers or mainframe computers where the email mailboxes and public folders are stored. The centralized servers connect to numerous other types of networks e.g. private or proprietary and the Internet to transmit and receive email messages to other email users. Consequently the MCS uses the MSERV for storing and forwarding email messages in an embodiment.

The MSERV also couples to a directory service not shown which is a database of information on each user account in the enterprise network system. Access to the directory service may use for example a Lightweight Directory Access Protocol LDAP .

With regard to client device access functionality the MSERV provides integrated collaborative messaging features such as scheduling contact and task management capabilities. As an example MSERV configuration when the MSERV is Microsoft Exchange the MSERV runs on a version of the Microsoft Windows Server operating system. A version of Microsoft Office Outlook runs on Windows based local client devices and communicates with the MSERV through the messaging application programming interface MAPI protocol. The MSERV also accommodates other client device access by supporting one or more of Post Office Protocol 3 POP3 and Internet Message Access Protocol 4 IMAP4 protocols as well as support for Simple Mail Transfer Protocol SMTP . Using this same MSERV configuration example the MCS of an embodiment along with Microsoft Outlook Web Access a service in Microsoft Exchange accommodates web browser based access clients also referred to as thin clients.

The MSERV collaboration features support information sharing among users. Collaborative scenarios include maintaining shared address lists that all users can view and edit scheduling meetings that include people and conference rooms by viewing associated free or busy schedules the ability to grant other people such as administrators access to user mailboxes on behalf of the user.

As described above the IM serves as an interface for the transfer of information between components of the MCS and components of the MSERV. Transferring information includes for example pulling receiving retrieving polling transmitting and pushing operations to name a few. As an example of information transfers between the MCS and the MSERV the IM pulls information from one or more components of the MSERV and makes the pulled information available to for example the MCS Cache. The IM also pushes information from one or more components of the MCS to the MSERV.

In serving as an interface between the MCS and the MSERV the components of the IM e.g. RTC translate communications between components of the MCS e.g. Virtual Machine Cache etc. and components of the MSERV environment. As an example the IM retrieves user information from components of the directory service e.g. Active Directory in response to a request from the MCS Cache.

Embodiments of the IM may include one or more of the following components an RTC a Management Console a desktop component messaging actions control component Diagnostics Component and or a message waiting indication component. The desktop component allows the user to configure aspects of the user s integrated messaging account such as voice message greetings extended absence greeting PIN code data and presence information. The messaging actions control component receives and responds to user generated requests from the FBUI defined herein to take actions such as playing replaying to and forwarding voice messages as well as calling the sender of a voice mail message. The message waiting indication component receives events from the user s message inbox folder and requests corresponding action from the PBX or other aspect of the telephony system such turning on message waiting indicators on the user s device s . The message waiting indication component may send notifications by way of SMS MMS and or pager

MSERV and database are typically part of an enterprise MSERV environment that includes multiple MSERVs and multiple databases in the same or various locations. Typically included in the MSERV environment is a directory service that includes a database. In some configurations the directory service may be included in database . Database can represent storage capability for the enterprise and can be distributed in any manner. A directory service provides a location for storage of information about network based enterprise entities such as applications files and printers to name a few. The directory service also stores information about individuals also referred to as users and this information is referred to herein as user information. As such the directory service provides a consistent way to name describe locate access manage and secure information about individual resources in an enterprise network environment. The directory service uses the stored information to act as the main switchboard of the enterprise network operating system and is therefore the central authority that manages the identities and brokers the relationships between distributed resources of the enterprise network thus enabling the resources to work together. Directory services are available from several vendors for example Microsoft Corporation offers the Active Directory AD directory service and IBM offers a Distributed Computing Environment DCE directory service.

AD includes many objects each of which includes data for one particular network based entity. For example AD includes user objects for each user shown here as User User etc. Similarly AD includes computer objects for each computer shown here as computer computer etc.

User object is shown in . A user object in AD includes many fixed attributes for storing predefined information about User . There are hundreds of AD fixed attributes such as name phone number mailbox location email address etc. However multiple attributes of User are specific to the Voice Applications of MCS and are not provided for in AD or other off the shelf directory services. For convenience of reference these MCS user attributes will be referred to as voice mail VM attributes. According to one embodiment the VM attributes are stored in another portion of AD set aside for custom attributes . Currently fifteen 15 custom attributes are supplied with AD and each can be used to store up to 2048 bytes of data. In an embodiment the VM attributes are collected in a string and stored in one custom attribute. String of VM attributes provides information specific to User s relationship to the Voice Applications and MCS . For example VM attributes include ClassOfService COS which includes levels of telephone and VM service whether an auto attendant is enabled for User s phone number whether User is locked out of the VM system whether an active greeting is on User s work phone extension whether User s VM notification is enabled etc. As discussed more fully below each of the VM attributes is generated and assembled in the string for storage in the custom attribute. Any of the available custom attributes may be used to store VM attributes .

Typically the data included in VM attributes is infrequently changed after a user is set up and enabled by a system administrator. However VM attributes are easily modified by regenerating them and storing a new VM attribute string in one of custom attributes . An alternative method of storing the VM attributes is to extend the AD schema by populating unused fixed attributes. The fixed attributes accommodate significantly less data so one VM attribute might be stored in one fixed attribute. Although this is an alternative to the scheme shown in it is difficult or impossible to undo the AD schema extension once it is done and this may be a factor in the choice of a scheme for storing the VM attributes. In addition in enterprises that include more than one instance of AD it is something of a challenge to keep all instances identical over time as data is updated in the extended attributes.

To further integrate the Voice Applications and other functionality of MCS into the enterprise with MSERVs data that is too large to store in the custom attributes or in the fixed attributes is stored in a database of MSERV . In one embodiment each MSERV includes an email database that stores user emails in designated locations. A user s email data store is sometimes referred to as a user mailbox or inbox. A user mailbox typically contains incoming email messages sent email messages archived email messages etc. Retention policies for the user mailbox can be set by a combination of the user and the system administrator.

As shown in there may be multiple MSERVs A D. The mailbox for User can be on any of MSERVs . In this case User s mailbox mailbox MB is stored on MSERV A. User object on AD includes a pointer to the location of MB in the attribute mailbox location. This directs any inquiries or actions related to MB to the appropriate MSERV database and mailbox.

MB as previously described includes email messages . MB further stores hidden messages . In an embodiment the MSERV supports a normal type including email messages as well as a hidden message type. Hidden messages are not routinely accessible by the user through the normal user email interfaces. In an embodiment a hidden message is used to store data used by the Voice Applications also referred to as VM related information. In one embodiment the VM related information is stored as one or more attachments to a particular user VM related hidden message . The attachments include audio files with various greetings such as a busy greeting for the user s voice mail mailbox and a no answer greeting for the user s voice mail mailbox.

An example of the integration of Voice Applications of MCS with enterprise MSERVs according to an embodiment is shown in the block diagram of . MCS accesses MSERVs through IM . One example of a voice application is a phone caller calling the voice mail mailbox of User when User is on the phone. MCS transmits an action via IM with a request to play no answer greeting. The transmission includes information to access User object fixed attributes to determine User s email mailbox location. In addition the transmission includes information to access User object custom attribute and to transfer the contents of the custom attribute to MCS via IM . When User email mailbox is accessed VM related hidden message is opened to transfer the appropriate audio file no answer greeting in this case to the MCS for playing over the phone to the caller.

In some cases it may not be necessary to transfer either the custom attribute or the audio file s from MSERV because the current custom attributes and audio files are stored on the MCS. In various embodiments the custom attributes and hidden message data are cached on the MCS as will be discussed in more detail below.

Operations of the Voice Applications and the Virtual Machine couple Cache and other components of the MCS to components of the MSERV via the IM as described herein. As such the MCS and IM support the transfer of information between Cache and backend network components like the MSERV and the Database. This configuration provides transparency between the Voice Applications and data stored in the Database when using Database information to support voice mail messaging functions of the MCS as described below.

The GAL includes information of all users in the enterprise network having access privileges that include use of email. The GAL may be stored in the directory service e.g. AD . The Public Folder includes information of the network enterprise e.g. contacts calendars etc. that is shared with all users. As an example the Public Folder can include shared contacts and or other information like calendars that are applicable to all members of the enterprise. The Personal Contacts include corresponding contact information for each user.

The User List includes user information for a subset of users in the GAL each of whom has access privileges that include use of the ICS. The User List therefore is a subset of the GAL and is pulled and or cached as a separate list or stream in order to improve efficiency of communications and minimize delays associated with having the MCS search the entire contents of the GAL for information used in executing a user requested action on a voice mail message. The User List of an embodiment includes one or more of the following parameters corresponding to each user referred to as user information but is not limited to these parameters site identification mail box number pronounceable name office telephone extension COS automatic attendant state e.g. enabled disabled voice mail state e.g. enabled disabled Voice User Interface VUI state e.g. enabled disabled mobile access state e.g. enabled disabled bad logins locked out attendant destination force change of PIN code mobile gateway identification full name first name last name user name home telephone number office telephone number cellular telephone number identification email address department active greeting state time and date announcement voice mail notification state e.g. enabled disabled mail box status PIN code no answer greeting busy greeting extended absence greeting recorded name and system greeting.

Instead of storing information pushed from the MSERV in a separate voice mail database as would be done in a typical voice mail system the information is pushed by the IM to the MCS and held in Cache. The MCS uses the cached information in subsequent voice mail message manipulation operations as described herein. This pushing and caching of information by the MCS improves speed and efficiency of voice mail message operations and prevents unnecessary loads on the MSERV resulting from the nearly continuous stream of read requests to the MSERV Database in typical messaging systems.

The pushing and caching of user information by the IM and or MCS serves to reduce the impact that losses of data would have on the ICS in providing voice mail message functions. The typical voice mail system uses database storage that is separate and independent from the database of the email system. As such periodic synchronization operations are needed to synchronize the voice mail system database with that of the email system. If the voice mail system database becomes corrupt for any reason or fails to receive updated information during a synchronization operation with the email system database the result is that the voice mail database is left in an unknown state regarding the validity of the data. The pushing and caching provided by the ICS reduces if not eliminates this issue because any loss of data in the MCS is efficiently overcome by the periodic and or on demand pushing of the user information to the MCS.

The pushing of information from the MSERV by the IM includes pushing of information including the GAL Public Folder and User List. The pushed information is cached by the MCS on a system or non individual basis because this information applies throughout the enterprise. This information is pushed by the IM and cached periodically for example at 24 hour intervals e.g. each morning at 2 00 am but is not so limited.

In contrast the IM pushes and the MCS caches information of the Personal Contacts on a per user basis because this information is different for each user. The Personal Contacts pushed by the IM and cached by the MCS periodically or on demand e.g. at the time a user logs in to the ICS in response to modifications of the Personal Contacts etc. .

Cache of an embodiment may include local cache that is local to the MCS. Additionally Cache may include a distributed cache system in which the user information is distributed among Caches of multiple MCSs. As an example the configuration of an embodiment includes four 4 MCSs where each MCS includes components of and or is coupled to a distributed cache system in a configuration that allows for caching of the same information on one or more of the MCSs in addition to caching information on a particular MCS and allowing other MCSs to access the cached information of the particular MCS.

The MCS may hold user information in the local cache and or distributed cache in any number of combinations. For example the MCS may hold all user information in the local cache reserving the distributed cache for other information. Alternatively the MCS may hold all user information in the distributed cache reserving the local cache for other information. Further the MCS may hold the user information in both the local and distributed cache.

One scenario under which the MCS holds user information in both local and distributed cache systems is when all user information received from the IM is held in local cache while a subset of user information is held in distributed cache. This scenario may be used for example to store select user information in distributed cache where the select user information includes information like user PIN codes and or other parameters that may be changed by the user via the MCS. Under this scenario the MCS pulls these user modifiable parameters from received user information from the IM and places these parameters in distributed cache all other information received from the MCS is placed in local cache.

The process continues by detecting and retrieving user information in the network enterprise at block . The detection and retrieval of user information includes detecting and retrieving user information that has been updated or modified. The process further includes pushing user information from the Database to the MCS at block . The pushing includes regular pushing at pre specified intervals on demand pushing performed in response to a request and as needed pushing. The process also includes caching of user information received as a result of the pushing operations at block . The MCS and or IM provide voice mail messaging among the client devices using cached user information at block .

The ICS of an embodiment also includes processes for caching user information received via IM push operations where caching includes updating of user information previously cached at the MCS Cache. The updating of cached user information in an embodiment includes detecting updated information using the IM and pushing detected information to the MCS and or Cache as appropriate to a network configuration. The detection of updated user information includes detecting modifications to user information performed by a network administrator e.g. administrator changes a telephone extension for a voice mail system user for example. Once detected the IM of an embodiment may incrementally push updated user information to the MCS as described above. The pushing includes pushing of all user information corresponding to a user for whom the administrator has changed any component of his her user information. Alternative embodiments however may push only revised information or information of differences e.g. delta files streams or difference files streams resulting from updates.

The IM detects updates to user information made through a user interface of the ICS but is not so limited. In an alternative embodiment for example the IM detects updates made by an administrator using an interface of the directory service or other email system interface e.g. AD interface .

Updates to user information may include any number of changes to user information. Examples of updates therefore include updating user information enabling new users and disabling existing users to name a few. Descriptions follow of operations for updating user information. While updates of user information are described below in the context of specific types of user information e.g. Personal Contacts the embodiment is not so limited. Alternative embodiments may update various other collections or sets of user information e.g. Global Address List using processes similar to those described herein.

One example of the IM pushing updated user information to components of the ICS e.g. MCS occurs when the network administrator updates user information corresponding to an existing user. The IM detects the updates to user information and pushes the user information including the updated information to the MCS. The IM may push updated user information of a single user in one push transaction and or one data stream. Alternatively the IM may push updated user information of any number of multiple users in one push transaction and or one data stream.

The MCS when receiving updated user information identifies a user to whom the user information corresponds. The MCS also uses an entry identification assigned to user information by the MSERV to relate received user information to user information currently held in Cache. When the MCS determines that user information in Cache corresponds to received user information the MCS updates user information held in Cache using received user information. The MCS adds received user information to Cache when the MCS fails to identify user information corresponding to received user information in Cache.

Another example of the IM pushing updates of user information to components of the ICS e.g. MCS occurs when the network administrator adds user information corresponding to a new user. The IM detects new user information and pushes the new user information to the MCS. The IM may push new user information of a single new user in one push transaction. Further the IM may push new user information of any number of new users in one push transaction.

The MCS when receiving new user information uses the entry identification assigned by the MSERV to attempt to relate the new user information to user information currently held in the cache as described above. The MCS will be unable to identify cached user information corresponding to the updated user information because the received user information is new user information for a new user . Consequently the MCS adds the new user information to the Cache.

The user information may be pushed by the IM and cached by the MCS periodically and or on an as needed basis e.g. at the time a user logs in to the ICS in response to modifications of the Personal Contacts etc. as described above. Upon receipt of user information the MCS of an embodiment incrementally loads the user information for holding in the Cache. is an information flow diagram for incremental loading of user information under an embodiment. The incremental loading example of this flow diagram assumes loading of Personal Contacts but may be used for any type of user information and or other information of the enterprise network Database.

This example begins with a user s first time login to an MCS of the enterprise network. The MCS in response to initiation of the first user login event detects no cached Personal Contacts corresponding to the user and generates a request GetPersonalContactsAll for all Personal Contacts of the user. The MCS transfers the request to the directory service Database via the IM. The IM retrieves the Personal Contacts from the Database in response to the request and pushes the Personal Contacts to the MCS along with a time stamp TS. The MCS caches information of the Personal Contacts in an area of Cache corresponding to a user e.g. User Z List along with the time stamp information e.g. TS .

The example continues when the user subsequently logs in to the MCS. The MCS in response to initiation of the subsequent user login detects cached Personal Contacts corresponding to the user and generates a request GetPersonalContactsTS for all Personal Contacts of the user modified since the date time specified by the cached time stamp information. In contrast to a first login event this request includes the time stamp information corresponding to the cached Personal Contacts.

The MCS transfers the request to the directory service Database via the IM. The IM retrieves and pushes updated Personal Contacts modified since the date time specified in the time stamp information of the request along with an updated time stamp. Additionally the IM includes in the pushed information a total number Total of the user s Personal Contacts found in the Database. The MCS merges the updated Personal Contacts with the cached Personal Contacts and Caches the updated time stamp. The updated Personal contacts include but are not limited to modified contacts new contacts and deleted contacts.

In responding to a request for Personal Contacts the ICS uses the time stamp information to ensure that unsynchronized clocks between the MCS and the database system for example do not result in the exclusion of some Personal Contacts from subsequent Personal Contact update operations. In so doing the IM generates the time stamp at such time as the IM receives the request from the MCS for Personal Contacts. The IM generates the time stamp by reading the server time of the MSERV before Personal Contacts are accessed e.g. at the time the IM begins to generate the Personal Contact stream .

In contrast if the IM were to generate the time stamp at the time the Personal Contacts were pushed to the MCS a scenario might arise in which the contacts are updated after retrieval of the Personal Contacts by the IM but before push of the Personal Contacts to the MCS and generation of the time stamp. Thus generation of the time stamp before accessing the Personal Contacts prevents the scenario in which an update by the user in the interim period between retrieving an update request and time stamping the Personal Contacts results in updated Personal Contacts being missed by the IM and thus not cached in the MCS.

In addition to the time stamp the IM includes in a response the total number of the user s Personal Contacts identified in the database as appropriate to the request. The MCS uses the total number of Personal Contacts in one or more types of incremental loading scenarios as described below.

One example showing use of the total number of Personal Contact is an incremental loading scenario in which a new contact has been added to the Personal Contacts. To begin User Z s Personal Contact list includes three 3 contacts. User Z logs in to the ICS for the first time and the MCS detects no cached Personal Contacts corresponding to User Z. The MCS requests GetPersonalContactsAll all Personal Contacts for User Z from the IM. In response to the request the IM generates a time stamp TS 0900 retrieves the three Personal Contacts generates a data stream including the Personal Contacts and the time stamp and pushes the data stream to the MCS. Upon receiving the data stream the MCS caches the three Personal Contacts and the time stamp information TS 0900 .

A new Personal Contact is subsequently added to User Z s Personal Contacts at 0930 hours. User Z again logs in to the ICS at a later time 1000 hours and the MCS finds three cached Personal Contacts corresponding to User Z. The MCS requests updated Personal Contacts GetPersonalContactsTS for User Z from the IM where the time stamp indicates the time TS 0900 corresponding to the currently cached Personal Contacts. In response to the request the IM generates a time stamp TS 1000 determines a total number of contacts Total 4 retrieves the new Personal Contact added since the time stamp of the request 0900 and generates a data stream including the new Personal Contact the time stamp and the total number of contacts. The IM pushes the data stream to the requesting MCS. Upon receiving the data stream the MCS reads the cache and determines the new contact of the data stream is not present in cached Personal Contacts. In response the MCS updates the cache to include the new Personal Contact and updates the cached time stamp TS 1000 .

Another example showing use of the total number of Personal Contact is a scenario in which information of a contact has been modified. To begin User Z s Personal Contact list includes three 3 contacts. User Z logs in to the ICS for the first time and the MCS finds no cached Personal Contacts corresponding to User Z. The MCS requests GetPersonalContactsAll all Personal Contacts for User Z from the IM. In response to the request the IM generates a time stamp TS 0900 retrieves the three Personal Contacts generates a data stream including the Personal Contacts and the time stamp and pushes the data stream to the MCS. Upon receiving the data stream the MCS caches the three Personal Contacts and the time stamp information.

A Personal Contact contact 2 is subsequently updated in User Z s Personal Contacts at 1100 hours. User Z again logs in to the ICS at a later time 1230 hours and the MCS finds three cached Personal Contacts corresponding to User Z. The MCS requests updated Personal Contacts GetPersonalContactsTS for User Z from the IM where the time stamp indicates the time TS 0900 corresponding to the currently cached Personal Contacts. In response to the request the IM generates a time stamp TS 1230 determines a total number of contacts Total 3 retrieves the Personal Contact updated since the time stamp of the request 0900 and generates a data stream including the updated Personal Contact contact 2 the time stamp TS 1230 and the total number of contacts Total 3 . The IM pushes the data stream to the requesting MCS. Upon receiving the data stream the MCS reads the cache and determines a Personal Contact has been updated updates the cache to include the updated Personal Contact contact 2 and updates the cached time stamp TS 1230 .

An additional example shows use of the total number of Personal Contact in a scenario in which a contact has been deleted. To begin User Z s Personal Contact list includes three 3 contacts. User Z logs in to the ICS for the first time and the MCS finds no cached Personal Contacts corresponding to User Z. The MCS requests GetPersonalContactsAll all Personal Contacts for User Z from the IM. In response to the request the IM generates a time stamp TS 0900 retrieves the three Personal Contacts generates a data stream including the Personal Contacts and the time stamp and pushes the data stream to the MCS. Upon receiving the data stream the MCS caches the three Personal Contacts and the time stamp information.

A Personal Contact contact 3 is subsequently deleted from User Z s Personal Contacts at 1000 hours. User Z again logs in to the ICS at a later time 1100 hours and the MCS finds three cached Personal Contacts corresponding to User Z. The MCS requests updated Personal Contacts GetPersonalContactsTS for User Z from the IM where the time stamp indicates the time TS 0900 corresponding to the currently cached Personal Contacts. In response to the request the IM generates a time stamp TS 1100 and determines a total number of contacts Total 2 . The IM determines no contacts have been modified in the database since the time stamp of the request 0900 and in response generates a data stream including the TS and the total number of contacts two . The IM pushes the data stream to the requesting MCS. Upon receiving the data stream the MCS reads the cache and determines a Personal Contact has been deleted by comparing the total number two of contacts received from the IM with the number of contacts three currently in the cache.

The MCS requests GetPersonalContactsAll all Personal Contacts for User Z from the IM in response to determining a contact has been deleted. In response to the request the IM generates a time stamp TS 1100 retrieves the two Personal Contacts generates a data stream including the Personal Contacts and the time stamp and pushes the data stream to the MCS. Upon receiving the data stream the MCS caches the two Personal Contacts.

Yet another example shows use of the total number of Personal Contact in a scenario in which no contacts have been added deleted or modified. To begin User Z s Personal Contact list includes three 3 contacts. User Z logs in to the ICS for the first time and the MCS finds no cached Personal Contacts corresponding to User Z. The MCS requests GetPersonalContactsAll all Personal Contacts for User Z from the IM. In response to the request the IM generates a time stamp TS 0900 retrieves the three Personal Contacts generates a data stream including the Personal Contacts and the time stamp and pushes the data stream to the MCS. Upon receiving the data stream the MCS caches the three Personal Contacts and the time stamp information.

User Z again logs in to the ICS at a later time 1000 hours and the MCS finds three cached Personal Contacts corresponding to User Z. The MCS requests updated Personal Contacts GetPersonalContactsTS for User Z from the IM where the time stamp indicates the time TS 0900 corresponding to the currently cached Personal Contacts. In response to the request the IM generates a time stamp TS 1000 and determines a total number of contacts Total 3 . The IM determines no contacts have been modified in the database since the time stamp of the request 0900 and in response generates a data stream including the TS and the total number of contacts three . The IM pushes the data stream to the requesting MCS. Upon receiving the data stream the MCS reads the cache determines from absence of contact information that no contacts have been modified and determines by comparing the total number three of contacts received from the IM with the number of contacts three currently in the cache that no contacts have been added or deleted. The MCS updates time stamp information of the cache TS 1000 using the received time stamp.

In operating to provide integrated messaging capabilities the MCS and the IM function to route a call placed by a caller to a user and in the event the user is not available to receive and route a voice mail message left by the caller. The MCS and the IM also function to provide a user with access to voice mail messages using the messaging server of the enterprise email system. The voice mail access supports both online and offline modes of the messaging server.

An example of call routing by the MCS and with further reference to the MCS receives and detects a call at the Telephony Interface. Data of the call e.g. called party information calling party information reason for call transfer etc. invokes the Voice Browser. The Voice Browser transfers a request to the Voice Applications in response to the call data.

A Dispatcher component of the Voice Applications routes the call to one or more other Voice Application components in accordance with information of the User List. As an example the Dispatcher identifies the target user for the call and determines whether the target user s automatic attendant is enabled. If the automatic attendant is enabled then the automatic attendant receives the call request and provides the caller with one or more call routing options e.g. caller selects call routing by selecting and or saying extension number selecting and or saying name etc. and routes the call according to the caller s input.

As an example one or more of the Voice Applications determine an active greeting currently designated by the user for use in responding to calls e.g. system greeting no answer greeting busy greeting extended absence greeting etc. and retrieve the designated active greeting from one of the Cache or MSERV as appropriate to a state of the MSERV. The respective application s play the greeting activate a record mode to record the voice mail message of the caller and provide the caller with additional options available for call and or message routing e.g. message marking options message delivery options send message route message to additional users etc. . Upon completion of the recording and or selection of a message routing option by the caller the respective application s terminate the call hangs up and transfer the recorded voice mail message to one or more locations in the Cache and or MSERV e.g. a mail box that correspond to the user as described below with reference to and . Alternatively the voice mail message may be transferred before the application terminates the call.

As referenced above the MCS of an embodiment in conjunction with the IM supports availability of and access to the voice mail applications when the MSERV is both online and offline through the use of the Cache. The MCS of an embodiment includes an Offline Detector that monitors an availability state of the MSERV and detects unavailability offline condition or offline state of the MSERV. Upon detecting MSERV unavailability the MCS transitions to a mode that supports voice mail message recording and retrieval during the MSERV offline condition.

Caching of select information received and or generated in the MCS including User Information and voice mail information enhances performance of the enterprise network voice messaging system by reducing the instances of data retrieval from the MSERV. Further caching of select information improves the reliability of the enterprise network voice messaging system by allowing access to the voice messaging system during periods when the MSERV is offline.

Information received at the MCS is routed and held in the Cache in accordance with policies running in the state machine framework and or the availability state of the MSERV. Examples of information held in the Cache include but are not limited to the User List Global Address List information of Public Folders information of Personal Contact Folders voice mail message information both the text description portion and the audio message portion of the voice mail message greetings and other user parameters permissions and personal information of users e.g. PIN codes .

Regarding actions taken by the MCS following receiving and recording of a voice mail message when the MSERV is online the MCS generally holds information of the recorded message in the Cache. The MCS may also transfer the recorded voice mail message via the IM to the MSERV where it is stored in the Database.

As an example is an information flow for routing and accessing voice mail messages via the ICS when the MSERV is in an online state under an embodiment. This information flow shows one MCS and one MSERV in an enterprise network environment but this is shown only as an example and does not limit the network environment to the types numbers and or coupling of components shown as alternative embodiments may have any number of MCSs and or MSERVs.

Information flow begins when a caller places a call to a user and availability of the user results in the caller leaving a voice mail message referred to herein as the VMSG for the user. The voice mail message VMSG is received at the MCS and routed C to the Cache where it is assigned an identification referred to herein as the CACHEID and held. The voice mail message VMSG may be held in the Cache for a pre specified period of time but the embodiment is not so limited. The voice mail message VMSG and the CACHEID are also routed M to the MSERV via the IM as described above. The MSERV assigns an identification referred to herein as the VMSGID to the incoming voice mail message VMSG and stores the voice mail message VMSG along with the VMSGID and CACHEID in one or more areas of memory not shown available to the MSERV. Memory may include any various form of storage or computer readable memories such as but not limited to volatile memory random access memory RAM non volatile memory read only memory ROM EEPROM disk and or other storage devices that may include one or more of magnetic and optical storage media.

As described above the MCS pulls information e.g. periodically on demand etc. from the MSERV via the IM and uses the pulled information in providing voice mail message capabilities integrated with email messaging capabilities of the enterprise network. Therefore pulling operations by the IM include pulling of information identifying the stored voice mail message VMSG where the information identifying the voice mail message VMSG includes but is not limited to the CACHEID. Upon request from the MCS the IM may pull a voice mail list referred to herein as a VMLIST which includes CACHEIDs and VMSGIDs for any stored messages from the MSERV environment. The IM pushes VMLIST to the MCS where it is held. VMLIST may be generated from the user s inbox upon each request from the IM or may be stored and maintained in the MSERV or in the cache as a current representation of the contents of a user s voice mailbox or inbox. If and when a time period for holding a VMSG in the Cache expires the VMSG is still identifiable from VMLIST and can be found in the MSERV if requested using the VMSGID.

Information flow continues when a user accesses the enterprise network system to retrieve his her voice mail messages. In an embodiment the user access causes the VMLIST to be pulled from the MSERV and pushed by the IM to the Cache and also or alternatively to the MCS Upon being provided with access to the MCS the user selects one or many voice mail message s by selecting a VMSGID CACHEID item from the VMLIST. In response to the user selection MCS searches the Cache for a message using the Cache identification CACHEID of the selected message. In a scenario in which the message was left by the caller and the time period for holding the message VMSG in the Cache has not expired the MCS will locate the CACHEID and the message contents VMSG in the Cache. Once located through use of the CACHEID the MCS retrieves R the voice mail message contents VMSG from the Cache and plays the voice mail message for the user as appropriate to the action selected by the user.

In this manner the MCS provides user access to the contents of the voice mail message VMSG via a mapping and without storing voice mail message contents in the MCS. The mapping includes a mapping of voice mail message contents to identification information of the email environment MSERV environment and mapping identification information of the email environment to identification information of the voice mail environment MCS . In this embodiment therefore the mapping includes mapping of voice mail message contents to the message identification VMSGID and mapping of the message identification VMSGID of the email environment to the MCS identification CACHEID.

As used herein pushing data or information indicates an action of a component or entity that has the affect of transferring the data or information to another component or entity. Transferring includes sending in response to a request query or command and sending on the initiative of the transferring component or entity. The transfer may be an internetwork transfer an intranetwork transfer or a transfer between a network component or entity and a non network component or entity.

As used herein pulling data or information indicates a component or entity receiving transferred data or information. Receiving includes receiving in response to a request query or command and retrieving in response to a request query or command. The transfer may be an inter network transfer an intra network transfer or a transfer between a network component or entity and a non network component or entity.

Information flow begins when a caller places a call to a user and availability of the user results in the caller leaving a voice mail message VMSG for the user. The voice mail message VMSG is received at the MCS and routed C to the cache as described above and the VMSG and CACHEID is routed to the MSERV via the IM also as described above. The MSERV assigns identification VMSGID to the incoming voice mail message VMSG and stores the voice mail message VMSG along with the VMSGID in one or more areas of memory not shown available to the MSERV.

Information flow continues when a user accesses the enterprise network system to retrieve his her voice mail messages. VMLIST is pulled from the MSERV and pushed by the IM to the MCS. Upon being provided with access to the MCS the user selects a voice mail message from VMLIST by selecting a CACHEID VMSGID item. The MCS searches the Cache for the Cache identification CACHEID of the selected message in response to the user selection. Because the message was left by the caller and stored in the MSERV environment and expired in the cache before the user calls in the MCS will not locate the CACHEID in the Cache. Consequently the MCS accesses the MSERV identifies the message VMSG and pulls the voice mail message contents from the MSERV environment via the IM. The MCS plays the pulled voice mail message VMSG for the user as appropriate to the action selected by the user.

In addition to the online scenarios described above the MCS of an embodiment provides offline behavior that allows for holding storing and retrieving voice mail messages when the MSERV is offline or unavailable for some reason or during times when the connection between the MCS and the MSERV is unreliable. Offline behavior means absence of a coupling between the MSERV and the MCS. Regarding actions taken by the MCS following recording of a voice mail message when the MSERV is offline a component of the MCS e.g. Offline Detector detects the MSERV is offline. The MCS holds the recorded voice mail message in the in response to detecting the MSERV state as offline. At such time as the MCS detects the MSERV is online the Groupware Connector pulls the voice mail message from the Cache and transfers the recorded voice mail message via the IM to the MSERV where it is stored in the Database.

As an example is an information flow for routing and accessing voice mail messages via the ICS when the MSERV is in an offline state under an embodiment. This information flow shows one MCS and one MSERV in an enterprise network environment but this is shown only as an example and does not limit the network environment to these components as alternative embodiments may have any number of MCSs and or MSERVs.

The information flow begins when a caller places a call to a user and availability of the user results in the caller leaving a voice mail message VMSG for the user. The voice mail message VMSG is received at the MCS however a component of the MCS detects an unavailable or offline condition of the MSERV. In response to detecting the offline condition the MCS assigns a CACHEID to the incoming message VMSG and holds C the message contents VMSG along with the CACHEID in the Cache.

Information flow continues when a user accesses the enterprise network system to retrieve his her voice mail messages while the MSERV remains in an offline condition. Upon being provided with access to the MCS the user selects a voice mail message from a list of CACHEIDs generated from the collection of voice mail messages held for him her in the cache. In response to the user selection the MCS searches the Cache using the Cache identification CACHEID of the selected message. Upon locating the voice mail message by its CACHEID in the Cache the MCS pulls R the voice mail message contents from the Cache and plays the voice mail message for the user as appropriate to the action selected by the user.

The MCS continues to monitor the condition of the MSERV. At such time as the MCS detects a return of the MSERV to an online condition the MCS pulls P the voice mail message VMSG and its CACHEID from the Cache and transfers M the voice mail message and CACHEID via the IM to the MSERV. The MSERV assigns an identification VMSGID to the incoming voice mail message VMSG and stores the voice mail message VMSG along with the VMSGID and CACHEID in one or more areas of memory as described above.

In addition to the capabilities described above the ICS of an embodiment provides a Form Based User Interface FBUI . The FBUI is a form based messaging or communication interface for use by users in retrieving voice mail messages and controlling actions taken on voice mail messages received in the enterprise network system. This FBUI enables a user to retrieve and take various actions on voice mail messages using data of a form referred to herein as the FBUI FORM that is presented to the user s client device by the enterprise network email system. Use of the FBUI Form thus provides the user with access to the integrated messaging functions offered by the ICS without a requirement to install or run a dedicated client application on the user s client device.

Messaging server environment includes the MSERV and a Database but is not so limited. The LAN couples to any number of other networks and using any of a variety of communication protocols where the networks and may be of the same or of different types. As an example the networks may include a public communications network and a private communications network . Private communications network may be a PBX coupled to the LAN of the enterprise network for example. Networks and allow for information transfers between client devices that are local to enterprise network and client devices that are external to enterprise network . The client devices may alternatively be referred to as user devices and .

ICS replaces the voice mail server typically found in enterprise networks with at least one MCS . MCS is coupled to the private communications network e.g. PBX of each network enterprise. While one MCS is shown in this example system the enterprise network may include multiple MCSs coupled to enterprise network in an N 1 configuration where N is any number 1 2 . . . X.

For security reasons communication to and from the MCS is restricted in an embodiment. The MCS communicates with the IM servers the private communications network other MCSs and selected client devices. According to an embodiment of the invention communications with the MCS may be restricted to network components having particular known addresses. Additionally or alternatively communications with the MCS may require authentication by passcode or other security measures for certain kinds of access for example for access by the administrator. Security may also or alternatively be encrypted and or provided by requiring a physical connection between the MCS and other component such as in the case of a connection between an MCS and a private communications network through a direct cable connection.

The MCS via the FBUI generally provides a form to a client device from a first server e.g. messaging server MSERV etc. via a network connection. The form includes data or code that when executed by the receiving client device results in presentation of a FBUI on a display of the client device. The FBUI includes a number of buttons or icons that allow a user to select an action on an item via a second server e.g. communication server MCS etc. where the item is stored on the first and or second servers and the first and second servers are different servers. The FBUI of an embodiment uses a web browser embedded in the form as the means for coupling and or communicating with a corresponding browser control of the second server. Communications between the client device and the second server thus avoid security and or other network policy issues that would prohibit the client device from communicating with the second server via the network coupling between the client device and the first server.

As described above the FBUI operates as a form based messaging interface to transfer a first message e.g. voice mail message to a messaging server e.g. MSERV from a communication server e.g. MCS via a first coupling e.g. IM . The messaging server generates a second message e.g. email message in response to a type of the first message and transfers the second message to a client device via a second coupling e.g. LAN . The type of the first message is specified by the communication server using properties on the message that identify the message as a Voice Mail Type VMT message. The second message is of a different type and includes data of the first message but is not so limited. The communication server also transfers to the client device form data that corresponds to the first message. The client device uses the form data to establish a third coupling e.g. browser link between the client device and the communication server. The user may direct actions on the first message from the client device via the third coupling using the form data.

The ICS of an embodiment provides the FBUI to a user via his her local client device. The FBUI is provided to the client device through the use of a FBUI Form where the structure of the FBUI Form conforms to the message structure of the messaging server environment. For example when the messaging server environment includes the use of Microsoft Exchange and Microsoft Outlook the FBUI Form is generated to comply with Microsoft formats as appropriate to Exchange and Outlook

Information for generation of the FBUI Form is provided to the messaging server environment by the MCS via the IM and the code used for FBUI Form generation is hosted by the MSERV in an embodiment. The FBUI Form of an embodiment includes code that generates information of the FBUI display as well as the buttons of the display. The FBUI Form further includes an embedded browser control for use in establishing communications between the client device displaying the FBUI Form and a web server e.g. MCS IM other server for example. The embedded browser control therefore allows the host client device to couple and communicate with a server that is different from the MSERV via a communication channel that is outside the enterprise network LAN. Thus the FBUI Form enables a communication channel between the local client device currently executing the form and a component like the MCS and or IM in spite of network policy issues that otherwise might prohibit the client device from communicating outside the enterprise network message infrastructure.

Using the FBUI a user can access view and take a variety of actions on his her voice mail messages within an email framework of the host enterprise network system. As an example when the MCS of an embodiment receives a voice mail message it transfers the voice mail message to the MSERV as described above. In transferring the voice mail message to the MSERV the MCS specifies properties on the message that identify the message as a Voice Mail Type VMT message. The message is received and stored by the MSERV as a VMT message using the same storage and retrieval structure as used with other message types like email messages.

At such time as a user wishes to access his her messages via his her client device the active message browser of the client device receives the VMT message along with any other mail messages currently stored in his her electronic mail box. The message browser corresponds to the message structure of the messaging server environment e.g. Outlook in a Microsoft environment . Upon receipt of the message the message browser identifies the message as a VMT message. As the code that implements the FBUI Form is stored on the MSERV implementation of the functionality and or features associated with the FBUI Form uses communication between the user s client device and the MSERV via the LAN. For example the client device message browser requests the FBUI Form from the MSERV in response to identifying a message as a VMT message because this is the form that corresponds to the VMT message type. The MSERV transfers the FBUI Form to the requesting client device and the client device message browser launches the form in response to the user selecting a VMT message for viewing.

The message browser uses data or code of the FBUI Form to display the FBUI on the user s client device. is a sample FBUI as displayed on a client device under an embodiment. The FBUI includes three areas that present information to a user. The areas include a folder area a contents area and a function area but are not limited to these areas as the UIs of alternative embodiments may present any number and or type of areas. In alternative embodiments all three areas may be presented at the same time as shown in FBUI or various subsets of the three areas may be presented at the same time in various combinations.

Folder area presents one or more folders to which the user has access via the FBUI and the client device. The INBOX may contain a list of voice mail messages in the same listing as other messages including email messages. Alternatively the Inbox may include a subfolder VOICE MESSAGES which includes the voice mail messages and selection of this folder results in the presentation of voice mail messages of the user s mail box in the contents area .

The contents area generally presents the contents of the folder selected using the folder area . As an example the contents area presents information corresponding to any number of voice mail messages in the user s mail box when the INBOX or VOICE MESSAGES folder is selected. Contents area allows the user to select a particular voice mail message by placing a cursor on VOICE MESSAGE 1 INFORMATION for example. By double clicking a message in the contents area or otherwise indicating to the message browser to display a voice message a new window referred to as the ICS Window is displayed. The ICS Window now includes function are .

Function area of FBUI presents one or more voice mail action buttons A E also referred to herein as buttons each of which represents an action the user may select for a voice mail message. In this example the VOICE MESSAGES folder is selected and selection of a message in contents area allows the user to take an action on the selected message using buttons A E. Placing the cursor of contents area on a particular message and choosing an action on the selected message with a button A E therefore invokes operations on the message via components of the ICS e.g. MCS Cache IM . The buttons A E of an embodiment include a Play on Phone button A a Play on Computer button B a Call Sender button C a Reply by Voicemail button D and a Forward by Voicemail button E but the embodiment is not limited to this same number of buttons or to buttons offering the same functionality.

In other embodiments presentation of areas or information of the FBUI may vary in many ways. For example in one embodiment the action buttons appear after the user has selected for example by double clicking a particular voice message from the contents area . Action buttons may also appear when the user right clicks on a particular voice message in the contents area .

The folder area may also include a subfolder VOICE MESSAGE SYSTEM under the Public Folder. As such the VOICE MESSAGE SYSTEM folder may not be considered an actual folder but instead a uniform resource locator URL that when selected sends an HTTP request to a web server and launches displays an ICS browser inside the client device message browser. The web server may for example be a component of the MCS and or IM but is not so limited. The ICS browser is an embedded or hidden browser that displays the ICS Window in the area of the client device message browser where emails would typically appear and the voice mail messages are displayed in the ICS Window.

As an example the ICS Window is displayed in the contents area of an embodiment. The ICS Window may be served from the IM and may contain any information related to the voice messaging system that is user specific. In one embodiment the ICS Window will display a user login prompt where the user enters the user name and PIN code. Subsequently the system displays the user s configuration date such as PIN code attendant extension greeting type and other applicable information.

The hidden browser enables an HTTP link and communications with the IM for example which then brokers communications via HTTP with the MCS via the MCS Web Server for example. Therefore while typical messaging servers and LANs use security policies that restrict the use of special code in form data use of the hidden browser embedded in a form structure that is native to the host system overcomes this restriction because the browser is not detected or considered as special code. Use of the hidden browser thus supports communication with the corresponding browser control in the MCS and or the IM thereby allowing the integration of voice mail messaging provided by the MCS with the email messaging system of the enterprise network

A voice mail message in the ICS is generally any message created using a client device generating an audio stream. A voice mail message is also any VMT message such as a message created using the Reply by Voice Message and Forward by Voice Message buttons of the FBUI. An email is any message created using buttons of a host mail message system that function to generate a reply message or to forward a message in response to receipt of a message even if replying or forwarding a voice mail message. The ICS of an embodiment presents a voice mail message to a user in an email message system using the FBUI as the presentation form.

As described above FBUI allows a user to take action on a voice mail message via buttons A E of FBUI . Therefore placing the cursor of contents area on a particular message and choosing an action on the selected message with a button A E invokes the action on the message via components of the MCS and or the enterprise network environment.

As one example of an action on a voice mail message and with further reference to the user may select a Play on Phone action using button A. In response the user s client device couples to a component of the ICS e.g. IM using the hidden browser of the FBUI. The client device receives a pop up message from the ICS via the browser link and the ICS Window where the pop up message allows the user to choose or enter a telephone number to which he she would like the selected voice mail message routed. The pop up message also includes a connect button by which the user initiates routing of the selected voice mail message to the selected telephone. In response to selection of the connect button the IM couples with an MCS and the MCS causes the PBX to initiate a call to the telephone number selected by the user via the pop up window. Upon connection of the call from the PBX to the selected telephone the MCS pushes the contents of the voice mail message to the selected telephone.

Another example of an action on a voice mail message includes selection of a Play on Computer action by the user via button B. In response the user s client device couples to a component of the ICS e.g. IM using the hidden browser of the FBUI. In response to selection of the Play on Computer button the IM couples with an MCS and the MCS pushes a form to the user s computer that resembles a typical email. The form includes an attachment that is an audio file e.g. WAVE MP3 other audio formats etc. . When the user selects the attachment the client device may launch the default audio player of the client device.

Alternatively selection of the attachment in a Play on Computer action may result in the browser form controlling launch of a pre specified audio player instead of the default audio player. This is similar to the hidden browser described above with reference to presentation of the FBUI.

The user may also select a Call Sender action on a voice mail message using button C. In response the user s client device couples to a component of the ICS e.g. IM using the hidden browser of the FBUI. In response to selection of the Call Sender button the IM couples with an MCS and the MCS retrieves the selected message from the Cache or the MSERV. Using the caller information from the retrieved message the MCS causes the PBX to connect the call to the user s local telephone. Upon connection of the call from the PBX to the user s telephone the MCS causes the PBX to initiate a call to the sender s telephone number as determined from the caller information associated with the voice message.

Additionally the user may select a Reply by Voice Message action on a voice mail message using button D. In response the user s client device couples to a component of the ICS e.g. IM using the hidden browser of the FBUI. In response to selection of the Reply by Voice Message button the IM couples with an MCS and the MCS retrieves the selected message from the Cache or the MSERV. The MCS causes a reply message to be generated corresponding to the received message and prompts the user to record an audio message for the reply. The user records the audio for the reply via a microphone coupled to his her client device. Alternatively the user may record the audio for the reply via his her local telephone. Upon completing the audio reply recording the MCS causes the reply message to be transmitted to the designated addressees via the MSERV. A user is not required to listen to a message to invoke the Reply by Voice Message action.

The user may also select a Forward by Voice Message action on a voice mail message using button E. In response the user s client device couples to a component of the ICS e.g. IM using the hidden browser of the FBUI. The client device receives a pop up message from the ICS via the browser link where the pop up message allows the user to choose or enter a telephone number to which he she would like the selected voice mail message routed. The pop up message also includes a connect button by which the user initiates routing of the selected voice mail message to the selected telephone. In response to selection of the connect button the IM couples with an MCS and the MCS causes the PBX to initiate a call to the telephone number selected by the user via the pop up window. Upon connection of the call from the PBX to the called telephone selected by the user the MCS pushes the contents of the voice mail message to the called telephone and the user. During the session and in addition to the contents of the voice mail message the MCS may provide a verbal prompt to the user requesting information of the party to whom the message is to be forwarded and or a prompt to the user to record an audio message to be forwarded along with the forwarded message. A user is not required to listen to a message to invoke the Forward by Voice Message action.

Thus shows a system that is scalable in a number of different dimensions according to various embodiments of the invention. Two MSERVs are shown coupled by a network. This configuration allows for sharing of voicemail messages user lists global address lists distribution lists and public folders between the various MSERVs that connected by a network and which may be placed at the same or different locations. Additionally use of multiple MSERVs allows for scaling of the overall system through the increased capacity provided by the multiple MSERVs.

Multiple MCSs are shown. Increased number of MCSs can help to increase overall system capacity and or redundancy by providing increased number of ports storage and processing capacity. According to an embodiment of the invention information on the MCSs is derived from the MSERVs and automatically cached on the MCSs. This allows for easy deployment of new MCSs by which the data and configuration settings for the new MCSs are acquired from the MSERV s and or caches of other MCSs. Additionally an MCS may be coupled to more than one private communications network. In some cases an MCS may operate with multiple private communications networks simultaneously. Also an MCS that is coupled to multiple private communications networks may continue operation with a non failing private communications network in the event that one of the private communications networks to which the MCS is coupled fails. In one embodiment the MCS that is coupled to multiple private communications networks operates with at least one of the private communications networks but begins to operate with another non failing private communications network in the event that a private communications network to which the MCS is coupled fails.

Multiple IMs are shown in which help to support the capacity of additional MCSs. The multiple IMs also may provide fail over support for each other in the event that one of the IMs fails.

In the equipment and users associated with a particular private communications network referred to as members of a Site. Accordingly a user may have a Site identification. The Site identification may be used to filter user information associated with a particular Site from the a broader set of user information stored on the MSERV servicing multiple Sites. Additionally Sites may be combined into auto attendant groups. The auto attendant groups are Sites that share a common dial plan. For example members of an auto attendant group may able to place calls using extension numbers instead of full numbers.

According to an embodiment of the invention various subsets of users may be defined from among the users in an MSERV or set of networked MSERVs. Such subsets of users may be defined by a Site identification. In this way various subsets of users may be associated with different respective private communications networks such that the users access to respective Sites within a network of MSERVs depends on the users membership in the various defined subsets of users. For example members of a subgroup of users associated with a particular Site may be able to use functions such as message waiting indication and control of messaging actions at their associated Site but not at other Sites.

As described herein the ICS includes a network that includes a database storing a groupware application and a directory service wherein the directory service stores user information for use in providing messaging of a first type among client devices coupled to the network a messaging communication server MCS that couples to the network and to at least one communication network wherein the MCS provides messaging of a second type among client devices coupled to the network and an interface module that couples the MCS to the network the interface module pushing user information from the database to the MCS wherein the MCS uses the pushed user information to provide the second type of messaging wherein the MCS and the interface module provide integration of the messaging of the second type into the network.

In an embodiment the ICS further comprises a cache that couples to the MCS the cache holding the user information pushed by the interface module.

The interface module may detect changes to the user information and incrementally pushes the changes to the MCS.

In an embodiment the MCS includes at least one voice application and various application programming interfaces APIs and messaging of the second type includes voice messaging and wherein the cache further couples to a state machine framework wherein communications among the at least one voice application the cache groupware application and a directory service take place via the state machine framework and the various APIs as appropriate to a state of the groupware application.

The state of the groupware application includes an online state in which the groupware application communicates with the MCS and an offline state in which the groupware application does not communicate with the MCS.

In an embodiment the voice applications include a voice mail messaging application and wherein the user information includes user information particular to the voice messaging application.

An embodiment of the ICS includes an integrated messaging system comprising an enterprise network that includes a database storing a groupware application and a directory service wherein the directory service stores user information for use in providing messaging of a first type among client devices coupled to the enterprise network at least one messaging communication server MCS that couples to the enterprise network and to at least one communication network wherein the MCS provides messaging of a second type among client devices coupled to the enterprise network an interface module IM that couples the MCS to the enterprise network the interface module pushing user information from the database to the MCS wherein the MCS uses the pushed user information to provide the second type of messaging and at least one cache that couples to the MCS wherein the cache holds the user information pushed by the interface module.

The second type of messaging may include voice mail messaging and the MCS may further comprise voice applications including a voice mail application wherein the MCS stores voice mail specific information in the user information in the directory service via the IM.

In an embodiment the at least one cache includes a local cache that is local to a certain MCS and a distributed cache that is communicatively coupled among multiple MCSs wherein the user information pushed by the IM includes a global address list GAL that includes information pertaining to all members of the enterprise public folders that include information of the enterprise that is shared with all users including shared contact information and shared calendar information personal contacts folders that include corresponding contact information for each member of the enterprise and a user list that includes information of users of the integrated messaging system.

The personal folders may be pushed incrementally including upon detecting an update of information in a personal folder.

The user list may be pushed incrementally including upon detecting an update of information in the user list.

Updated information in the personal folders may be pushed incrementally upon detecting an update of information in a personal folder.

The personal folders include a user contacts folder and wherein the contacts folder is pushed incrementally including pushing the contacts folder to the MCS upon a user initially logging into the MCS wherein the contacts folder is pushed with a timestamp wherein the timestamp is applied prior to accessing the contacts folder for pushing.

Pushing the contacts folder incrementally includes receiving the contacts folder and a timestamp subsequent to the user logging into the MCS including receiving detected updates to the contacts folder.

Pushing the contacts folder incrementally further comprises the MCS receiving the requested contacts folder timestamp and a total number of contacts listed in the contacts folder comparing the received total number of contacts with a cached total number of contacts corresponding to a previous version of the contacts folder and if there is a difference between the two totals requesting the contacts folder to be pushed by the IM to the MCS.

An embodiment of the ICS as described herein further comprises a method for integrated messaging comprising interfacing with a network using an interface module IM the network including a database storing a groupware application and a directory service wherein the directory service stores user information for use in messaging of a first type among client devices coupled to the network pushing the user information with the IM from the database to a messaging communication server MCS wherein the MCS couples to at least one communication network and to the network caching the pushed user information and providing messaging of a second type among the client devices wherein the MCS uses the pushed user information to provide the messaging of a second type.

The messaging of the second type may include voice mail messaging and the MCS may include voice applications. The method may further include detecting changes to the user information using the IM and pushing the detected changes to the MCS.

The voice applications may perform functions including maintaining shared address lists that all voice mail users can view and edit scheduling meetings that include people and conference rooms by viewing associated free or busy schedules sending a new voice mail forwarding a received voice mail exchanging voice mails and corresponding information with the groupware applications and granting people other than a voice mail user access to user voice mailboxes on behalf of the user.

In an embodiment the cache includes a local cache that is local to a certain MCS and a distributed cache that is communicatively coupled among multiple MCSs.

The user information pushed by the IM includes a global address list GAL that includes information pertaining to all members of the enterprise public folders that include information of the enterprise that is shared with all users including shared contact information and shared calendar information and personal contacts folders that include corresponding contact information for each member of the enterprise.

The personal folders are pushed incrementally including upon detecting an update of information in a personal folder.

Updated information in the personal folders may be pushed incrementally upon detecting an update of information in a personal folder.

The personal folders include a user contacts folder and the contacts folder is pushed incrementally including pushing the contacts folder to the MCS upon a user initially logging into the MCS wherein the contacts folder is pushed with a timestamp wherein the timestamp is applied prior to accessing the contacts folder for pushing.

Pushing the contacts folder incrementally includes receiving the contacts folder and a timestamp subsequent to the user logging into the MCS including receiving detected updates to the contacts folder.

Pushing the contacts folder incrementally further comprises the MCS receiving the requested contacts folder timestamp and a total number of contacts listed in the contacts folder comparing the received total number of contacts with a cached total number of contacts corresponding to a previous version of the contacts folder and if there is a difference between the two totals requesting the contacts folder to be pushed by the IM to the MCS.

The components of the ICS described above include any collection of computing components and devices operating together. The components of the ICS can also be components or subsystems within a larger computer system or network. The ICS components can also be coupled among any number of components not shown for example other buses controllers memory devices and data input output I O devices in any number of combinations. Further components of the ICS can be distributed among any number combination of other processor based components.

Aspects of the ICS described herein may be implemented as functionality programmed into any of a variety of circuitry including programmable logic devices PLDs such as field programmable gate arrays FPGAs programmable array logic PAL devices electrically programmable logic and memory devices and standard cell based devices as well as application specific integrated circuits ASICs . Some other possibilities for implementing aspects of the ICS include microcontrollers with memory such as electronically erasable programmable read only memory EEPROM embedded microprocessors firmware software etc. Furthermore aspects of the ICS may be embodied in microprocessors having software based circuit emulation discrete logic sequential and combinatorial custom devices fuzzy neural logic quantum devices and hybrids of any of the above device types. Of course the underlying device technologies may be provided in a variety of component types e.g. metal oxide semiconductor field effect transistor MOSFET technologies like complementary metal oxide semiconductor CMOS bipolar technologies like emitter coupled logic ECL polymer technologies e.g. silicon conjugated polymer and metal conjugated polymer metal structures mixed analog and digital etc.

It should be noted that the various functions or processes disclosed herein may be described as data and or instructions embodied in various computer readable media in terms of their behavioral register transfer logic component transistor layout geometries and or other characteristics. Computer readable media in which such formatted data and or instructions may be embodied include but are not limited to non volatile storage media in various forms e.g. optical magnetic or semiconductor storage media and carrier waves that may be used to transfer such formatted data and or instructions through wireless optical or wired signaling media or any combination thereof Examples of transfers of such formatted data and or instructions by carrier waves include but are not limited to transfers uploads downloads e mail etc. over the Internet and or other computer networks via one or more data transfer protocols e.g. HTTP FTP SMTP etc. . When received within a computer system via one or more computer readable media such data and or instruction based expressions of components and or processes under the ICS may be processed by a processing entity e.g. one or more processors within the computer system in conjunction with execution of one or more other computer programs.

Unless the context clearly requires otherwise throughout the description and the claims the words comprise comprising and the like are to be construed in an inclusive sense as opposed to an exclusive or exhaustive sense that is to say in a sense of including but not limited to. Words using the singular or plural number also include the plural or singular number respectively. Additionally the words herein hereunder above below and words of similar import refer to this application as a whole and not to any particular portions of this application. When the word or is used in reference to a list of two or more items that word covers all of the following interpretations of the word any of the items in the list all of the items in the list and any combination of the items in the list.

The above description of illustrated embodiments of the ICS is not intended to be exhaustive or to limit the ICS to the precise form disclosed. While specific embodiments of and examples for the ICS are described herein for illustrative purposes various equivalent modifications are possible within the scope of the ICS as those skilled in the relevant art will recognize. The teachings of the ICS provided herein can be applied to other processing systems and methods not only for the systems and methods described above.

The elements and acts of the various embodiments described above can be combined to provide further embodiments. These and other changes can be made to the ICS in light of the above detailed description.

In general in the following claims the terms used should not be construed to limit the ICS to the specific embodiments disclosed in the specification and the claims but should be construed to include all processing systems that operate under the claims. Accordingly the ICS is not limited by the disclosure but instead the scope of the ICS is to be determined entirely by the claims.

While certain aspects of the ICS are presented below in certain claim forms the inventors contemplate the various aspects of the ICS in any number of claim forms. For example while only one aspect of the ICS is recited as embodied in machine readable medium other aspects may likewise be embodied in machine readable medium. Accordingly the inventors reserve the right to add additional claims after filing the application to pursue such additional claim forms for other aspects of the ICS.

