---

title: Register file having multiple windows and a current window pointer
abstract: In an arithmetic processing unit adopting register windows, a configuration is made such that the reading process of a register file is controlled by two stages of a current window selection and a register selection, and the register selected at a plurality of reading ports of the register is set to each port in advance such that it will be out-of-order executable. Accordingly, the process of reading the data into an arithmetic section is possible without having a temporary memory, and an instruction subsequent to a window switching instruction is also out-of-order executable.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08539208&OS=08539208&RS=08539208
owner: Fujitsu Limited
number: 08539208
owner_city: Kawasaki
owner_country: JP
publication_date: 20110131
---
This application is a continuation application of International PCT Application No. PCT JP 2008 002172 which was filed on Aug. 8 2008.

The present invention relates to an arithmetic processing unit having a register file with register windows. The present invention involves an arithmetic processing unit which achieves the process of high speed reading from a register without using a temporary memory for the process of high speed reading from a register file and the method thereof.

Processors of RISC Reduced Instruction Set Computer architecture hereinafter referred to as RISC processors center on a register register operation and the acceleration of processing is attempted by reducing the memory access. This is referred to as a load store architecture. RISC processors are provided with a register file having a large capacity for the improvement of the above mentioned register register operation. As such a register file a register file with register windows which is configured to reduce the overhead of passing an argument saving restoring of argument when a subroutine is called is known.

The register file illustrated in has one register window W global and eight register windows W W and the register windows W W are logically linked in a ring shape. The respective register window Wk k 0 7 is provided with the three types of segments Wk out Wk in and Wk local . Three types of segments all consist of eight registers. Wk local is provided with the eight local registers unique to the respective register windows. Wk in is provided with eight in registers and Wk out is provided with eight out registers. Further W global is provided with the eight global registers that are commonly used in all the subroutines.

Wk out is used for passing an argument to the subroutine called by the child routine and Wk in is used for receiving an argument from the parent routine that called the child routine. A configuration is made in the register file such that Wk in and Wk 1 out as well as Wk out and Wk 1 in will overlap and thus when a subroutine is called the process of passing an argument and securing a register used therefor can be accelerated. Wk local is used by each subroutine i.e. a child routine called by the parent routine as a working register set.

Each subroutine uses one of the eight register windows W W at runtime. Here the register window Wk used by the currently running subroutine referred to as current window is configured to rotate by two segments in a clockwise direction the direction indicated by the broken line arrow labeled SAVE every time a subroutine call is caused and to rotate by two segments in a counter clockwise direction the direction indicated by the broken line arrow labeled RESTORE when a subroutine is restored.

In the register file each register window Wk is managed with the respectively assigned register window number hereinafter referred to as window number . A window number k is assigned to register window Wk. The window number k of the register window Wk being used by the currently running subroutine is held by a CWP Current Window Pointer . The value of a CWP is incremented by an execution of a SAVE instruction or by an occurrence of a trap and is decremented by an execution of a RESTORE instruction or by a restoration from a trap by a RETT instruction. In the value of the CWP is 0 and the CWP points at the resister window W. The instructions for switching the current window by incrementing decrementing the value of a CWP as described above are referred to as window switching instruction in the present specification.

The register file illustrated in has one window W global. The W global is a register set that stores the data shared in all the routines.

Each register window Wk is provided with 24 8 3 registers and the register window W global is provided with eight registers. Among those registers 64 8 8 registers of Wk in and Wk out overlap and thus the total number of registers provided for the register file is 136 24 8 8 64 . In order for the functional unit of the processor to run a subroutine it is necessary for the functional unit to be capable of reading and writing the data from to all the registers of the register file .

In such cases the scale and speed of the circuit that reads the data from such a large register file becomes a problem. In order to solve this problem the arithmetic processing unit as illustrated in has been designed.

The arithmetic processing unit illustrated in is comprised of a master register file hereinafter referred to as MRF a working register file hereinafter referred to as WRF an arithmetic section and a control section .

Generally a register file with register windows involves a larger number of registers as the number of the register windows increases and it becomes accordingly difficult to provide an operand to the functional unit at high speed. For this reason in addition to the MRF that is a register file for holding all the windows the WRF is provided as a subset of the MRF for holding a copy of one of the windows of the MRF indicated by the pointer CWP and this WRF performs the data reading. The WRF only holds the copy of the window indicated by the pointer. As the WRF is small compared with the MRF when the WRF reads the data depending on the provided READ ADDRESS which is the address of readout from the control section the process of data reading can be accelerated.

The arithmetic section is provided with the rename register ROB for the MRF and renames the computational result. Further a write back of the computational result is performed from the ROB to the MRF and the WRF when committed.

As described above an arithmetic processing unit as illustrated in has been designed however in such a configuration there is a hardware cost due to the configuration in which a subset of the MRF is provided for holding the copy of one of the windows of the MRF. Furthermore electric power is consumed due to the data transfer between the MRF and the WRF.

When a processor is provided with an out of order executive function the order of executing the instructions is not necessarily in accordance with the program order and the processable instructions are executed first. Therefore it is also desired to achieve the configuration of swapping the execution order in which the register window switching instruction is passed.

It is an object of the present invention in an arithmetic processing unit adopting register windows to reduce the hardware cost associated with the process of reading registers and to eliminate the power consumption associated with the data transfer between working buffers or between buffers. Moreover for the arithmetic processing units provided with an out of order executive function it is necessary to achieve the configuration of swapping the execution order in which the register window switching instruction is passed.

In the present invention the MRF is configured such that the reading process is controlled by two stages a current window selection and a register selection. Further the register selected at a reading port of the register is set to each port in advance such that it will be out of order executable. Accordingly the process of reading the data into the arithmetic section at high speed is possible without having the WRF as a temporary memory and an instruction subsequent to a window switching instruction is also out of order executable.

According to the present invention the hardware cost of a WRF can be reduced while the conventionally achieved performance is almost maintained. Further a reduction in power consumption due to the configuration in which a WRF is not used and a reduction in power consumption due to the configuration in which there is no MRF WRF data transfer can also be achieved.

Hereinafter an embodiment of the present invention in which the process of high speed reading from a register file is achieved in an arithmetic processing unit having a register file with register windows will be described with reference to the drawings.

An arithmetic processing unit is provided with a master register file MRF arithmetic section and a control section . Compared with the arithmetic processing unit of the arithmetic processing unit illustrated in does not include the WRF as a temporary memory. A ROB rename register provided for the arithmetic section performs the renaming of the computational result and performs a write back of the computational result to the MRF when committed WRITE .

In the reading process of the MRF is controlled by the two stages of a current window selection and a register selection. The process of selecting a current window is controlled by a WINDOW ADDRESS signal output from a control section . The WINDOW ADDRESS signal is based on a value of a CWP Current Window Pointer . Moreover the process of selecting a register is controlled by a READ ADDRESS signal output from the control section .

Furthermore as will be described later a configuration is made in advance such that the registers selected by register reading ports are out of order executable. Accordingly in the present embodiment the process of reading the data into the arithmetic section at high speed is possible without having a temporary memory and an instruction subsequent to a SAVE instruction and a RESTORE instruction is out of order executable.

As described above in the present embodiment a WRF is not necessary and thus the hardware cost thereof can be reduced. Further the reduction in power consumption due to the configuration in which a WRF is not used and the reduction in power consumption due to the configuration in which there is no MRF WRF data transfer can also be achieved.

As illustrated in the MRF is provided with eight windows each of which has Wk local Wk in and Wk out k 0 7 and each of Wk local Wk in and Wk out has eight registers. Moreover the MRF is also provided with W global having eight registers independently from the registers in the eight windows each of Wk local Wk in and Wk out. The W global registers are commonly used in all the windows and thus do not influence the window switching therefore the W global registers will not be further described in the following.

More specifically the register group read due to the instruction of CWP 1 consists of W global W local W out and W in W out and the register group read due to the instruction of CWP 2 consists of W global W local W out and W in W out . Accordingly in order to perform out of order execution of an instruction subsequent to the SAVE instruction the register group of W global W local W out W local W out and W out must be readable.

Moreover when a RESTORE instruction is executed instead of the SAVE instruction in order to perform out of order execution of the instruction of CWP 1 the RESTORE instruction and the subsequent instruction of CWP 0 in a similar manner as in both the register group read due to the instruction of CWP 1 consisting of W global W local W out and W in W out and the register group read due to the instruction of CWP 0 consisting of W global W local W out and W in W out must be readable. In other words under these circumstances W global W local W out W local W out and W out must be readable.

Considering the above in order to enable the out of order execution it is to be understood that six ports are required as the ports of the first stage for reading the register from the MRF . Hereinafter these ports are referred to as G PORT global L PORT L PORT OUT PORT OUT PORT and OUT PORT. The group of global registers the group of local registers and the group of out registers are assigned to G PORT L PORT and OUT PORT respectively.

For example when the SAVE instruction subsequent to the instruction of CWP 1 is executed the W global register group W local register group W local register group W out register group W out register group and W out register group are assigned to G PORT L PORT L PORT OUT PORT OUT PORT and OUT PORT respectively.

Summarizing the above the register groups for reading correspond to each port depending on the value of the CWP as shown in .

In for example a notation divided by a forward slash such as W W indicates that the W register group is assigned when out of order execution is performed while a RESTORE instruction is being executed and that the W register group is assigned when out of order execution is performed while a SAVE instruction is being executed.

In as an example the out of order execution when the current CWP is CWP 0 and a RESTORE instruction is subsequently executed is described as follows. As the local register groups are assigned to L PORT and L PORT the local register groups of W local and W local are assigned thereto respectively. Moreover as the out register groups are assigned to OUT PORT OUT PORT and OUT PORT the out register groups of W out W out and W out are assigned thereto respectively.

On the other hand as an example the out of order execution when the current CWP is CWP 0 and a SAVE instruction is subsequently executed is described as follows. The local register groups of W local and W local are respectively assigned to L PORT and L PORT and the out register groups of W out W out and W out are respectively assigned to OUT PORT OUT PORT and OUT PORT. Accordingly at the current window selection as the first stage for reading the register from the MRF the registers selected by the register reading ports based on a WINDOW ADDRESS signal can be assigned based on the operation algorithms that are shown below as rules 1 6. Note that it is assumed that there are 0 1 2 . . . 2n 2n 1 register windows n is an arbitrary natural number . Moreover the CWP next to CWP 2n 1 i.e. CWP 2n 2 returns to CWP 0.

In accordance with rules 1 6 above one register from the register groups of W 2n local is selected for L PORT and one register from the register groups of W 2n 1 local is selected for L PORT in the process of reading at each port. Moreover it is to be understood that one register from the register groups of W 2n out is selected for O PORT one register from the register groups of W 2n 1 out is selected for O PORT and one register from the register groups of W 2n out or W 2n 1 out is selected for O PORT. Then at the register reading ports the registers to be read are selected depending on a WINDOW ADDRESS signal based on a value of the CWP and whether or not a SAVE instruction and a RESTORE instruction are being executed.

A specific configuration of the present embodiment based on the above mentioned principle of the register assignment will be described below in comparison to the conventional configuration. is a diagram illustrating a configuration example of the register window system of the arithmetic processing unit of according to the present embodiment. is a diagram illustrating a configuration example of the conventional register window system.

In the configuration example of the register window system according to the present embodiment as illustrated in from the groups of eight registers output from the four local register groups W local W local W local and W local one group is selected by a selector and is output to L PORT port.

From the groups of eight registers output from the four local register groups W local W local W local and W local one group is selected by a selector and is output to L PORT port.

From the groups of eight registers output from the four local register groups W out W out W out and W out one group is selected by the selector and is output to OUT PORT port. Further one group is selected by the selector and a selector and is output to OUT PORT port.

From the groups of eight registers output from the four local register groups W out W out W out and W out one group is selected by a selector and is output to OUT PORT port. Further one group is selected by the selector and the selector and is output to the OUT PORT port.

The group of eight registers output from the global register group illustrated as GL is output to G PORT port.

From the values of the total of forty eight registers 8 6 48 output to the six ports L PORT L PORT OUT PORT OUT PORT OUT PORT and G PORT each of which includes eight registers one register value is selected by a selector and is output as READ DATA reading data . The ratio 48 1 in the selector indicates that one register value is selected from forty eight registers and is then output.

In the register window system of the present embodiment as illustrated in depending on a WINDOW ADDRESS signal based on a value of the CWP and the execution status of a SAVE instruction or a RESTORE instruction being executed a configuration is made such that selectors can select an output from the register groups in accordance with the above mentioned operation algorithm of rules 1 6. This operation algorithm can be configured by a simple logic circuit. Moreover the READ ADDRESS signal to be provided to the selector may be a signal for selecting one register value from the forty eight registers. A WRITE ADDRESS signal controls a selector to write WRITE DATA writing data into each of the register groups.

As described above in the present embodiment if the WINDOW ADDRESS signal or the data stored in an MRF is unchanged the process of reading data can be performed at a high speed by simple addressing with the WINDOW ADDRESS signal and READ ADDRESS signal. Compared with the conventional configuration as will be described later with reference to a working register file WRF is not necessary and thus the volume of hardware can be reduced. It may be configured that if the WINDOW ADDRESS signal or the data stored in the MRF is changed the data is read from a ROB of .

Next in a configuration example of the conventional register window system of a master register file MRF has the groups of eight local registers shown as W local W local the groups of eight out registers shown as W out W out and the global register group shown as GL . The group of eight in registers of W in W in are shared with the groups of eight out registers of W out and W out W out respectively.

On the other hand a working register file WRF includes a G register group an L register group an IN register group and an OUT register group that respectively hold the eight register values of one selected group of global registers the eight register values of one selected group of local registers the eight register values of one selected group of in registers out registers and the eight register values of one selected group of out registers each of which is output from the MRF at a value of the CWP of the MRF a G L register group for temporarily holding the output values of the current eight registers of one register of local register groups W local W local or global register group GL from the MRF an IO register group for temporarily holding the output values of the current eight registers of one register of out register groups W out W out from the MRF in a similar manner a selector for making a selection from the G L register group IO register group or WRITE DATA writing data such that the register groups of will hold and a selector for selecting one register value from the six register groups of register group i.e. the register groups of forty eight registers 6 8 48 to output the selected register value as READ DATA reading data . The ratio 48 1 in the selector indicates that one register is selected from forty eight registers.

In the conventional register window system of as described above as for the reading process after output from the register groups in the MRF the reading data corresponding to the value of the current CWP in the MRF travels through the G L register group and the TO register group as well as the selector and is always held at the register groups in the WRF . As for the writing process the current writing data in the MRF travels through the selector in the MRF and is held at the register groups in the WRF . Accordingly only by providing the address signal that selects one of the register groups or the register groups and to the selector as READ ADDRESS can the data indicated by the current CWP be read at high speed as READ DATA. Moreover in view of out of order execution etc. the selector is configured such that the outputs of the register groups and that are the current outputs of the MRF can be selected.

In the configuration example of the conventional register window system of the WRF is provided in addition to the MRF and thereby the process of reading data at high speed is achieved. However as discussed above there is a problem in that the hardware configuration becomes large due to the WRF .

Comparing the configuration according to the present embodiment as shown in with the conventional configuration as shown in in view of the above discussion the superiority of the present embodiment should be apparent.

Up to now the configuration of the arithmetic processing unit according to the present embodiment has been described in detail. As discussed above in the arithmetic processing unit according to the present embodiment the process of reading of the MRF of is controlled by two stages of a current window selection WINDOW ADDRESS based on the value of the CWP i.e. the number of the current window and a reading register selection based on the READ ADDRESS corresponding to the reading address. In the current window selection the registers are selected according to a first local register reading port L PORT in which registers are selected from the local register groups whose window numbers are even based on the current window number a second local register reading port L PORT in which registers are selected from the local register groups whose window numbers are odd based on the current window number a first out register reading port OUT PORT in which registers are selected from the out register groups whose window numbers are even based on the current window number a second out register reading port OUT PORT in which registers are selected from the out register groups whose window numbers are odd based on the current window number and a third out register reading port OUT PORT in which registers are selected from the out register groups based on the current window number.

Due to the above described configuration in the arithmetic processing unit according to the present embodiment the process of reading from a register at high speed is realized without using a WRF as temporary memory and an instruction subsequent to the window switching instruction is out of order executable.

Accordingly the hardware cost of the WRF can be reduced. Further the reduction in power consumption due to the configuration in which a WRF is not used and the reduction in power consumption due to the configuration in which there is no MRF WRF data transfer can also be achieved.

In the above an example of the present embodiment is described with reference to the drawings but the present invention may be configured as an information processing unit that is provided with the above described arithmetic processing unit.

In the information processing unit the above described arithmetic processing unit is adopted and integrated and thus the hardware cost and the power consumption can be reduced.

An embodiment of the present invention is described in detail in the above but it should be understood that the present invention is not limited to this embodiment and the present invention may be modified to various configurations or shapes without departing from the spirit and scope of the invention.

