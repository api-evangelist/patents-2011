---

title: Verification of portable consumer devices
abstract: Apparatuses, methods, and systems pertaining to the verification of portable consumer devices are disclosed. In one implementation, a verification token is coupled to a computer by a USB connection so as to use the computer's networking facilities. The verification token reads identification information from a user's portable consumer device (e.g., credit card) and sends the information to a validation entry over a communications network using the computer's networking facilities. The validation entity applies one or more validation tests to the information that it receives from the verification token. If a selected number of tests are passed, the validation entity sends a device verification value to the verification token, and optionally to a payment processing network. The verification token may enter the device verification value into a CVV field of a web page appearing on the computer's display, or may display the value to the user using the computer's display.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08827154&OS=08827154&RS=08827154
owner: Visa International Service Association
number: 08827154
owner_city: San Francisco
owner_country: unknown
publication_date: 20110120
---
This application is a continuation of U.S. patent application Ser. No. 12 712 148 filed Feb. 24 2010 entitled Verification of Portable Consumer Devices which claims priority to U.S. Provisional Patent Application No. 61 178 636 entitled Dynamic Data Authentication filed May 15 2009 the contents of which are hereby incorporated in their entirety by reference for all purposes.

As methods and devices for engaging in financial transactions have increased old problems such as fraud and counterfeiting persist.

One of the primary sources of fraud which is prevalent in the credit card industry is skimming. Skimming refers to the electronic copying of a card s magnetic stripe data to create counterfeit cards.

Skimming is predominantly a phenomenon afflicting static magnetic stripe based transactions. This is because the magnetic stripe which is placed on the back of a transaction card and stores a variety of data on three separate tracks is a passive medium. In other words the digital content of the magnetic stripe can be perfectly copied without any difference between the copy and the original.

One of the primary means by which skimming can be prevented is for the consumer to closely monitor the whereabouts of his transaction card. This may allow the consumer to prevent the card from being swiped through inappropriate devices. However as contactless cards evolve the classic skimming problem comes along with it when using static data. In fact in a wireless environment the opportunity to skim magnetic stripe data is more prevalent. In a wireless environment a potential skimmer need not physically possess the card to be skimmed nor have access to any of the physical equipment e.g. POS terminal communication lines etc. which is required for skimming in a wire based environment. A skimmer can without the knowledge of the consumer or merchant intercept the wireless transaction and copy the data being transmitted from the card to POS terminal.

To address the above problems a dCVV or a dynamic card verification value can be used. For example various systems and methods for generating dCVV s are discussed in U.S. patent application Ser. No. 10 642 878 entitled Method and System for Generating a Dynamic Verification Value filed on Aug. 18 2003 and in U.S. patent application Ser. No. 11 764 376 entitled On Line Payment Transactions filed on Jan. 29 2008. Both of these applications are incorporated herein by reference in their entirely for all purposes.

In addition to generating a dCVV a dCVV can be more effective for preventing fraud when it is securely received by a consumer. However securely receiving and using a dCVV cannot overly interfere with a consumer s experience conducting a transaction. A consumer might not use the dCVV or a consumer might conduct fewer transactions if the inconvenience of receiving and using a dCVV is too great.

Embodiments of the invention are directed to addressing the above problems and other problems individually and collectively.

Apparatuses methods and systems pertaining to the verification of portable consumer devices are disclosed.

One exemplary embodiment of the invention is directed to a verification token for obtaining a device verification value for a portable consumer device. The exemplary verification token comprises a peripheral interface adapted to couple to a peripheral interface of a computer a reader adapted to read identification information from portable consumer devices a computer readable medium a data processor electrically coupled to the peripheral interface of the verification token the reader and the computer readable medium and code embodied on the computer readable medium that directs the data processor to perform various actions. In an exemplary implementation the verification token comprises code that directs the data processor to communicate with a computer by way of the verification token s peripheral interface and to access to a networking facility of the computer code that directs the data processor to establish communications using the networking facility of the computer with an entity that can provide a device verification value e.g. a validation entity or a gateway in communication a validation entity code that directs the data processor to receive identification information read from a portable consumer device by the reader code that directs the data processor to transmit at least a portion of the received identification information to the entity e.g. validation entity or gateway way of the networking facility of the computer and code that directs the data processor to receive after transmitting said identification information a device verification value from the entity by way of the networking facility of the computer. The verification token may send the identification information to the computer in a number of forms including 1 unaltered form clear form 2 encrypted form 3 hashed formed e.g. encoded 4 signed form 5 or any combination of these forms. These forms may be generated by the portable consumer device the verification token the computer or any combination thereof. In addition the verification token and the entity e.g. validation entity or gateway may perform a mutual authentication process before the verification token sends the identification information. As used in the claims the term entity that can provide a device verification value encompasses a validation entity a gateway or any combination thereof.

In one implementation of this exemplary embodiment the above codes and identification information are stored independently of the computer and are secure from programs including spyware and other malicious programs running on the computer. In this implementation the identification information is put in secure form e.g. encrypted hashed signed or combination thereof by the verification token before the information is provided to the computer. Accordingly securing the information is not dependent upon the security of the computer. Symmetric or asymmetric keys may be used for encryption and signing. The keys for a verification token may be unique with respect to other verification tokens. Keys and particularly symmetric keys may be based upon a uniquely assigned serial number for the verification token which the token communicates to the validation entity and or gateway. Both the verification token and the validation entity and or gateway may have a shared secret on how to derive a key from the serial number such as by manipulating and or replacing selected digits of the serial number. A number of keys may be derived from the unique serial number using respective shared secrets. Thus the challenge and response messages used in a mutual authentication process may be signed using respective keys derived from the serial number.

Another exemplary embodiment of the invention is directed to a method of obtaining a device verification value for a portable consumer device. The exemplary method comprises establishing a communications link between a verification token and a computer the computer having a networking facility establishing a communications session between the verification token and an entity that can provide a device verification value e.g. a validation entity and or gateway using a networking facility of the computer reading identification information from a portable consumer device into the verification token transmitting the read identification information from the verification token to the entity e.g. validation entity and or gateway through the communications session and after transmitting the identification information receiving at the verification token a device verification value from the entity e.g. validation entity and or gateway by way of the communications session. The identification information may be transmitted from the token to the computer in a number of forms including 1 unaltered form clear form 2 encrypted form 3 hashed formed e.g. encoded 4 signed form 5 or any combination of these forms. These forms may be generated by the portable consumer device the verification token the computer or any combination thereof. In addition the method may include causing the verification token to authenticate the validation entity and or gateway such as through a mutual authentication process before transmitting the identification information to the validation entity and or gateway.

Another exemplary embodiment of the invention is directed to a method of using a verification token. The exemplary method comprises coupling a verification token to a computer using a peripheral interface of the computer the computer having a networking facility the verification token comprising a peripheral interface adapted to couple to a peripheral interface of a computer a reader adapted to read identification information from portable consumer devices a computer readable medium and a data processor the token being configured to read identification information of a portable consumer device using the reader and to obtain a device verification value therefor from a first entity e.g. a validation entity and or gateway using the networking facility of the computer. The method further comprises presenting a portable consumer device to the reader of the verification token to obtain a device verification value for the portable consumer device and providing the obtained device verification value to a second entity. The second entity may be involved with a transaction between itself and a user of the verification token.

Another exemplary embodiment of the invention is directed to a validation entity that provides device verification values to verification tokens. The exemplary validation entity comprises a computer readable medium a data processor electrically coupled to the computer readable medium and code embodied on the computer readable medium that directs the data processor to perform various actions. The exemplary validation entity further comprises code that directs the data processor to communicate with a verification token over a communications network with a computer disposed between the verification token and the communications network the verification token being coupled to the computer by way of a peripheral interface of the computer and configured to access a networking facility of the computer the verification token being configured to read a portable consumer device for identification information and to cause at least a portion of the identification information to be sent in encrypted form to the validation entity using the networking facility of the computer. The exemplary validation entity further comprises code that directs the data processor to receive encrypted identification information sent by the verification token code that directs the data processor to decrypt the encrypted identification information code that directs the data processor the data processor to apply at least one validation test to the decrypted identification information and code that directs the data processor to transmit if the at least one validation test is passed a device verification value to the verification token. Further embodiments may include transmitting the device verification value to a payment processing network.

Another exemplary embodiment of the invention is directed to a validation entity that provides device verification values to verification tokens. The exemplary validation entity comprises a computer readable medium a data processor electrically coupled to the computer readable medium and code embodied on the computer readable medium that directs the data processor to perform various actions. The exemplary validation entity further comprises code that directs the data processor to communicate with a verification token over a communications network with a computer disposed between the verification token and the communications network the verification token being coupled to the computer by way of a peripheral interface of the computer and configured to access a networking facility of the computer the verification token being configured to read a portable consumer device for identification information and to cause at least a portion of the identification information to be sent to the validation entity using the networking facility of the computer. The verification token also being configured to cause a serial number and an encrypted message to be sent to the validation entity using the networking facility of the computer. The message is encrypted by an encryption key with the serial number and encryption key being uniquely assigned to the verification token. The exemplary validation entity further comprises code that directs the data processor to receive encrypted the serial number the encrypted message and identification information sent by the verification token code that directs the data processor to apply at least one validation test to the serial number and encrypted message and code that directs the data processor to transmit if a selected number of the one or more validation tests are passed a device verification value to the verification token. Further embodiments may include transmitting the device verification value to a payment processing network.

In each of the embodiments described above and in each of the embodiments described below the communications between the computer and the validation entity may be facilitated by and or conveyed through a gateway e.g. a proxy server server entity etc. that is disposed between the computer and the validation entity. The gateway may act as an intermediary between a plurality of verification tokens and their associated computers on the one side and a plurality of validation entities on the other side. The gateway may receive one or more initial communications from a verification token via a computer in communication with the token and may determine from information in the one or more initial communications an appropriate one of the validation entities to use to fulfill the token s request for a device verification value. For example each verification token may be configured to operate with portable consumer devices issued by many different issuing banks or other such entities and one or more of the validation entities may be configured to process requests from portable consumer devices issued by respective issuing banks or other such entities. The gateway may determine an appropriate one of validation entities to use based upon the identification information that the token read from a portable consumer device and sent to the gateway in an initial communication. In one implementation the gateway redirects the token to the determined appropriate validation entity with further communications occurring directly between the verification token and the appropriate validation entity. In another implementation the communications between the verification token and the appropriate validation entity may be conveyed through the gateway after the gateway has initially determined the identity of the appropriate validation entity based upon one or more initial communications with the token . This latter implementation may comprise relatively simple passing through of communications between the token and the appropriate validation entity with minimal processing by the gateway or may comprise having the gateway virtually present itself as the appropriate validation entity to the verification token. Such virtual presentation may involve the gateway decrypting each message from the verification token communicating with the appropriate validation entity to formulate a response to the token s message and encrypting and sending a response message to the verification token. The gateway may also conduct one or more validation tests on behalf of the appropriate validation entity particularly those related to validating the verification token. In this case the gateway does not need to send to the appropriate validation entity those communications it receives from the token that pertain to validation tests that the gateway is handling. The gateway may be associated with or operated by a payment processing network.

Another exemplary embodiment of the invention is directed to a method of validating a portable consumer device presented to a verification token. The exemplary method comprises communicating with a verification token over a communications network with a computer disposed between the verification token and the communications network the verification token being coupled to the computer by way of a peripheral interface of the computer and configured to access a networking facility of the computer. The verification token is configured to read a portable consumer device for identification information and to send the identification information in encrypted form to the validation entity using the networking facility of the computer. The method further comprises decrypting identification information received from the verification token and applying one or more validation tests to the decrypted identification information. The method further comprises transmitting if a selected number of the one or more validation tests are passed a device verification value to the token. Further embodiments may include transmitting the device verification value to a payment processing network.

Another exemplary embodiment of the invention is directed to a method of validating a portable consumer device presented to a verification token. The exemplary method comprises communicating with a verification token over a communications network with a computer disposed between the verification token and the communications network the verification token being coupled to the computer by way of a peripheral interface of the computer and configured to access a networking facility of the computer. The verification token is configured to read a portable consumer device for identification information and to send the identification information to the validation entity using the networking facility of the computer. The verification token is also configured to send a serial number and a message encrypted by an encryption key to the validation entity with the serial number and encryption key being uniquely assigned to the verification token. The method further comprises receiving the serial number encrypted message and identification information from the verification token and applying one or more validation tests to the serial number and encrypted message. The method further comprises transmitting if a selected number of the one or more validation tests are passed a device verification value to the token. Further embodiments may include transmitting the device verification value to a payment processing network.

Another exemplary embodiment of the invention is directed to a method comprising reading identification information from a portable consumer device into a verification token temporarily coupled to a computer through a peripheral interface establishing communications between a verification token and the computer the computer having a networking facility and establishing communications between the verification token and a validation entity using the networking facility of the computer. The verification token may be detachable coupled to the computer. The communications between the verification token and the validation entity may comprise a communications session.

To reiterate the communications between the computer and the validation entity in each of the above embodiment may be conveyed through a server disposed between the computer and the validation entity as described above.

Further details regarding embodiments of the invention are provided below in the Detailed Description with reference to the Figures.

Embodiments disclosed herein pertain to the verification of portable consumer devices. A portable consumer device comprises a device that holds identification information pertaining to an account held by a user with another entity which is typically an entity that holds extends or credits items of value to the user e.g. monetary funds credits debts etc. . Portable consumer devices encompass credit cards charge cards debit cards bank cards prepaid cards access cards security cards and other cards that identify an account held by a user with another entity. The cards are capable of existing in both passive forms e.g. card with a magnetic stripe and active forms e.g. integrated circuit cards smartcards and further encompass portable electronic devices that in whole or in part function as such cards. Such portable electronic devices can include memory cards account tokens fobs stickers cellular telephones including near field communications phone keychain devices such as the Speedpass commercially available from Exxon Mobil Corp. personal digital assistants other mobile electronic devices transponders smart media and pagers.

The identification information held by e.g. embodied on a consumer portable device comprises at least an account number and preferably at least one of the following a digital fingerprint of a magnetic stripe of the portable consumer device or a variable datum that varies each time the portable consumer device is read for its identification information as illustrated in . The magnetic stripe carries at least the account number of the device. The account number may comprise alphanumeric characters. The digital fingerprint of the magnetic stripe is representative of the distribution of magnetic particles that form the magnetic stripe and is generated by a specialized card reader that samples the distribution of magnetic particles when the card is swiped. The variable datum typically comprises number characters but may comprise alphanumeric characters. The values of the variable datum vary in a way that is known to both the portable consumer device and an authorization entity the latter of which may be an issuing bank or a payment processing network. The variable datum encompasses the dynamic CVV dCVV and CVC card verification values generated by smartcards both the contact and contactless forms . The datum values may be pre stored in a computer readable medium of the device and in a computer readable medium of the authorization entity or may be generated by each of the device and the entity as needed e.g. generated on the fly using a confidential algorithm known to the device and the entity or by a known algorithm that uses confidential keys or confidential information. The variable datum may comprise or may be accompanied by a counter value that indicates the number of times the portable consumer device has generated the variable datum the counter value may assist the authorization entity in retrieving the variable datum from the entity s computer readable medium or in generating the variable datum from the algorithm. However a counter value is not necessary and the authorization entity may deduce the number of times the device has generated the variable datum from the history of authorization requests made for the device or an algorithm that does not require a counter may be used.

The identification information may further comprise the name of the account holder e.g. the user the expiration date of the card service codes and discretionary data. As an example the identification information may include the conventional payment data stored on the tracks of the magnetic stripe of a conventional credit card e.g. Track 1 Track 2 and or Track 3 .

The identification information of a portable consumer device is read by a reader which is an electrical component that can read the identification information from a portable consumer device and provide the identification information to another electrical component. A reader may comprise one or more of the following a magnetic stripe reader which may include fingerprint sampling circuitry a card contact reader and a contactless reader the latter of which is commonly known as an RFID reader RFID being an acronym for radio frequency identification . A reader for reading fingerprints of magnetic stripes may include a security module that comprises a proprietary algorithm that generates a digital fingerprint from the sampled fingerprint data and that encrypts the digital fingerprint with a nonce word using an encryption key. Readers are predominantly found at point of sales locations of merchants.

A typical credit card transaction flow using a portable consumer device at a point of sales location is described next. The user s portable consumer device is provided to the user by or on behalf of an issuing bank. The issuing bank extends credit to the user represents the user in credit card transactions and pays merchants for the purchases made by the user. A user presents his or her portable consumer device to a merchant at a point of sales location to pay for an item or service. The merchant uses a reader to read the user s portable consumer device and sends the identification information read from the device along with merchant s information and the transaction amount to an acquiring bank. The merchant may also read the portable consumer device for the printed card verification value e.g. the CVV value printed on the backs of many credit cards and may send this along as part of the transaction information sent to the acquiring bank. The acquiring bank represents and vouches for the merchant in credit card transactions. The acquiring bank forwards the transaction information to a payment processing network such as VisaNet for authorization. A payment processing network generally encompasses a collection of one or more data processing server computers subsystems networks and operations used to support and deliver one or more of the following authorization services exception file services and clearing and settlement services. Payment processing networks encompass bank processing networks credit card payment processing network etc. An exemplary payment processing network may include VisaNet . Exemplary payment processing networks are able to process one or more of the following credit card transactions debit card transactions and other types of commercial transactions. A payment processing network may use any suitable wired or wireless network including the Internet to communicate with acquiring banks and issuing banks.

Prior to the occurrence of a credit card transaction the payment processing network has established a protocol with each issuing bank on how the bank s transactions are to be authorized. In some cases such as when the transaction amount is below a threshold value the payment processing network will authorize the transaction based on information that it has about the user s account without consulting the issuing bank and will accept the liability if the transaction turns out to be fraudulent. In other cases such as when the transaction amount is above a threshold value the payment processing network will forward the transaction information on to the issuing bank for verification and authorization. As part of the authorization process the payment network or the issuing bank may verify the digital fingerprint or the varying datum provided by the portable consumer device. The digital fingerprint is stored at the issuing bank and may be securely provided to the payment processing network by the issuing bank for storage and subsequent use. The algorithm for generating the varying datum is stored at the issuing bank and may be securely provided to the payment processing network for storage and subsequent use. As also part of the authorization process the payment network or the issuing bank may verify the printed card verification value e.g. CVV which is stored at the issuing bank and may be securely provided by the issuing bank to the payment processing network for storage and subsequent use. The degree to which the payment processing network is involved in the verification of the consumer portable device and the authorization of the transaction is typically configured according to the wishes of the issuing bank. Once the transaction is authorized the payment processing network sends an authorization indication to the acquiring bank which sends the authorization indication on to the merchant. In order to reduce fraud merchants are not allowed to store digital fingerprints variable datum and printed card verification values CVVs for more than 24 hours.

When a user wishes to make an online purchase with a merchant over the Internet the user types in the credit card account number cardholder name expiration date and the printed card verification value into respective fields on the merchant s checkout page. In this case the card s magnetic fingerprint or the card s variable datum is not used in the transaction and they are not available to the payment processing network or the issuing bank to aid in verifying that the card was actually present during the transaction. Accordingly there is a greater risk of fraud with such online purchases. For example a store clerk can copy down the account information and printed verification value during a transaction at a point of sales location and can later use the copied information to make an online purchase. As another example a hacker can install spyware on the user s computer to intercept the account information and printed verification value and use it to make fraudulent purchases at other online merchants. Other avenues of potential fraud exist. Embodiments of the invention are directed to mitigating these types of fraudulent activity.

A first validation test that validation entity may apply pertains to verifying that verification token is authentic. For this verification token may send its serial number to validation entity along with a message encrypted by an encryption key with the message and encryption key being known to token and entity but not the general public and with the encryption key further being uniquely assigned to the token s serial number uniquely assigned to the token . Validation entity has a database of serial numbers and corresponding uniquely assigned encryption keys and can validate that verification token has sent the correct message for the serial number. Validation of the correct message serves to authenticate verification token . A second validation test that validation entity may apply pertains to verifying that verification token has not been involved in fraudulent transactions. For this validation entity may also have a database that tracks the serial numbers of verification tokens that have been used in fraudulent activities and may check the serial number of verification token against this database. If the two validation tests are passed e.g. encrypted serial number matches value in database and no fraudulent use validation entity may send a dCVV value to verification token or may apply additional validation tests before sending a dCVV value. Such an additional validation test pertains to checking the digital fingerprint or variable datum of portable consumer device . Validation entity may have a stored record of the digital fingerprint of portable consumer device or the algorithm for generating the variable datum of device and can validate the received identification information by comparing the fingerprint or variable datum provided in the received information with the fingerprint or variable datum that it obtains from its stored record for device . If the additional validation test is passed validation entity may send a dCVV value to verification token . The additional validation test may be performed in addition to or instead of the previously described validation tests.

The dCVV value provided by validation entity comprises a variable datum e.g. a multi digit number and is used by the user to complete the purchase transaction. Verification token may display the dCVV value to the user so that the user may enter the dCVV value into CVV field of the checkout page of the merchant s website or verification token may enter the dCVV value directly into the CCV field of the merchant s checkout page. After the dCVV value has been entered into the CVV field the user may complete the purchase. This form of the dCVV value enables it to work within existing payment processing systems and flows. The merchant s website then uses the dCVV value for the CVV in its authorization request for the purchase. The authorization request is sent to acquiring bank which then forwards it to payment processing network for authorization. Through a separate channel validation entity may send the dCVV value to payment processing network and or issuing bank along with the account information e.g. account number so that the merchant s authorization request can be processed. This serves to notify payment processing network and or issuing bank that a dCVV value for portable consumer device was requested and provided to a merchant and to expect the merchant to provide the dCVV value in an authorization request for the account.

Payment processing network can compare incoming authorization requests from merchants such as forwarded by acquiring banks against the information it receives from validation entity such as by looking at account numbers and can match e.g. correlate incoming authorization requests with validation information sent by validation entity . If a match is found payment processing network has a high degree of assurance that consumer portable device was in the possession of user at the time the purchase transaction was made. This provides a greater degree of assurance in comparison to the reliance on CCV values printed on the backs of credit cards. Payment processing network and issuing bank can then undertake the other actions that they perform to authorize the transaction such as checking whether the merchant is in good standing and checking the account limit of user to ensure that there are sufficient funds to cover the purchase amount of the transaction. In this case payment processing network does not need to validate the digital fingerprint and or the variable datum of the portable consumer device if those actions have been done by validation entity . Payment processing network may however perform those validation actions for merchant point of sales transactions. 

Embodiments and components shown in are now described in greater detail. The user s computer may comprise a desktop computer a laptop computer or any portable electronic device that has a networking facility and a peripheral interface for communicating with one or more peripheral devices. Computer has one or more processors a tangible computer readable medium coupled to processor s that stores instruction codes software that direct processor s and that stores data used by processor s and a user interface coupled to processor s . Networking facility and peripheral interface which were previously described above are also coupled to processor s with networking facility also being coupled to first communications network . User interface comprises one or more video output devices e.g. displays screens and one or more input devices e.g. keyboard mouse trackball etc. for user to receive information from computer and to provide input to computer . Computer readable medium may comprise a combination of semiconductor memory and non volatile storage such as one or more disk drives and or non volatile memory. Computer readable medium stores an operating system for computer which enables processes and applications to be run by processor s . The operating system provides services to these processes and applications and enables these processes and applications to access components of user interface portions of computer readable medium networking facility peripheral interface and other components of computer . The operating system may be complex and full featured such as found on desk top computers or simplified such as found on cell phones PDAs and many other types of portable electronic devices.

Networking facility of computer may comprise software and hardware that enable a process running on computer to communicate with a communications network such as network to send and receive messages data and the like to one or more entities coupled to the communications network. The hardware of facility may comprise dedicated hardware separate from processor s or the shared use of processor s or a combination thereof. The software of facility may comprise firmware software stored in computer readable medium or another computer readable medium portions of the operating system or a combination of any of the preceding items. Networking facility is preferably a non exclusive resource allowing access to the communications network by other processes and applications being run by computer . Peripheral interface of computer comprises a wired or wireless connection that enables a peripheral device separate from computer to communicate with the computer. Conventional wired connections include universal serial bus USB connectors USB ports serial ports parallel ports and PCMCIA ports. Conventional wireless connections include infra red IR base stations and Bluetooth base stations that are built into computer or that are coupled to a peripheral interface of computer .

In addition to reader and peripheral interface described above verification token further comprises a processor a tangible computer readable medium coupled to processor holding data and codes that direct the operation of processor a security module coupled to processor and adapted to securely store one or more encryption keys and to encrypt and decrypt data for token a reader coupled to processor and adapted to read portable consumer devices and a peripheral interface coupled to processor and adapted to communicate to computer by way of peripheral interface . Processor may comprise a conventional microprocessor and computer readable medium may comprise a combination of semiconductor memory and non volatile storage such non volatile memory. illustrates an exemplary implementation of computer readable medium which include the storage of several datum elements described in greater detail below processor codes that direct the operation of processor and processor memory which processor may use in carrying out its tasks. Referring back to security module may comprise encryption and decryption circuitry which may include one or more processors and may comprise one or more encryption keys stored in a secured memory. Security module may also include firewall security circuitry that protects verification token from attacks from hackers conducted through peripheral interface . Reader may comprise a convention reader as described above. Peripheral interface may comprise a wired or wireless connection adapted to communicate with peripheral interface of computer . As indicated above conventional wired connections include universal serial bus connectors USB ports serial ports parallel ports and PCMCIA ports. Conventional wireless connections may include infra red and Bluetooth remote stations. When using a conventional wired connection with peripheral interface verification token may be detachably coupled to computer at peripheral interface such as at a USB port connector. illustrates an exemplary verification token with a USB port connector male type as part of its peripheral interface . Also illustrate in is computer its peripheral interface having a USB port connector female type to which USB connector is plugged into the user interface of computer e.g. screen and keyboard the user s portable consumer device RFID type card user and the presentation of a dCVV value on user interface .

Referring back to verification token further comprises various codes embodied on computer readable medium that direct data processor to perform respective actions e.g. processor codes shown in . A first code directs data processor to communicate with computer by way of peripheral interface so as to gain access networking facility of computer . The first code may comprise code that directs data processor to send a device driver to computer and an instruction to install the device driver in the computer s operating system wherein the device driver is a collection of instructions to be run by computer that enables computer to recognize the verification token and communicate with the verification token and enables the token s data processor to make function calls to various API of the computer s operating system such as those related to networking and accessing networking facility . So called self installing drivers are known to the art and can be used here. They comprise one or more function calls to an application programming interface API of the computer s operating system such as the device manager s API. The first code may be configured to work with a selected operating system such as Windows or Symbian OS or may be configured to work with several operating systems. In the latter case the first code may include several device drivers for the various operating systems and instructions that query computer for its operating system type and select and install the driver most appropriate for the computer s operating system. The device drivers may be stored in a section of computer readable medium as illustrated in the example of .

Referring back to a second code of verification token directs data processor to receive identification information read from portable consumer device by the reader . The second code may include code that directs the data processor to receive a universal resource identifier URID of a validation entity as read from portable consumer device by the reader . These instructions may include conventional I O instructions that direct the communications with reader . Different portable consumer device may store and provide different URID s to different validation entities . A uniform resource identifier URID may comprise a uniform resource locator URL an Internet protocol address IP address or any other type of identifier that can identify an entity on a communications network. If a portable consumer device does not provide a URID to validation entity verification token may store a URID to a default validation entity . In some configurations some verification tokens may be co branded with respective issuing banks and only work for portable consumer devices that are co branded with the same issuing banks and each issuing bank may have its own validation entity with its own URID. In such a configuration these verification tokens may store the URIDs to their respective co branded validation entities . Instead of or in addition to this configuration some verification tokens may be associated with respective payment processing networks and each such network may have its own validation entity . In such a configuration these verification tokens may store the URIDs to their respective associated validation entities . Accordingly the second code of verification token may be further configured to direct data processor to only use a default URID stored by token or to use a default URID if consumer portable device does not provide token with a URID to entity . As yet another implementation verification token may include code that directs processor to select one of a number of URIDs stored in token based on a bank number provided in the identification information or embedded in the account number. The above further direction and codes may be implemented with conventional I O instructions memory access instructions and CPU logical and control instructions. One or more URIDs to validation entities may be stored in computer readable memory as illustrated in the example shown in .

Referring back to A third code of verification token directs data processor to establish communications with validation entity using networking facility of computer . The operating system of computer comprises one or more software modules and application programs generically called network services modules herein that can access networking facility and set up communication sessions to entities on communications network . Such network services modules include Microsoft s Windows Communications Foundation e.g. .NET 3.0 .NET 4.0 etc. Apple s CFNetwork Framework the networking section of the Unix and Linux operating system kernels the OS Services Layer and the Base Services Layer of the Symbian operating system Internet browsers and the like. Each of these network services modules is non exclusive e.g. capable of serving more than one processor and more than one process application and provides an application programming interface API to a collection of functions that a processor can access using respective function calls. With these API facilities a collection of function calls can be readily constructed for a processor to execute that enables the processor to establish a communications channel with an entity on a communications network coupled to networking facility and to exchange messages and data with the entity. The third code of verification token comprises such a collection of function calls to the API of a network services module of computer including one or more function calls that provide the universal resource identifier URID for validation entity and an instruction to establish a session with the validation entity. The session may be a secure socket layer or secure transport layer session e.g. SSL session with mutual authentication. As part of establishing the session in some implementations the third code of verification token may include directing data processor to provide or to cause to be provided a network address for the token to the computer s network services module and to validation entity . The network address may be static or dynamic the latter of which may be obtained through API function calls to the computer s network services module. The network address may an by IP address.

If token wishes to use an Internet browser for a network services module it may further comprise API function calls to the computer s operating system to initiate an instance of the browser and provide it with access to the browser instance. In some implementations such as when verification entity stores the URID of validation entity the third code may direct the data processor to establish communications with validation entity well before user presents consumer portable device to reader . Verification and validation may keep the communication session active until device is presented to reader and between times that device is presented to reader by intermittently exchanging heartbeat messages. For example verification token may periodically aperiodically or randomly send messages to validation entity confirming its presence in the session and validation entity may send a reply message confirming its presence in the session.

A fourth code of verification token directs the data processor to transmit at least a portion of identification information to validation entity by way of networking facility of computer wherein the identification information is transmitted in encrypted form. If an SSL session has been established the fourth code may direct data processor to pass the identification information to the computer s network services module using appropriate function calls to the API for the network services module and the identification information may be transmitted in the SSL session where the transmitted and received data are encrypted by a session key. For an additional layer of security the fourth code may further comprise code that directs processor to encrypt the identification information with the help of security module using an encryption key stored in token before providing it to networking facility . These instructions may include conventional I O instructions that direct the communications with security module to pass the identification information to module and to receive back the encrypted information. An encryption key for this may be stored in computer readable medium or in security module .

A fifth code of verification token directs data processor to receive after transmitting said identification information a device verification value e.g. dCVV value from validation entity by way of networking facility of computer . This code may comprise function calls to the API of the computer s network services module to retrieve data sent by entity in the session. The dCVV value may be encrypted by validation entity in which case the fifth code of verification token may further direct data processor to decrypt the encrypted value such as by using security module with input output instruction calls to module . The fifth code may include code that directs data processor to display the received dCVV value to user such as by way of the user interface of computer or a miniature LCD screen or the like integrated with verification token . In the former case this code may comprise API function calls to the graphical user interface of the operating system of computer to open a display box on user interface to display the dCVV value in alphanumeric and or graphical form. In the latter case this code may comprise I O instructions to the miniature LCD screen or the like. In another implementation verification token may insert the received dCVV value in the CVV field of the merchant purchase page. In this case the fifth code may further include code that directs data processor to locate a browser session on the computer that has a form field for a device verification value and to fill the field with the device verification value received from the validation entity. This can include function calls to the API of the Internet browser to search the active web page or all open web pages for an input field marked as CVV and to input the dCVV value into the CVV field.

In some configurations validation entity may provide a dynamic account number often called a dPAN in the art along with the dCVV value. For these configurations the fifth code may be augmented to receive the dPAN along with the dCVV value and to display the dPAN value to user or to fill the value into an account field of the merchant purchase page and include instructions similar to those described above for processing the dCVV value. Specifically the fifth code may further include code that directs data processor to display the received dPAN value to user such as by way of the user interface of computer or a miniature LCD screen or the like integrated with verification token . In the former case this code may comprise API function calls to the graphical user interface of the operating system of computer to open a display box on user interface to display the dPAN value in alphanumeric and or graphical form. In the latter case this code may comprise I O instructions to the miniature LCD screen or the like. In another implementation verification token may insert the received dPAN value in the account field of the merchant purchase page. In this case the fifth code may further include code that that directs data processor to locate a browser session on the computer that has form fields for an account number and device verification value e.g. CVV field and to fill the account field with the dPAN value and the device verification value field with the dCVV value received from the validation entity. This can include function calls to the API of the Internet browser to search the active web page or all open web pages for an input fields marked as account number or credit card number and CVV and to enter the dPAN value into the account number field and the dCVV value into the CVV field.

The use of function calls to various application programming interfaces APIs of the operating system of computer its support modules facilities and its applications is well known to the software art and one of ordinary skill in the art will be able to construct instructions and API function calls to implement the above described codes and tasks in view of this disclosure without undue experimentation.

As indicated above validation entity may use a first validation test to validate verification token . For this verification token may send its serial number to validation entity along with a message encrypted by an encryption key with the message and encryption key being known to token and entity but not the general public and with the encryption key further being uniquely assigned to the token s serial number. Validation entity has a database of serial numbers and the corresponding uniquely assigned encryption keys or stored algorithms for generating said keys and can validate that verification token has sent the correct message for the serial number. For this verification token may comprise a serial number and unique encryption key embodied in a computer readable medium the unique encryption key being unique to verification token see for an exemplary implementation Serial Number and Datum for Encrypted message and code that directs data processor to send the serial number and a message encrypted by the unique encryption key to validation entity . The message may be pre stored on the computer readable medium e.g. stored in Datum for Encrypted message in or derivable from information known to both verification token and validation entity such as a message derived from an algorithm applied to the current date serial number of token and or session key of the communication session between token and entity . In this manner the message sent by token to validation entity is verifiable by validation entity using information stored at the validation entity. The computer readable medium for the above tasks may be located in computer readable medium and or security module . The above codes may include I O instructions to security module and function calls to the API of the computer s network services module.

As an option verification token may send from time to time one or more pieces of machine unique information of computer to validation entity which may check this information against a database of computer information associated with known fraudsters. Such machine unique information may include the serial numbers of processors disk drives and operating systems of computer . Verification token may comprise code that directs data processor to obtain one or more pieces of machine unique information from computer and to send the machine specific information to validation entity . This code may include function calls to the API of the computer s operating system to obtain the information and function calls to the API of the computer s network services module to send the information to validation entity .

As another option verification token may be configured to prompt user for a password to activate one or more features of token . The password may be stored on a computer readable medium located in security module or in computer readable medium see for an exemplary implementation of the latter . The password may be provided to user on a piece of paper by the provider or seller of token . Token may be sent to user through the mail by or on behalf of an issuing bank or may be purchased by user in a store. Token may be configured to require that the password be entered each time the user wishes to present a consumer portable device and or each time token is coupled to a computer . For this verification token may further comprise code embodied on computer readable medium that directs data processor to prompt the user to enter a password on a keyboard of computer to read a password entered by the user and to compare the entered password against a stored password embodied on the computer readable medium. This code may comprise API function calls to the graphical user interface of the operating system of computer to open a display box on user interface to request and receive a password from user I O instructions memory access instructions and CPU logical and control instructions. Verification token may further comprise one or more of the following 

 1 code embodied on computer readable medium that directs data processor to initiate and or allow the above described communications with computer in response to an entered password matching the stored password 

 2 code embodied on computer readable medium that directs data processor to initiate and or allow the above described communications with validation entity in response to an entered password matching the stored password 

 3 code embodied on computer readable medium that directs data processor to activate reader and or to accept identification information from reader in response to an entered password matching the stored password and

 4 code embodied on computer readable medium that directs data processor to initiate and or allow the above described transmission of identification information to validation entity in response to entered password matching the stored password.

These codes may be done with I O instructions memory access instructions and CPU logical and control instructions. They alone or in combination prevent the transmission of identification information to entity when the entered password is not the same as the stored password and thereby comprise code embodied on the computer readable medium that directs the data processor for doing so. One of ordinary skill in the art will be able to construct the instructions and API function calls to implement the above described codes in view of this disclosure without undue experimentation. As further protection validation token may further comprise code embodied on computer readable medium that directs data processor to establish a user name for the token by presenting user with a dialog box to receive input designating a username and by storing the username in computer readable medium example shown in . The above codes for processing the password may be further augmented to include requesting a username for the token and comparing the received username with the stored username for a match and including a match as a condition that must be met in each of the four above codes that initiate or allow various actions to be done. These codes may be done with I O instructions memory access instructions and CPU logical and control instructions.

In further implementations As further protection validation token may further comprise code embodied on computer readable medium that directs data processor to establish one or more shipping addresses in the token that token can use to fill into form fill locations of a merchant page. Each shipping address may be associated with a portable consumer device. The code may direct processor to present a series of dialog boxes to the user by way of the computer s user interface to receive the shipping address and the account number or last four digits thereof of the portable consumer device that is to be associated to the shipping address and to store the information in a computer readable medium such as medium as illustrated by the example shown in . Token may further comprise code embodied on computer readable medium that directs data processor to access the shipping information in response to a request being sent to validation entity the shipping information may be selected among many stored address based on the account number sent in the request and to fill the shipping information into appropriate locations of a merchant checkout page such as when a dCVV value is received back from validation entity . The code may be configured to direct processor to only fill in the shipping information when the locations for the information on the merchant checkout page are blank. The filling code may be further configured to direct data process to use shipping information stored on portable consumer device when shipping information is not store in token for the account number of device and further if the locations for the shipping information on the merchant checkout page are blank. The filling code may include code that directs data processor to locate a browser session on the computer that has a form fields for shipping information and or a device verification value and to fill the shipping fields with the selected shipping information. This can include function calls to the API of the Internet browser to search the active web page or all open web pages for an input field marked as name address city zip code and CVV and to input the datum of the selected shipping information into the appropriate fields. The above codes may be implemented with API function calls I O instructions memory access instructions and CPU logical and control instructions.

In each of the embodiments described herein pertaining to verification token token may send the identification information pertaining to portable consumer device to computer in a number of forms including 1 unaltered form clear form 2 encrypted form 3 hashed formed e.g. encoded 4 signed form 5 or any combination of these forms. These forms may be generated by portable consumer device verification token computer or any combination thereof. In addition verification token and validation entity may perform a mutual authentication process before verification token sends the identification information.

In each of the embodiments described herein pertaining to verification token the above codes of token and the identification information read from device by token may be stored independently of computer and may be secure from programs including spyware and other malicious programs running on computer . In such implementations the identification information is put in secure form e.g. encrypted hashed signed or combination thereof by verification token before the information is provided to computer . Accordingly securing the information is not dependent upon the security of computer . Symmetric or asymmetric keys may be used for encryption and signing. The keys for a verification token may be unique with respect to other verification tokens that is the keys for a token may be unique to that token . Keys for a token and particularly symmetric keys may be based upon a uniquely assigned serial number for the verification token which the token can communicate to validation entity in an initial communication. Both the verification token and the validation entity may have a shared secret on how to derive a key from the token s serial number such as by manipulating and or replacing selected digits of the serial number. A number of keys may be derived from the unique serial number using respective shared secrets. Thus the challenge and response messages used in a mutual authentication process between a verification token and a validation entity may be signed using respective keys derived from the serial number of the verification token.

Having described various embodiments and implementations of verification token various embodiments and implementations of validation entity are now described. Validation entity comprises a system having one or more servers coupled to a communications network that can receive a request from a verification token to process e.g. to validate the identification information that the token has read from a portable consumer device and to provide a device verification value dCVV to the token and to payment processing network if the identification information passes one or more validation tests. One of the servers of entity is shown in the server comprises one or more processors electrically coupled to each of a tangible computer readable medium a user interface one or more databases and a networking facility the latter of which is coupled to first and second communications networks and . User interface comprises one or more video output devices e.g. displays screens and one or more input devices e.g. keyboard mouse trackball etc. which enable an administrator of entity to receive information from the server and to provide input to the server. Computer readable medium may comprise a combination of semiconductor memory and non volatile storage such as one or more disk drives and or non volatile memory.

Computer readable medium stores an operating system for the server which enables processes and applications to be run by processor s and enables codes for directing the operation of processor s to be run. The operating system provides services to these processes and applications and enables these processes and applications to access components of user interface portions of computer readable medium networking facility and other components of entity . The operating system may be full featured. Specifically the operating system provides one or more I O communications modules that enable processor s to communicate with user interface and databases . Each I O communications module has an application programming interface API with a collection of functions that a processor can call in order to access the components. The operating system of entity also comprises one or more network services modules that can access networking facility and set up communication sessions to entities on communications networks and and with SMS relay server . Such network services modules include Microsoft s Windows Communications Foundation e.g. .NET 3.0 .NET 4.0 etc. Apple s CFNetwork Framework the networking section of the Unix and Linux operating system kernels and the OS Services Layer and the Base Services Layer of the Symbian operating system and the like. Each of these network services modules can be non exclusive e.g. capable of serving more than one processor and more than one process application and each provides an application programming interface API which has a collection of functions that a processor can call in order to manage communications with another entity. With these API facilities a collection of API function calls can be readily constructed for a processor to execute that enables the processor to establish a communications channel with an entity on a communications network coupled to networking facility and to exchange messages and data with the entity. The above operating system modules and APIs all include instructions that direct the operation of processor s .

One or more databases may be configured as database servers which processor s can access via networking facility over a private communications network which is illustrated by the dashed line in . Validation entity conventionally has a clock for tracking time and dates for various applications. Clock may be a simple counter of seconds or fractions thereof that can be read by processor by an I O operation or may comprise a more complex arrangement of hardware or firmware that can provide the various components of the current date and time year month day hour minute and second in various registers that can be read by processor through the execution of one or more I O operations.

Validation entity can process identification information transmitted from a plurality of different verification tokens e.g. millions of tokens and can process any number of transmissions by a particular token . Validation entity applies one or more validation tests to verification token and or the identification information to obtain a level of confidence that the portable consumer device was actually presented to verification token to request the dCVV value. When the one or more validation tests are passed and preferably when none of the tests are failed validation entity sends a dCVV value to verification token and optionally to payment processing network along with the account number present in the identification. For these tasks validation entity may comprise code embodied on computer readable medium that directs data processor to communicate with computer and verification token using networking facility over communications network . This code may include instructions that establish a communications session with computer including the option of establishing an SSL session with mutual authentication and encryption based on a triple DES algorithm and instructions for sending and receiving messages to verification token through the communications session. Validation entity may further comprise code embodied on computer readable medium that directs data processor to receive encrypted identification information sent by verification token and code that directs data processor to decrypt the encrypted identification information. The identification information may be encrypted by a session key of an SSL session or by an encryption key stored in verification token and known to validation entity or may be doubly encrypted by both keys. The latter key may be uniquely assigned to the token. Validation entity may further comprise code embodied on computer readable medium that directs data processor to apply one or more validation tests as previously described above and to send the dCVV value to token and to optionally send the dCVV value and account number to payment processing network if a selected number of validation tests are passed. Data processor may access databases in performing the one or more validation tests. The validation tests and codes therefore are described below in greater detail These codes and codes described below for validation entity may be implemented in any number of programming languages. Furthermore one of ordinary skill in the art will be readily able to construct instructions to implement these codes in view of this disclosure without undue experimentation.

As described above a first validation test that validation entity may apply pertains to verifying that verification token is authentic. For this verification token may send its serial number to validation entity along with a test message encrypted by an encryption key with the test message and encryption key being known to token and entity but not the general public and with the encryption key further being uniquely assigned to the token s serial number. Validation entity may access a database of token serial numbers and corresponding uniquely assigned encryption keys in one of databases and may determine whether verification token has sent a correct test message for the serial number that the token provided. The test message may be fixed or variable in the latter case it may be generated based on information known to both token and entity . The test message may be encrypted and decrypted by a triple DES algorithm which can be implemented by a number of well known sets of computer instructions. If the sent test message is correct the first validation test can be deemed to have been passed. For this validation entity may comprise code embodied on computer readable medium that directs data processor to receive one or more messages from verification token via networking facility that has the token s serial number and encrypted test message code that directs data processor to decrypt the encrypted test message code that directs data processor to obtain one or more acceptable messages that can be accepted as the correct test message from one of databases and code that directs data processor to compare the decrypted test message to the one or more acceptable messages to determine if the first validation test has been passed in the case of a match between the decrypted test message and an acceptable message or has been failed in the case of no such match . An acceptable message may be obtained by accessing it directly from one of databases or by generating it from information stored in one or more of databases . The above codes can be implemented with conventional I O instructions API function calls to databases memory access instructions CPU arithmetic and logic instructions and CPU control instructions. In view of this disclosure the codes may be implemented by one of ordinary skill in the art without undue experimentation.

As a second validation test validation entity may have a database in databases that tracks the serial numbers of verification tokens that have been used in fraudulent activities and validation entity may check the serial number of verification token against this database. If a check of this database indicates that verification token has not been involved in fraudulent activity the second validation test can be deemed to have been passed. To assist in tracking fraudulent activity back to a verification token validation entity may send the serial number of token along with the dCVV value and account number that it sends to payment processing network . If network later finds out that the transaction processed with the account number provided by token was fraudulent it can send a message to that effect to validation entity and entity may then enter the serial number of the token into the database of tokens used in fraudulent activities. To implement the second validation test validation entity may comprise code embodied on computer readable medium that directs data processor to receive a message from verification token via networking facility that has the token s serial number code that directs data processor to have the received serial number compared with serial numbers stored in a database of databases that stores serial numbers of tokens used in fraudulent transactions to determine if the second validation test has been passed no fraudulent activity or has been failed fraudulent activity . The above codes can be implemented with conventional I O instructions API function calls to databases memory access instructions CPU logic instructions and CPU control instructions. In view of this disclosure the codes may be implemented by one of ordinary skill in the art without undue experimentation.

As a third validation test validation entity may send a message to verification token requesting that token send it one or more pieces of computer specific information about computer such as the serial numbers of one or more of the following the computer s processor one or more of the computer s disk drives the computer s operating system. Validation entity may receive this information and check it against a database storing computer specific information of computers known to have been involved in fraudulent activity. If a check of this database indicates that the computer used by verification token has not been involved in fraudulent activity the third validation test can be deemed to have been passed. To assist in tracking fraudulent activity back to computer validation entity may send the serial number of token and the computer specific information along with the dCVV value and account number that it sends to payment processing network . If network later finds out that the transaction processed with the account number provided by token was fraudulent it can send a message to that effect to validation entity and entity may then enter the serial number of the token into the database of tokens used in fraudulent activities and the computer specific information into the database of computers known to have been involved in fraudulent activity. To implement the third validation test validation entity may comprise code embodied on computer readable medium that directs data processor to send a message to verification token requesting computer specific information if verification token has not sent such information beforehand without prompting code that directs data processor to receive one or more data messages from verification token via networking facility that have the token s serial number and the computer specific information and code that directs data processor to have the received computer specific information compared with computer specific information stored in a database of databases that stores computer specific information of computers used in fraudulent transactions to determine if the third validation test has been passed no fraudulent activity or has been failed fraudulent activity . The above codes can be implemented with conventional I O instructions API function calls to databases memory access instructions CPU logic instructions and CPU control instructions. In view of this disclosure the codes may be implemented by one of ordinary skill in the art without undue experimentation.

By conducting one or more of the above three validation tests validation entity can obtain some degree of confidence that the identification information sent by token is valid and can in some implementations provide the dCCV value to token and payment processing network . In this case verification token does not need to send the digital fingerprint or the variable datum of the portable consumer device in the identification information and does not need to obtain these datum from device .

To increase the degree of confidence validation entity may perform a fourth validation test that compares a digital fingerprint received in the identification information if present with the stored copy of the digital fingerprint that entity has for the account number specified by the identification information. If the digital fingerprints match to an acceptable degree e.g. the degree of similarity of the two fingerprints being above a selected level of similarity validation entity can deem the fourth validation test as being passed. The degree of similarity between the two fingerprints may be assessed by applying a correlation function to the two fingerprints. Such correlation functions are well known to the art. Before receiving identification information for a portable consumer device from a token the issuing bank for the device may provide validation entity with the digital magnetic fingerprint of the device which entity may store in one of databases . When validation entity receives identification information from a verification token for a specific portable consumer device it accesses databases for its record of the digital fingerprint and compares the received fingerprint against its record of the fingerprint to assess a degree of similarity and to determine if the fourth validation test has been passed e.g. the degree of similarity between the two fingerprints is above a selected level or has been failed e.g. the degree of similarity between the two fingerprints is below the selected level . To implement the fourth validation test validation entity may comprise code embodied on computer readable medium that directs data processor to obtain the stored digital fingerprint for the account from one of databases and code that directs data processor to compare the received digital fingerprint and the stored digital fingerprint for similarity to determine if the forth test is passed sufficient similarity or failed not sufficient similarity . The latter code may comprise code that directs data processor to generating a value representative of the similarity between the two fingerprints by applying one or more correlation functions to the fingerprints and comparing the value against a selected level. Such correlation functions also known as probabilistic models are known to the credit card art. The above codes can be implemented with conventional I O instructions API function calls to databases memory access instructions CPU arithmetic instructions CPU logic instructions and CPU control instructions. In view of this disclosure the codes may be implemented by one of ordinary skill in the art without undue experimentation.

To also increase the degree of confidence over that provided by the first three validation tests described above validation entity may perform a fifth validation test that compares a variable datum e.g. CVC or dCVV received as part of the identification information if present with the value or a set of acceptable values for the variable datum that validation entity has for the account number provided as part of the identification information. If the values match validation entity can deem the fifth validation test as being passed. There are number of ways that the variable datum can be configured to vary with time. As some examples the variable datum can be configured to have its value vary with each use of portable consumer device and device can provide a counter value in the datum or along with the datum. Validation entity or a payment processing network can use the counter value to determine what value the variable datum should have for the given counter value. This determination may be done based on an algorithm that is a function of the counter value and or other possible variables or a look up table whose entries are correlated to the counter value the table may be cyclically repeated . The algorithm may comprise one or more random number generators each of which accepts a starting seed value whose value can be selected to customize the algorithm to a particular portable consumer device . The values of the look up table may be based on the output of the algorithm. The variable datum may also be based on time date or other information known to both verification token and entity which may or may not use a counter value. Additional ways of generating the values of a variable datum are discussed in U.S. patent application Ser. No. 10 642 878 entitled Method and System for Generating a Dynamic Verification Value filed on Aug. 18 2003 and in U.S. patent application Ser. No. 11 764 376 entitled On Line Payment Transactions filed on Jan. 29 2008. Both of these applications are incorporated herein by reference in their entirely for all purposes. In some implementations there may be slight differences in the starting information that device and entity use in generating their respective datum values such as differences in the times of their clocks and entity may generate a set of acceptable datum values based on possible slight differences in the starting information and may compare the datum value received from device with each member of the set to determine if a match exists.

Before receiving identification information for a portable consumer device from a token the issuing bank for the device may provide validation entity with the look up table algorithm including any seed values or other data elements that the device uses to generate the device s variable datum e.g. CVC or dCVV which entity may store in one of its databases . When validation entity receives identification information from a verification token for a specific portable consumer device it accesses its record of the look up table algorithm or other data elements for the specific device to determine its value or set of values for the device s variable datum and compares the received value for a variable datum e.g. CVC or dCVV against its value or set of acceptable values for the variable datum to determine if the fifth validation test has been passed e.g. a match in values is found or has been failed e.g. a match has not been found . To implement the fifth validation test validation entity may comprise code embodied on computer readable medium that directs data processor to access the one or more stored data elements used to obtain the variable datum for the account from one of databases code that directs data processor to obtain one or more acceptable values for the variable datum from the one or more stored data elements and code that directs data processor to compare the received variable datum and the one or more acceptable values for a match to determine if the forth test is passed a match is found or failed a match is not found . The code that directs data processor to obtain one or more acceptable values may be based upon the look up table method described above or any of the algorithm based methods described above. The above codes can be implemented with conventional I O instructions API function calls to databases memory access instructions CPU arithmetic instructions CPU logic instructions and CPU control instructions. In view of this disclosure the codes may be implemented by one of ordinary skill in the art without undue experimentation.

Validation entity may be configured to perform one or more of the above validation tests and may be configured to send a dCCV value to verification token and payment processing network if one or more of the tests are passes. Validation entity may comprise code embodied on computer readable medium that directs data processor to execute a selected one or more of the validation tests and track the pass fail results and code that directs data processor to generate and send the dCVV value if a selected number of tests have been passed. Since the dCVV value is being sent to both the merchant relayed through verification token and the payment processing network which may forward it to the issuing bank validation entity may use any method to generate the dCCV value and need not use the method used by portable consumer device to generate the variable datum e.g. the CVC or dCVV . Validation entity may generate the dCVV values using a pseudo random number generator or a look up table or a sequential counter such as when distributing the values from that counter over different accounts . The dCVV generation process can be done on a per transaction basis fully dynamic or for a group of transactions semi dynamic the latter being for a particular device or a group of devices . Validation entity may use a particular dCVV value for a particular device over a selected time period such as three days and then select another dCVV value for the particular device for the next selected time period and so on. Moreover validation entity may receive the dCVV values to use during the selected time periods from the issuing bank of the device in advance of the selected time periods and store them for later use as determined by entity s clock. This permits validation entity to omit the action of sending the dCVV values to payment processing network . The device verification value provided by validation entity may have the same format as the CVCand dynamic CVVs dCVVs output by existing smartcard credit cards e.g. a string of 3 or 4 numbers . As another approach validation entity may send a message to the issuing bank for portable consumer device to request a value to provide as the dCVV value. The above codes and actions can be implemented with conventional I O instructions memory access instructions CPU arithmetic instructions CPU logic instructions and CPU control instructions. In view of this disclosure the codes may be implemented by one of ordinary skill in the art without undue experimentation.

As indicated above validation entity may be configured to send a dynamic account number dPAN to verification token and the payment processing network along with dCVV value. Validation entity may contact the issuing bank for device to obtain the dPAN or may read it from a list of dPANs previously sent to entity by bank or created by entity or network or may generate it from an algorithm previously provided to entity by bank . Validation entity may comprise code embodied on computer readable medium that directs data processor to execute these actions as desired by the issuing bank. When payment processing network received the dCCV value dPAN value and the account number for device it may forward all three datum to the issuing bank so that the issuing bank can correlate the dPAN to the account number of device . The above codes and actions can be implemented with conventional I O instructions memory access instructions CPU arithmetic instructions CPU logic instructions and CPU control instructions. In view of this disclosure the codes may be implemented by one of ordinary skill in the art without undue experimentation.

Verification entity may further comprise code that directs processor to send an alert text message to the communication device of user or send an alert e mail message to an e mail account of user when one or more of the following events occurs 1 when verification token initiates communications with entity 2 when verification token reads a portable consumer device of user 3 when verification entity receives identification information from a portable consumer device or a verification token associated with user 4 when verification entity validates said identification information 5 when verification entity sends a dCVV value to verification token . The alerts sent by entity may include information related to the events that triggered the alerts such as a portion of the account number involved. The alert text messages may be sent from networking facility to an SMS relay server that is coupled to one of communications networks and along with the phone number or network address of the user s communication device . The SMS relay server has an interface to one or more mobile communication networks and can relay the text message to the phone number or network address provided by processor . Validation entity may comprise the relay server. Email alerts may be sent directly to the user s e mail account from networking facility . For this networking facility may comprise a conventional mail agent which is well known to the art.

Validation entity may comprise a website accessible to the user that enables the user 1 to create a password protected account associated with the serial number of the token the latter of which may be provided on a slip of paper originally sent with the token 2 to associate an e mail address to be used for one or more of the above described alerts 3 to associate a mobile number and or URID e.g. network address of the user s communications device to be used for one or more of the above described alerts and 4 to select one or more of the above described alert conditions. The website may also enable the user to provide and associate the account numbers for one or more of the user s devices with the password protected account and may further enable the user to associate the e mails and mobile numbers for the alerts to particular devices according to their account numbers. One of databases may be assigned to hold the password protected accounts of the users. When validation entity receives a validation request from verification token it can query this database to find the user s password protected account e.g. identify the user from the token s serial number and or the account number sent in the identification information and determine what text message alerts are to be generated and sent based on the parameters stored in the password protected account. The above codes and actions can be implemented with HTML page codes e.g. web pages conventional I O instructions memory access instructions database API function calls CPU arithmetic instructions CPU logic instructions and CPU control instructions. In view of this disclosure the codes may be implemented by one of ordinary skill in the art without undue experimentation.

In cases where validation entity sends a dPAN to a verification token it may send an e mail alert and or text alert to the user providing the user with a transaction number that has been associated with the dPAN. The transaction number can enable the user to more easily return goods purchased in the transaction.

It may be appreciated that some implementations of verification token may be configured to work with selected consumer payment devices such as those issued by a selected bank or configured to work with a selected merchant website .

In yet further implementations verification token may contain the URID of validation entity which handles validation requests for several different co branded portable consumer devices . In addition each of these co branded devices may hold a URID to a co branding merchant. The merchant URID is read by verification token and provided to a validation entity along with the device s identification information. Validation entity can send the validated identification information to the merchant URID.

Embodiments of the invention are not limited to authentication systems involving transactions. The same approach could be applied for other authentication systems. For example embodiments could be used to authenticate a user using an online banking application. A cardholder may enter his user ID into a banking website. The cardholder can then present his or her portable consumer device to a verification token. The banking website can validate the User ID and the token credentials by communicating with a validation entity.

Embodiments of the invention are not limited to the above described embodiments. For example although separate functional blocks are shown for an issuer payment processing system and acquirer some entities perform all of these functions and may be included in embodiments of invention.

In each of the embodiments described herein the communications between computer and validation entity may be facilitated by and or conveyed through a gateway e.g. a proxy server server entity etc. that is disposed between computer and validation entity . Such a gateway is shown at in . Gateway may act as an intermediary between a plurality of verification tokens A B . . . and their associated computers A B . . . on the one side and a plurality of validation entities A B . . . on the other side. Tokens A B . . . may be constructed and configured the same as token shown in and may interact with respective computers A B . . . respective users A B . . . and respective portable consumer devices A B . . . . Computers A B . . . may be the same as computer shown in and may be coupled to the first communications networks as described above. First communications network second communications network merchant websites acquiring banks issuing banks and payment processing network are coupled to one another as described above. First and second communications networks are also coupled to a plurality of validation entities A B C . . . each of which may be constructed and configured the same as validation entity shown in .

In the below discussion of the embodiments and implementations shown in a reference number without a suffix A B or C generically refers to each of the suffixed items e.g. entity refers to each of A B C .

Gateway may receive one or more initial communications from one of verification tokens A B . . . via one of computer A B . . . in communication with the token and may determine from information in the initial communication s an appropriate one of a plurality of validation entities A B C . . . to use to fulfill the token s request for a dCVV value. For example each verification token A B . . . may be configured to operate with portable consumer devices issued by many different issuing banks or other such entities and one or more of the validation entities may be configured to process requests from portable consumer devices issued by respective issuing banks or other such entities. Gateway may determine an appropriate one of validation entities A B C . . . based upon the identification information that the token read from a portable consumer device and sent to the gateway in an initial communication. For example a portion of the account number in the identification information may comprises an unique identifier assigned to the bank that issued the portable consumer devices from which the identification information was read.

In one implementation after gateway has determined an appropriate validation entity for the token s request the gateway may redirect the token to conduct further communications with the determined appropriate validation entity or may direct the determined validation entity to contact the token to conduct further communications. In another implementation all communications between the verification token and the determined appropriate validation entity may be conveyed through gateway after the gateway has initially determined the identity of the appropriate validation entity based upon one or more initial communications with the token . This latter implementation may comprise relatively simple passing through of communications between the token and the appropriate validation entity with minimal processing by gateway or may comprise having the gateway virtually presenting itself as the appropriate validation entity to the verification token. Such virtual presentation may involve gateway decrypting each message from the verification token communicating with the appropriate validation entity to formulate a response to the token s message and encrypting and sending a response message to the verification token. In each of the above implementations and in other implementations gateway may also conduct one or more validation tests on behalf of the appropriate validation entity particularly those related to validating the verification token. In this case the gateway does not need to send to the determined appropriate validation entity those communications it receives from the token that pertain to validation tests that the gateway is handling. Gateway may be associated with or operated by payment processing network or the owner thereof. It may be appreciated that in each of these implementations Gateway acts as an entity that can provide a device verification value dCVV value to token just as in the case that validation entity can provide a device verification value to token when entity is directly contacted by token .

Referring to gateway comprises a system having one or more servers coupled to a communications network that can receive a request from a verification token to process as described above. One of the servers of gateway is shown in the server comprises one or more processors electrically coupled to each of a tangible computer readable medium a user interface one or more databases and a networking facility the latter of which is coupled to first and second communications networks and . User interface comprises one or more video output devices e.g. displays screens and one or more input devices e.g. keyboard mouse trackball etc. which enable an administrator of gateway to receive information from the server and to provide input to the server. Computer readable medium may comprise a combination of semiconductor memory and non volatile storage such as one or more disk drives and or non volatile memory.

Computer readable medium stores an operating system for the server which enables processes and applications to be run by processor s and enables codes for directing the operation of processor s to be run. The operating system provides services to these processes and applications and enables these processes and applications to access components of user interface portions of computer readable medium networking facility and other components of entity . The operating system may be full featured. Specifically the operating system provides one or more I O communications modules that enable processor s to communicate with user interface and databases . Each I O communications module has an application programming interface API with a collection of functions that a processor can call in order to access the components. The operating system of entity also comprises one or more network services modules that can access networking facility and set up communication sessions to entities on communications networks and and with SMS relay server . Such network services modules include Microsoft s Windows Communications Foundation e.g. .NET 3.0 .NET 4.0 etc. Apple s CFNetwork Framework the networking section of the Unix and Linux operating system kernels and the OS Services Layer and the Base Services Layer of the Symbian operating system and the like. Each of these network services modules can be non exclusive e.g. capable of serving more than one processor and more than one process application and each provides an application programming interface API which has a collection of functions that a processor can call in order to manage communications with another entity. With these API facilities a collection of API function calls can be readily constructed for a processor to execute that enables the processor to establish a communications channel with an entity on a communications network coupled to networking facility and to exchange messages and data with the entity. The above operating system modules and APIs all include instructions that direct the operation of processor s .

One or more databases may be configured as database servers which processor s can access via networking facility over a private communications network which is illustrated by the dashed line in . Gateway conventionally has a clock for tracking time and dates for various applications. Clock may be a simple counter of seconds or fractions thereof that can be read by processor by an I O operation or may comprise a more complex arrangement of hardware or firmware that can provide the various components of the current date and time year month day hour minute and second in various registers that can be read by processor through the execution of one or more I O operations.

Gateway may comprise code embodied on computer readable medium that directs data processor to communicate with a computer and an associated verification token using networking facility over communications network . This code may include instructions that establish a communications session with computer including the option of establishing an SSL session with mutual authentication and encryption based on a triple DES algorithm and instructions for sending and receiving messages to verification token through the communications session. Gateway may further comprise code embodied on computer readable medium that directs data processor to receive encrypted identification information sent by verification token and code that directs data processor to decrypt the encrypted identification information. The identification information may be encrypted by a session key of an SSL session or by an encryption key stored in verification token and known to gateway or may be doubly encrypted by both keys. The latter key may be uniquely assigned to the token as described above. Gateway may further comprise code embodied on computer readable medium that directs data processor to determine from the received identification information and or the token s identity e.g. the token s serial number the appropriate one of the validation entities A B C . . . to be used for further processing of the request from verification token . For this data processor may access one of databases for a correlation list that relates identification information or portions thereof to validation entities and or for a correlation list that relates token identifiers to validation entities and may then compare the information received from the token with the correlation list s to determine the appropriate one of the validation entities . Gateway may further comprise code embodied on computer readable medium that directs data processor to apply one or more validation tests as previously described above and to continue processing the request from token if a selected number of validation tests are passed. Various ways of continuing the processing are described below in various possible implementations of gateway . The above codes for gateway and codes for gateway described below may be implemented in any number of programming languages. Furthermore one of ordinary skill in the art will be readily able to construct instructions to implement these codes in view of this disclosure without undue experimentation.

In one implementation gateway may further comprise code embodied on computer readable medium that directs data processor to send a communication to token by way of its associated computer informing the token to contact the determined appropriate validation entity to obtain a dCVV value. This communication may include a URID for the determined appropriate validation entity. Token may then communicate with the determined appropriate entity as described above and no changes to entity are needed. In this implementation of gateway the code may further direct data processor to send a communication to the determined appropriate validation entity that informs the entity of the request from the token along with an indication of the identification information sent by token and informs the entity that the token will be contacting it for a dCVV value for the identification information as sent to gateway by the token . This communication by gateway can serve as an additional security measure that assures the appropriate validation entity that the subsequent contact by token is legitimate.

In another implementation gateway may further comprise code embodied on computer readable medium that directs data processor to send a communication to the determined appropriate validation entity with an indication of the identification information received from the verification token and with a request for the validation entity to generate a dCVV value for the identification information and to send the dCVV value to the verification token by way of its associated computer . This communication may include a URID for the verification token . The codes of the validation entity previously described above may be augmented to direct the entity s processor to receive above described communication from gateway and to initiate communications with the requesting token . The codes of validation entity need not need to direct the entity s processor to receive the identification information from the requesting token as that may have been provided to the entity by gateway however as an added security measure the requesting token may provide the identification information to entity and the entity may include the code to receive the identification information from the token. In this implementation of gateway the code for gateway may further direct data processor to send a communication to the verification token via the associate computer informing the token that the determined appropriate validation entity will be communication with it to potentially send a dCVV value.

In yet another implementation of gateway the gateway may further comprise code embodied on computer readable medium that directs data processor to 1 send the initial communication from the requesting token and or an indication of the identification information sent by the requesting token to the determined appropriate validation entity to obtain a dCVV value 2 to receive back a dCVV value from the appropriate validation entity and 3 to send the dCV value to the verification token . This implementation of gateway enables a validation entity to omit the code for establishing communications with the computer used by the requesting verification token that task may be handled by gateway . Those codes of entity described above that direct communications with token may be modified to direct the communications to gateway instead. This implementation of gateway enables the requests from many tokens to be grouped together for more efficient handling by entity . In addition since gateway is virtually presenting itself to the verification token as a validation entity gateway can serve as an Internet firewall and protect the validation entities A. B. . . . from malicious Internet attacks.

In yet another implementation gateway handles the initial communications with token to determine the appropriate validation entity and then hands over the communication channel to the determined validation entity to complete the fulfillment of the token s request. All communications between the requesting token and the determined entity may be conveyed through gateway . If gateway has previously established an SSL session with the requesting token gateway may send the session key s and protocols to the determined entity so that the entity can take over the session e.g. take over encrypting the communications to the token with the session keys and protocols . For this implementation gateway may further comprise code embodied on computer readable medium that directs data processor to 1 send a communication to the determined appropriate validation entity with an indication that it is to handle further communications with the requesting token as routed through gateway and optionally session information which may include SSL session keys and protocols 2 to forward further communications that gateway receives from the requesting token to the determined entity and 3 to forward communications that gateway receives from the determined entity to the requesting token . For this gateway may maintain a table in memory or one of its databases that tracks channels that are currently being passed through gateway with each record in the table having the identity of the requesting token the determined validation entity and session information. To carry out the above second action the code may direct processor to access the channel table to locate the determined entity for the requesting token an to then forward the communication packets from the requesting token to the entity that was located in the table. Gateway may encapsulate these forwarded communication packets to preserve their header information and may include an indication of the identity of the requesting token for the benefit of the determined entity . To facilitate the above third action the determined validation entity may send its communication packets for the requesting token to gateway in encapsulated form optionally along with an identifier that identifies the requesting token in the capsule. Gateway can then include code that directs its data processor to extract from the encapsulated packet the token identifier and the packet that is to be sent to the requesting token . If the extracted packet already has the destination address for the computer coupled to the requesting token then the encapsulated packet does not need to include the identity of the requesting token. If the extracted packet does not include the destination address the code of gateway may direct data processor to determine the destination address from the extracted token identifier and the above described table of channel information and to insert the determined destination address into the extracted packet before sending it to computer . This action can provide an additional layer of security. In addition since gateway is virtually presenting itself to the verification token as a validation entity gateway can serve as an Internet firewall and protect the validation entities A. B. . . . from malicious Internet attacks.

The above implementation of gateway enables a validation entity to omit the code for establishing communications with the computer used by the requesting verification token that task is handled by gateway and to include code that directs processor to receive the indication from gateway that it is to handle further communications with the requesting token as routed through gateway and optionally to receive the session information for the further communications which may include SSL session keys and protocols . Those codes of entity described above that direct communications with token may be modified to direct the communications through gateway . For this validation entity may further comprise code embodied on computer readable medium that directs data processor to create and maintain a table in memory or one of its databases that tracks channels that are have been handed over from gateway each record in the table may have the identity of the requesting token the identification information of gateway and the session information. The communication codes of entity may be modified to receive encapsulated communication packets from gateway to extract from these packets the communication packets from token and to consult the above table to find the identity of token and session information if such cannot be determined from source address of the extracted communication packets or any token identity sent by gateway in the capsulated packets. The communication codes of entity may also be modified to encapsulate the communication packets for token in packets to be sent to gateway optionally along with an identifier that identifies the requesting token in the capsule and to send the encapsulated communication packets to gateway .

From the above description it may be appreciated that validation entities and gateway are separate entities from computers and are separate entities from verification tokens . It may also be appreciated that in several embodiments and implementations thereof that computers validation entities and gateway are addressed as separate network nodes on communications network e.g. have different network addresses in the communication packets and that tokens communicate through the network nodes of computers to entities and or gateway e.g. computers construct and decode network communication packets for tokens . it may be also appreciated that in several embodiments and implementations of token token may unconditionally send the read identification information to validation entity and or gateway without requiring a validation between the token and the user such as may be provided by the entry of a PIN or the provision of a biometric sample e.g. fingerprint and that token may send the read identification information in a relatively short amount of time such as within one minute of being read and typically within ten seconds .

It may be appreciated that Embodiments of the invention enable a user to obtain a dynamic device verification value for a portable consumer device such as a credit card which the user can provide to a merchant site as payment data for completing a purchase transaction. The dynamic device verification value reduces the potential for fraud by third parties that may fraudulently obtain the account number of the portable consumer device e.g. through skimming . In addition the interaction of the portable consumer device with the verification token enables the token to effectively inform the validation entity that the portable consumer device was physically in the presence of the token at the time the request for the device verification value was made thereby providing a card present status for online purchases made with the portable consumer device. Embodiments of the invention also have utility in providing device verification values to the user in a highly secure manner thereby enhancing security and reducing fraudulent use of credit cards. Moreover embodiments of the present invention provide these services and benefits to the user with a very high ease of use factor.

It should be understood that various embodiments of the present invention as described above can be implemented in the form of control logic using computer software in a modular or integrated manner. Based on the disclosure and teachings provided herein a person of ordinary skill in the art will know and appreciate other ways and or methods to implement embodiments of the present invention using hardware and a combination of hardware and software.

Any of the software components or functions described in this application may be implemented as software code to be executed by a processor using any suitable computer language such as for example C C C Java C or Perl using for example conventional or object oriented techniques. The software code may be stored as a series of instructions or commands on a computer readable medium such as a random access memory RAM a read only memory ROM a magnetic medium such as a hard drive or a floppy disk or an optical medium such as a CD ROM. Any such computer readable medium may reside on or within a single computational apparatus and may be present on or within different computational apparatuses within a system or network.

The above description is illustrative and is not restrictive. Many variations of the invention and embodiments thereof will become apparent to those skilled in the art upon review of the disclosure. The scope of the invention should therefore be determined not with reference to the above description but instead should be determined with reference to the pending claims along with their full scope or equivalents.

One or more features from any embodiment may be combined with one or more features of any other embodiment without departing from the scope of the invention.

A recitation of a an or the is intended to mean one or more unless specifically indicated to the contrary.

All patents patent applications publications and descriptions mentioned above are herein incorporated by reference in their entirety for all purposes. None is admitted to be prior art.

