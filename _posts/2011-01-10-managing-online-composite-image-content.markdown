---

title: Managing online composite image content
abstract: A method includes receiving an upload request to retrieve a master image. The method further includes retrieving the master image in response to the upload request. The method also includes storing the retrieved master image. The method further includes generating a composite image file using the retrieved master image. The composite image file can be used to create a plurality of images derived from the master image.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08732266&OS=08732266&RS=08732266
owner: Adobe Systems Incorporated
number: 08732266
owner_city: San Jose
owner_country: US
publication_date: 20110110
---
This application is a continuation and claims the benefit under 35 U.S.C. 120 of U.S. patent application Ser. No. 11 760 548 entitled Managing Online Composite Image Content filed Jun. 8 2007 now U.S. Pat. No. 7 870 224 issued 11 Jan. 2011 which is incorporated herein by reference in its entirety.

The present disclosure relates to the field of Internet content management and more specifically to a system and method for managing and distributing composite image content. The use of images in marketing and advertising on the Internet has become central to companies online strategies. For example a clothing retailer may want to make available in an online catalog their products and images so that potential buyers may browse selections without coming into a physical store. Some businesses may not have a physical storefront and rely solely on their online presence in which case displaying their inventory online is crucial. Some vendors literally have thousands of products whose images need to be managed. Image creation preparation and deployment for multiple distribution channels requires intensive manual labor high fixed costs and additional network infrastructure. Often this results in slower product time to market and under utilization of images.

In general in one aspect embodiments of the invention feature a method that includes receiving an upload request to retrieve a master image. That method also includes retrieving the master image in response to the upload request storing the retrieved master image and generating a composite image file using the retrieved master image. The composite image file can be used to create a plurality of images derived from the master image. Other embodiments of this aspect include corresponding systems apparatus and computer program products.

These and other embodiments can optionally include one or more of the following features. The upload request can include a file name. The upload request can be communicated using the Simple Object Access Protocol SOAP . The upload request can be a request to upload a plurality of images. The upload request can include a uniform resource identifier for the master image. The master image can be stored in a content management system. The composite image file can be a multi resolution image file. A response to the upload request can be sent. The composite image file can be published to an image rendering or web server.

Particular embodiments of the subject matter described in this specification can be implemented to realize one or more of the following advantages. Instead of creating and storing multiple versions and formats of a particular image a composite image file may be used to derive the multiple versions and formats upon request. This may reduce the total amount of required storage space by eliminating the need to store each version and format for each image. The reduction in the number of managed images may reduce image distribution time and the costs associated with image distribution. Automatically generating composite image files from master images may also streamline image processing and may make image quality consistent across images.

The details of one or more embodiments of the invention are set forth in the accompanying drawings and the description below. Other features aspects and advantages of the invention will become apparent from the description the drawings and the claims.

Usually when displaying online products a thumbnail image a mid sized image and sometimes large scale image of a particular product are created. To allow customers to access the images when viewing a particular product all three types of images for the product typically need to be manually uploaded into a content delivery system and sometimes manually published onto web or image servers. As an alternative a composite image file such as a multi resolution image file may be created instead of creating three distinct image files. Among other things a multi resolution file combines multiple resolutions of a given image into a single file which is easier to manage than three distinct image files and more flexible in that it makes possible derivation of images at resolutions that are not pre defined. In accordance with the present subject matter a multi resolution file may be generated automatically upon uploading a master image. The multi resolution image file may then be published to image servers which can derive on demand an image of a specified resolution. A customer accessing a product s webpage may then receive from the image server an image derived from the multi resolution image file at virtually any resolution less than the master image. A composite image file does not have to be a single computer file but may be a collection of data files.

As shown in composite image management system contains among other things a network a content delivery network and an image production system . Generally upon receiving a request transmitted over network the image production system may upload at master images stored on the content delivery network may create at composite image files and may publish at the composite image files to one or more image servers . Once published a customer may request an image having specified attributes such as an image for a certain product having a particular resolution. An image server may then dynamically derive from a composite image file an image having the specified attributes and send the derived image to the customer .

A network is a collection of nodes capable of directing communications from a first computing device connected on the network to a second computing device connected on the network. The span of a network may be local connecting only computing devices sharing the same physical office space e.g. a local area network or wide connecting computing devices over long distances e.g. a wide area network . A network may be connected to another network . One example of a network is the Internet which is a global network connecting millions of computing devices. One or more of the networks shown in may be communicatively coupled another network .

The client may be one or more digital computing devices capable of communicating over a network and may have memory capacity sufficient to store one or more master images and related product metadata before communicating them over the network . Generally a client may be operated by an online vendor or any entity that can create image content to be ultimately accessible over a network such as the Internet.

The content delivery network in this example is a network of digital computing devices having memory sufficient to store internet content such as master images and related product metadata. The nodes of a content delivery network which include one or more computing devices are generally deployed in multiple locations over multiple Internet backbones. These nodes cooperatively satisfy requests for content by end users transparently redistributing content to optimize the delivery process. The number of nodes making up a content delivery network varies depending on the architecture some reaching thousands of nodes with tens of thousands of computing devices. Requests for content are intelligently directed to the nodes based on location available processing resources and the like.

The image production system includes one or more networked digital computing devices having a processor and memory sufficient to store master images and composite image files . The image production system provides services to create manage and or publish image content using the image production system as may be defined in an application programming interface API . These services may be accessed remotely and may be implemented using Web services Java Remote Method Invocation the Common Object Request Broker Architecture or any other network communications protocol or standard that facilitates interaction of applications running on more than one computing device.

An API is a set of computer software services having pre defined input and output parameters. The API may also facilitate the invoking of the functionality described by the API by a remote computing device. Two functions that may be present in some implementations are a request to upload images and a request to publish the images . The request to upload images may have as one of its inputs a universal resource identifier URI of a master image that is to be uploaded. The request to upload images may also have as an input a name to be given the composite image file that is created from the master image . For example a product s Stock Keeping Unit SKU identifier may be used to in referencing the image. The request to upload images may include the URIs for multiple master images as well as corresponding names to be given to the corresponding composite image files that are created from the master images . An output of the request to upload images may be an identifier of the job associated with the request which can be used to query whether the image processing system has completed the request. Another output of the request to upload images may be a list of URIs that describes where the composite image files may be located for later access. In some implementations the output parameter may specify that the job is complete or indicate the job s percentage of completion.

The request to publish images which may be combined with the request to upload images may also have a variety of parameters independent of or in combination with the parameters defined in the request to upload images . For example the request to publish images may have as an input the name of the company on whose behalf the publish request is made and or one or more names of the composite image files that are to be published. The request to publish images may also have as an input an indicator as to whether to publish only new images uploaded since the last publish request or whether to publish all of the all of the images associated with a certain company. Numerous variations are possible in the parameters passed to in the parameters returned from and in the names given to the services defined by the API . As indicated above the API may be implemented as a Web service.

A Web service is a software system designed to support interoperable machine to machine interaction over a network without human intervention. It has an interface described in a format that can be processed by a computing device. Remote computing devices interact with a Web service according to the described interface using the Simple Object Access Protocol SOAP messages typically transmitted using the Hypertext Transfer Protocol HTTP with an Extensible Markup Language XML serialization along with other Internet standards. SOAP message is constructed on the client side which contains all of the request information needed for the server to fulfill the requested function. A returning SOAP message is sent back containing result information. As one example Apache Axis available from The Apache Software Foundation of Forest Hill Md. may be used as a proxy servlet for the SOAP services allowing the client side messages to be constructed at a higher level of abstraction than if the SOAP messages had been constructed from scratch. Axis may be used on the client side to provide wrapper functions for many of the details required to construct a SOAP request.

These two software functions and any other function of the image processing system may be implemented using any combination of software programming languages standards and protocols whether they be proprietary or public.

A composite image file is one or more digital files containing imaging data from which a variety of derived images may be generated. A composite image file may be a multi resolution image file having a format such as the pyramid encoded Tagged Image File Format PTIF or Eastman Kodak Company s FlashPix . Multi resolution image files are created from a master image by scaling down the master image multiple times at decreasing resolutions and combining into a single file the scaled down images. In some embodiments one or more of the composite image files are multi resolution image files. The processor may be operable to generate the composite image files from the master images . The process of generating a composite image file involves scaling a master image at various resolutions and combining the various resolutions into a single file as described in more detail below. In addition to multi resolution image files a composite image file may be any digital file that contains information regarding various attributes such as textures and colors from which multiple images may be derived.

User is a digital computing device with a processor and a memory and or may include one or more human operators interacting with a digital computing device. User is operable to send requests to the image production system to create manage and publish composite image files . User may also manage and edit the master images through the API . User may integrate the process of uploading and publishing with other automated processes. For example the initial creation and or storing of a master image file may trigger the upload and or publish requests and . User may structure requests to conform with the formats described by the API .

An image server is a digital computing device having memory sufficient to store one or more composite image files . An image server is connected to a network and may receive published composite image files . An image server may also generate and transmit images derived from a composite image file upon receiving a request for an image having certain attributes such as requests for certain formats e.g. JPEG TIF PNG and PDF and or for certain color conversions CMYK for print or RGB or web . For composite image files that are multi resolution image files the image server may receive a request for a particular resolution. If the resolution is not one of the resolutions stored in the multi resolution image file the image server may derive an image based on interpolation of the resolutions already contained with the multi resolution file. The various techniques of interpolation are known to those skilled in the art.

In operation the master images and its related metadata may be pre loaded in the content delivery network . An image processing system may receive a request to upload images and the request may contain a list of master images . Next the image processing system may pull at the master images stored on the content delivery network and store the master images e.g. in a local storage device . After the master images are uploaded the image processing system may create at composite image files and store the composite image files as well. After receiving a request to publish images the image processing system may transmit at the composite image files to one or more image servers . In some implementations there is no need for a separate request to publish and the composite images are published at after they are created at . Once published a customer may request an image having certain attributes such as an image for a certain product having a particular resolution. An image server may then dynamically derive from a composite image file an image having the certain attributes and send the derived image to the customer .

For example a major furniture retailer that plans to sell products via the Internet may have hundreds of products photographed for display online. Digital versions of the photographed products along with pricing information and other data may be loaded from client to a content delivery network via a network . The major furniture retailer may partner with an Internet retailer to display the products on the Internet retailer s web site. The Internet retailer may have a user that receives a message indicating that the furniture retailer s photographs are available on the content delivery network . The user may then initiate an application that will cause the photographs to be uploaded and published onto the Internet retailer s web site. To do so the user may create a request to upload the images specifying certain parameters as indicated in the API such as the URIs of the photographs stored in the content delivery system and the name of the furniture retailer.

At this point the image processing system may receive the upload request and retrieve at from the content delivery network the master images using the URIs provided in the upload request . For each master image the image processing system may generate at a composite image file and store it for later publishing. In some implementations the generation and or the storing of the composite image file may be done automatically in response to the uploading of the master images. Once all of the master images are uploaded and processed the image processing system may transmit a message to the user indicating the completion of the job. After receiving an indication that the job is complete the user may send a request to publish images indicating within the request the name of the furniture retailer and an indication that all of the images should be published. After receiving the publish request the image processing system may transmit at to the image servers which may be connected to the Internet the composite image files associated with the furniture company. Upon completing the publishing job the image processing system may respond back to the user with a message indicating that the publish job is complete and also indicating a list of URIs associated with the newly published composite image files as they reside on the image servers .

The subject matter and the functional operations described in this specification can be implemented in digital electronic circuitry or in computer software firmware or hardware including the structures disclosed in this specification and their structural equivalents or in combinations of one or more of them. Embodiments of the subject matter described in this specification can be implemented as one or more computer program products i.e. one or more modules of computer program instructions encoded on a computer readable medium for execution by or to control the operation of data processing apparatus. The computer readable medium can be a machine readable storage device a machine readable storage substrate a memory device or a combination of one or more of them. The term data processing apparatus encompasses all apparatus devices and machines for processing data including by way of example a programmable processor a computer or multiple processors or computers. The apparatus can include in addition to hardware code that creates an execution environment for the computer program in question e.g. code that constitutes processor firmware a protocol stack a database management system an operating system or a combination of one or more of them. A propagated signal is an artificially generated signal e.g. a machine generated electrical optical or electromagnetic signal that is generated to encode information for transmission to suitable receiver apparatus.

A computer program also known as a program software software application script or code can be written in any form of programming language including compiled or interpreted languages and it can be deployed in any form including as a stand alone program or as a module component subroutine or other unit suitable for use in a computing environment. A computer program does not necessarily correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data e.g. one or more scripts stored in a markup language document in a single file dedicated to the program in question or in multiple coordinated files e.g. files that store one or more modules sub programs or portions of code . A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.

The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform functions by operating on input data and generating output. The processes and logic flows can also be performed by and apparatus can also be implemented as special purpose logic circuitry e.g. an FPGA field programmable gate array or an ASIC application specific integrated circuit .

Processors suitable for the execution of a computer program include by way of example both general and special purpose microprocessors and any one or more processors of any kind of digital computer. Generally a processor will receive instructions and data from a read only memory or a random access memory or both. The essential elements of a computer are a processor for performing instructions and one or more memory devices for storing instructions and data. Generally a computer will also include or be operatively coupled to receive data from or transfer data to or both one or more mass storage devices for storing data e.g. magnetic magneto optical disks or optical disks. However a computer need not have such devices. Moreover a computer can be embedded in another device e.g. a mobile telephone a personal digital assistant PDA a mobile audio player a Global Positioning System GPS receiver to name just a few. Computer readable media suitable for storing computer program instructions and data include all forms of non volatile memory media and memory devices including by way of example semiconductor memory devices e.g. EPROM EEPROM and flash memory devices magnetic disks e.g. internal hard disks or removable disks magneto optical disks and CD ROM and DVD ROM disks. The processor and the memory can be supplemented by or incorporated in special purpose logic circuitry.

To provide for interaction with a user embodiments of the subject matter described in this specification can be implemented on a computer having a display device e.g. a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse or a trackball by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input.

Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back end component e.g. as a data server or that includes a middleware component e.g. an application server or that includes a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described is this specification or any combination of one or more such back end middleware or front end components. The components of the system can be interconnected by any form or medium of digital data communication e.g. a communication network. Examples of communication networks include a local area network LAN and a wide area network WAN e.g. the Internet.

The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

While this specification contains many specifics these should not be construed as limitations on the scope of the invention or of what may be claimed but rather as descriptions of features specific to particular embodiments of the invention. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover although features may be described above as acting in certain combinations and even initially claimed as such one or more features from a claimed combination can in some cases be excised from the combination and the claimed combination may be directed to a subcombination or variation of a subcombination.

Similarly while operations are depicted in the drawings in a particular order this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order or that all illustrated operations be performed to achieve desirable results. In certain circumstances multitasking and parallel processing may be advantageous. Moreover the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.

Thus particular embodiments of the invention have been described. Other embodiments are within the scope of the following claims. For example the actions recited in the claims can be performed in a different order and still achieve desirable results.

