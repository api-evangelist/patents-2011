---

title: Method and system for managing programmed applications in an open API environment
abstract: A method and system for an open application programming interface (API) dashboard system for monitoring and managing one or more developer programmed applications configured to use one or more services provided by a service owner are provided. The system includes an application area associated with a corresponding programmed application, each application area including a call metrics group configured to display summarized metrics, a services used group configured to display a listing of each service called by the programmed application and metrics associated with each service, and a key management group configured to prompt a developer of the programmed application to request or revoke a key, wherein the key includes a developer identification, a programmed application identification, and signed certificates relating to services used by the programmed application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08707276&OS=08707276&RS=08707276
owner: MasterCard International Incorporated
number: 08707276
owner_city: Purchase
owner_country: US
publication_date: 20110107
---
This invention relates generally to managing programmed applications an open application programming interface API system and more particularly to network based methods and systems for providing a programmed application management tool to developers of the programmed applications that use a service provider computer system through an open API architecture.

There are service provider companies that provide a variety of services to numerous consumers. These service provider companies utilize computer systems to provide these services. For example in the financial industry companies such as large banks interchange networks and payment networks provide certain financial services to consumers companies and other banks. Oftentimes these service provider companies provide services that include receiving processing and storing financial data in computer systems managed by the service provider companies. In many cases access to this financial data is restricted to certain approved users. Restricting access to such financial data provides at least some protection for the data but also limits the potential uses of the data.

Software developers around the world are able to develop computer programs sometimes called applications that are configured to utilize data such as the data stored within computer systems used by certain service provider companies. Of course in order for these computer programs to use such data the developer programs must be able to access the data. One way to access the data stored by these service provider companies is through an open application programming interface API .

By allowing software developers to access data stored within computer system used by these service provider companies the service provider companies are able to leverage these developer applications as well as drive up their transaction volume. Thus by providing this data access to developers these service provider companies are able to provide additional services to both existing and new customers which in turn improves profitability. However the providing of such data access also creates certain risks and challenges for the service provider companies.

Accordingly it is desirable to provide an open API architecture for certain service provider companies such as financial transaction companies that is configured to i provide secure access to data stored within the computer systems used by these service provider companies ii control access to the data and iii manage billing associated with providing said access.

Managing applications is cumbersome and time consuming. Each developer may produce many different applications for many different third party users of the service provider data. Managing such applications including billing issues version updates customer customization and services requested may slow the adoption of developer provided programmed applications.

In one embodiment an open API dashboard system for monitoring and managing one or more developer programmed applications configured to use one or more services provided by a service owner includes at least one application area associated with a corresponding programmed application each at least one application area including a call metrics group configured to display summarized metrics relative to service calls made by the programmed application a services used group configured to display a listing of each service called by the programmed application and metrics associated with each service and a key management group configured to prompt a developer of the programmed application to request or revoke a key wherein the key includes a developer identification a programmed application identification and signed certificates relating to services used by the programmed application. The system also includes a side bar area configured to prompt a developer to request information or help relating to the application area.

In another embodiment a method of managing one or more programmed applications includes receiving through a graphical user interface GUI a request for an application programming interface API key associated with a programmed application by a developer the API key permitting interaction of the programmed application and an API platform comprising a plurality of APIs. The method also includes receiving through the graphical user interface GUI developer identification data specific to the developer and the programmed application generating a client identification number associated with the key request using the developer identification data and generating at least one of a temporary memory programmed application key and a production programmed application key.

In yet another embodiment a computer system for managing one or more programmed applications includes a database for storing data and a computer device comprising a processor in communication with the database wherein the computer device is programmed to prompt a developer to register with the computer system wherein registering includes entering by the developer predetermined developer identification information and verifying by the computer system at least some of the predetermined developer information. The computer device is further programmed to receive a request from the developer for a sandbox key the request including an encoded certificate request file associated with the developer and provide a sandbox key to the developer the sandbox key including a client identification ID and a certificate signed by the computer system. The computer device is still further programmed to receive a message from the developer that include the provided sandbox key and provide access to a copy of at least one Open API service in a test validation environment using simulators based on an authentication of the sandbox key provided in the message and provide a response to the received message that simulates a response that would be provided to a similar message in a production environment.

Embodiments of the methods and systems described herein enable an owner of a service provider computer system which includes service applications stored therein to facilitate management of access to the service applications for use by developers of computer applications. The developers access the service applications stored within the service provider SP computer system through a developer portal and an application programming interface API platform. To ease the burden of managing all the programmed applications and associated access keys a developer may be responsible for the service provider computer system is equipped with a software tool dashboard. The developers use data from the service applications in response to executing a developer application. A developer uses a developer computer system to send a request for access to a selected service application stored on the SP computer system by accessing the developer portal and the API platform through the dashboard which receives and forwards the developer requests to a service owner SO of selected service applications. The SO approves or denies the developer request. Each SO being an owner of a particular service or set of services included within the overall SP computer system.

In the example embodiment the service provider computer system is a financial service computer system that provides financial services to developers consumers merchants acquirers and or issuers. The services may include providing data representing financial transactions processing payment card transactions locating banks or ATMs etc.

The following detailed description illustrates embodiments of the invention by way of example and not by way of limitation. The description clearly enables one skilled in the art to make and use the disclosure describes several embodiments adaptations variations alternatives and uses of the disclosure including what is presently believed to be the best mode of carrying out the disclosure. The disclosure is described as applied to an exemplary embodiment namely systems and methods of managing one or more programmed applications by a developer in an open API architecture. However it is contemplated that this disclosure has general application to software program management tools in industrial commercial and residential applications.

As used herein an element or step recited in the singular and preceded with the word a or an should be understood as not excluding plural elements or steps unless such exclusion is explicitly recited. Furthermore references to one embodiment of the present invention are not intended to be interpreted as excluding the existence of additional embodiments that also incorporate the recited features.

To improve commercial transactions a financial service provider may open previously proprietary payments and data services to third party and independent software developers around the world using an Open Application Programming Interfaces Open APIs architecture. The developers can then be able to create a new wave of e commerce and mobile payment applications. To facilitate use of the open APIs a developer portal including a developer dashboard is also provided to enable developers to easily sign up for access to all of the Open APIs that the service provider makes available.

Through the portal and dashboard the service provider provides developers with technical documentation software development kits SDKs sample source code reference guides and virtual sandboxes for testing new and innovative applications. A developer forum designed to spur collaboration between the service provider engineers and developers is also an integral component of the portal.

The Open APIs facilitate the development of new applications and systems beyond those currently available including CRMs ERPs online games merchant e commerce web sites eWallets mobile applications and payroll systems. The service provider payment and data services are also integrated with other data sources and functions to create mashups new applications that are a result of combining multiple data sources.

More specifically in the example embodiment system includes a server system which is a type of computer system and a plurality of client sub systems also referred to as client systems and connected to server system . In one embodiment client systems are computers including a web browser such that server system is accessible to client systems using the Internet. Client systems are interconnected to the Internet through many interfaces including a network such as a local area network LAN or a wide area network WAN dial in connections cable modems and special high speed ISDN lines. Client systems could be any device capable of interconnecting to the Internet including a web based phone personal digital assistant PDA or other web based connectable equipment.

System also includes point of sale POS terminals which may be connected to client systems and may be connected to server system . POS terminals are interconnected to the Internet through many interfaces including a network such as a local area network LAN or a wide area network WAN dial in connections cable modems wireless modems and special high speed ISDN lines. POS terminals could be any device capable of interconnecting to the Internet and including an input device capable of reading information from a consumer s financial transaction card.

A database server is connected to database which contains information on a variety of matters as described below in greater detail. In one embodiment centralized database is stored on server system and can be accessed by potential users at one of client systems by logging onto server system through one of client systems . In an alternative embodiment database is stored remotely from server system and may be non centralized.

Database may store transaction data generated as part of sales activities conducted over the services network including data relating to merchants account holders or customers developers issuers acquirers purchases made and services provided by system . Database may also store account data including at least one of a cardholder name a cardholder address an account number and other account identifier. Database may also store merchant data including a merchant identifier that identifies each merchant registered to use the network and instructions for settling transactions including merchant bank account information. Database may also store purchase data associated with items being purchased by a cardholder from a merchant and authorization request data.

In the example embodiment client system may be associated with a developer of computer applications and may be referred to as a developer computer device and client system may be associated with a consumer an acquirer or an issuer and may be referred to as a user computer device. Developer computer device stores developer applications that a user may access and utilize via user computer device . Server system may be associated with a service provider SP and maybe referred to as a SP computer device. In the example embodiment an SP may include a payment network provider an interchange network provider or any other provider of financial services.

In the embodiment where the SP is an interchange network provider system includes POS terminals which may be associated with a merchant. In this embodiment system may be part of a multi party payment card industry system for enabling ordinary payment by card transactions such as a credit card payment system using the MasterCard interchange. The MasterCard interchange is a proprietary communications standard promulgated by MasterCard International Incorporated for the exchange of financial transaction data between financial institutions that are members of MasterCard International Incorporated . MasterCard is a registered trademark of MasterCard International Incorporated located in Purchase N.Y. .

For example in a typical payment card system a financial institution called the issuer issues a payment card such as a credit card to a consumer who uses the payment card to tender payment for a purchase from a merchant. To accept payment with the payment card the merchant must normally establish an account with a financial institution that is part of the financial payment system. This financial institution is usually called the merchant bank or the acquiring bank or acquirer bank . When a consumer tenders payment for a purchase with a payment card also known as a financial transaction card the merchant requests authorization from the merchant bank for the amount of the purchase. The request may be performed over the telephone but is usually performed through the use of a point of sale terminal which reads the consumer s account information from the magnetic stripe on the payment card and communicates electronically with the transaction processing computers of the merchant bank. Alternatively a merchant bank may authorize a third party to perform transaction processing on its behalf. In this case the point of sale terminal will be configured to communicate with the third party. Such a third party is usually called a merchant processor or an acquiring processor .

Using the interchange network the computers of the merchant bank or the merchant processor will communicate with the computers of the issuer bank to determine whether the consumer s account is in good standing and whether the purchase is covered by the consumer s available credit line. Based on these determinations the request for authorization will be declined or accepted. If the request is accepted an authorization code is issued to the merchant.

When a request for authorization is accepted the available credit line of consumer s account is decreased. Normally a charge is not posted immediately to a consumer s account because bankcard associations such as MasterCard International Incorporated have promulgated rules that do not allow a merchant to charge or capture a transaction until goods are shipped or services are delivered. When a merchant ships or delivers the goods or services the merchant captures the transaction by for example appropriate data entry procedures on the point of sale terminal. If a consumer cancels a transaction before it is captured a void is generated. If a consumer returns goods after the transaction has been captured a credit is generated.

For debit card transactions when a request for a PIN authorization is approved by the issuer the consumer s account is decreased. Normally a charge is posted immediately to a consumer s account. The bankcard association then transmits the approval to the acquiring processor for distribution of goods services or information or cash in the case of an ATM.

After a transaction is captured the transaction is settled between the merchant the merchant bank and the issuer. Settlement refers to the transfer of financial data or funds between the merchant s account the merchant bank and the issuer related to the transaction. Usually transactions are captured and accumulated into a batch which is settled as a group.

The financial transaction cards or payment cards discussed herein may include credit cards debit cards a charge card a membership card a promotional card prepaid cards and gift cards. These cards can all be used as a method of payment for performing a transaction. As described herein the term financial transaction card or payment card includes cards such as credit cards debit cards and prepaid cards but also includes any other devices that may hold payment account information such as mobile phones personal digital assistants PDAs and key fobs.

Although the SP has been described herein as an interchange network provider it does not have to be so limited. As indicated above the SP may also be a payment network provider or any other provider of financial services. In these embodiments a transaction card a payment or even a purchase are not necessarily needed to utilize the services provided by the SP.

Each workstation and is a personal computer having a web browser. Although the functions performed at the workstations typically are illustrated as being performed at respective workstations and such functions can be performed at one of many personal computers coupled to LAN . Workstations and are illustrated as being associated with separate functions only to facilitate an understanding of the different types of functions that can be performed by individuals having access to LAN .

Server system is configured to be communicatively coupled to various individuals including employees and to third parties e.g. account holders customers auditors developers consumers merchants acquirers issuers etc. using an ISP Internet connection . The communication in the exemplary embodiment is illustrated as being performed using the Internet however any other wide area network WAN type communication can be utilized in other embodiments i.e. the systems and processes are not limited to being practiced using the Internet. In addition and rather than WAN local area network could be used in place of WAN .

In the exemplary embodiment any authorized individual having a workstation can access system . At least one of the client systems includes a manager workstation located at a remote location. Workstations and are personal computers having a web browser. Also workstations and are configured to communicate with server system . Furthermore fax server communicates with remotely located client systems including a client system using a telephone link. Fax server is configured to communicate with other client systems and as well.

User computer device includes a processor for executing instructions. In some embodiments executable instructions are stored in a memory area . Processor may include one or more processing units e.g. in a multi core configuration . Memory area is any device allowing information such as executable instructions and or other data to be stored and retrieved. Memory area may include one or more computer readable media.

User computer device also includes at least one media output component for presenting information to user . Media output component is any component capable of conveying information to user . In some embodiments media output component includes an output adapter such as a video adapter and or an audio adapter. An output adapter is operatively coupled to processor and operatively couplable to an output device such as a display device e.g. a liquid crystal display LCD organic light emitting diode OLED display cathode ray tube CRT or electronic ink display or an audio output device e.g. a speaker or headphones .

In some embodiments user computer device includes an input device for receiving input from user . Input device may include for example a keyboard a pointing device a mouse a stylus a touch sensitive panel e.g. a touch pad or a touch screen a gyroscope an accelerometer a position detector or an audio input device. A single component such as a touch screen may function as both an output device of media output component and input device .

User computer device may also include a communication interface which is communicatively couplable to a remote device such as server system . Communication interface may include for example a wired or wireless network adapter or a wireless data transceiver for use with a mobile phone network e.g. Global System for Mobile communications GSM G G or Bluetooth or other mobile data network e.g. Worldwide Interoperability for Microwave Access WIMAX .

Stored in memory area are for example computer readable instructions for providing a user interface to user via media output component and optionally receiving and processing input from input device . A user interface may include among other possibilities a web browser and client application. Web browsers enable users such as user to display and interact with media and other information typically embedded on a web page or a website from server system . A client application allows user to interact with a server application from server system .

Server computer device includes a processor for executing instructions. Instructions may be stored in a memory area for example. Processor may include one or more processing units e.g. in a multi core configuration .

Processor is operatively coupled to a communication interface such that server computer device is capable of communicating with a remote device such as user computer device or another server computer device . For example communication interface may receive requests from user computer device via the Internet as illustrated in .

Processor may also be operatively coupled to a storage device . Storage device is any computer operated hardware suitable for storing and or retrieving data. In some embodiments storage device is integrated in server computer device . For example server computer device may include one or more hard disk drives as storage device . In other embodiments storage device is external to server computer device and may be accessed by a plurality of server computer devices . For example storage device may include multiple storage units such as hard disks or solid state disks in a redundant array of inexpensive disks RAID configuration. Storage device may include a storage area network SAN and or a network attached storage NAS system.

In some embodiments processor is operatively coupled to storage device via a storage interface . Storage interface is any component capable of providing processor with access to storage device . Storage interface may include for example an Advanced Technology Attachment ATA adapter a Serial ATA SATA adapter a Small Computer System Interface SCSI adapter a RAID controller a SAN adapter a network adapter and or any component providing processor with access to storage device .

Memory areas and may include but are not limited to random access memory RAM such as dynamic RAM DRAM or static RAM SRAM read only memory ROM erasable programmable read only memory EPROM electrically erasable programmable read only memory EEPROM and non volatile RAM NVRAM . The above memory types are exemplary only and are thus not limiting as to the types of memory usable for storage of a computer program.

Developer computer device includes a processor for executing instructions. Instructions may be stored in a memory area. The memory area may also include one or more developer applications . Applications include computer implemented instructions that cause a computer device to interact with another computer device. For example a developer may create an application for locating ATMs included within a network of ATMs serviced by the SP referred to as the ATM Locator App . The ATM Locator App can be stored within the memory area for use by computer device . Developer computer device is in communication with SP computer system through a developer portal and through a developer sandbox platform . As explained below in greater detail sandbox platform is a test platform provided by SP computer system that enables a developer to test its applications with test data before such applications are rolled out for processing live production data.

SP computer system includes API portal memory device sandbox platform API platform certificate signing server API services wrapper and SO computer systems .

API portal is configured to communicate with developer computer device and facilitates managing developer registration and login with system . API portal also enables developer computer device to communicate with API platform . API portal communicates with memory device to facilitate a login by a developer.

API platform includes a registration service that is used to register developers and developer applications with SP computer system . Registration service is in communication with certificate signing server . API platform also includes an API gateway proxy .

API platform is in communication with API services wrapper . API services wrapper includes wrappers for each service application provided by an SO within SP computer system . Service applications are stored at SO computer systems . SO computer systems are in communication with API platform through API services wrapper or may be connected directly with API platform without a wrapper.

Continuing with the ATM Locator App example from above SO computer devices may include a service application that includes data showing a location of each of the ATM machines included within the network serviced by the SP referred to as the ATM Locator Service . In this example the ATM Locator App which is stored on developer computer device is able to communicate with SO computer device through API platform and API services wrapper by developer computer device sending a data request to SO computer device and by receiving a data response back from SO computer device . Developer computer device is then able to display the location of all the ATMs within the SP network or at least some of the ATMs within the network.

Merchant computer device and consumer computer device each include a processor for executing instructions. Instructions may be stored in a memory area. The memory area may also include one or more developer applications downloaded from developer computer device for use by the merchant consumer acquirer and or issuer collectively a user . In other words a developer may develop an application that can be used by a user on their computer devices e.g. a POS device a personal computer smart phone or PDA . The user downloads the application from the developer to their computer device for use by the user. When the user uses developer application merchant and or consumer computer devices communicate with SP computer system through API platform . Continuing with the ATM Locator App example from above the user can download the ATM Locator App from developer computer device . Consumer computer device is then able to communicate with SO computer devices through API platform and API services wrapper by sending a data request to SO computer devices and by receiving a data response back from SO computer devices . Consumer computer device is then able to display the location of all the ATMs within the SP network or at least some of the ATMs with the network.

As discussed above SP computer system includes a developer sandbox platform which enables a developer to test its applications with test data before such applications are rolled out for processing live production data. Sandbox platform includes a copy of API gateway proxy a copy of API services wrapper and simulator computer devices which are configured to simulate SO computer devices . Sandbox platform includes test data that allows a developer to test its applications prior to rolling out applications for production use.

In the example embodiment a developer visits a web portal referred to as API portal designed specifically for SP computer system . At the home page developers will be prompted to register with API platform . The registration process will collect and authenticate as required the following data elements from the developer first name last name username password email address country street address city state province postal code phone number and company university affiliation. Additionally as a condition of registration developers must opt in to the program by affirmatively consenting to the terms and conditions and privacy notice. API portal also includes a mechanism for the developers to request access to their information in the event that they desire to change modify or delete such information.

Once registered and authenticated developers can log into API portal and access a variety of information regarding the various service applications e.g. service offerings such as payments locators offers MATCH etc. . Each service application will have its own page s dedicated to describing the business requirements and specifications for that service in a format easily understood by non industry developers.

Additionally the developers will be able to log into API portal register a key alias and request a sandbox key. The sandbox key allows developer s applications to access sandbox platform which is an environment where developers can test and validate messages using service simulators .

Once a developer has been given a sandbox key the developer can return to API portal at any time and request a production key. A production key and client ID will be issued for the key alias used by the developer in the developer application. The client ID will identify which key alias is using API platform to process messages and the developer that owns the production key. In the example embodiment sandbox and production keys are not intended to be transferable or shared.

For every message that API platform processes the following will be logged message request type date and time received path message URL IP address of sender user agent of sender name of sending application like IE Firefox or a different name process time and success or fail. If fail then error information client ID key alias user ID system generated ID for developer account that owns the client ID and unique message ID. There may be additional data elements collected based on the differing requirements of the various API service offerings. For example for payments that have a merchant a merchant ID will be logged in addition to the elements listed above.

In the example embodiment a developer is required to register with SP computer system to access certain information. However an unregistered developer is able to access some information within SP computer system . For example an unregistered developer can review available API information documentation and sample code access certain functions and access community pages and read forums. However an unregistered developer cannot post forum comments or blogs create a key alias or request a sandbox or production key.

API portal provides a mechanism for developers to learn about the services that are available. They have the ability to register communicate with other developers via the forums request keys for sandbox testing and production environments view their personal dashboard and view metrics on transactions for each key alias they have created. The keys provide message security between the developers and SP computer system .

SP computer system allows a developer to interact with API sandbox platform . The developer uses sandbox platform for testing and validating applications by using simulators . The messages sent by developer applications to API gateway proxy copy are verified with a key. The key verifies that the message was not tampered with between the sender and SP computer system . The transaction in the message is authenticated by the backend simulator computer devices . The following data elements are collected from the developer during the sandbox key request process 1 Key Alias This is the alias the developer assigns to the key. It is used to present a user friendly identifier of the key on the dashboard. The dashboard is a web page on the portal website with the purpose of automatically displaying important information objects etc. 2 Description The description of the key. It is assigned by the developer. Used on the dashboard to present the developer with a description of the key. 3 Use This identifies if the key is for personal or commercial use. Personal use is an individual that intents to personally use or give to others for their personal use without charge. Commercial use is an individual that is developing for use by their employer or an individual that intends to sell their application to others. 4 Notes This is free form notes that the developer can associate with the key. 5 Calls This is the expected number of calls using the production key. It is assigned by the developer. Used by the SP for capacity planning. 6 Profitable This identifies if the developer intends the key to be used to generate a profit. It is assigned by the developer. 7 Certificate The SP signs the certificate and makes it available to the developer on the dashboard to download. The developer sandbox key is valid for testing all available API service applications with general access and any premium services that the developer key alias and client ID have an approved production key.

SP computer system assigns a production key to a developer. During this phase the developer will be assigned a production key number and that key number will be provided to SP computer system during each call. SP computer system will use the production key number to control access and track developer activity throughout the process. In the example embodiment an existing key alias and sandbox key are required prior to requesting a production key. The following data elements are collected from the developer during the production key request process 1 Certificate SP computer system signs the certificate and makes it available to the developer on the dashboard to download. 2 Production Services Requested This is a request for which services the production key will be valid.

A developer is able to engage a customer of the SP. The developer can build applications for any of SP s business partners including merchants issuers acquirers or any other party in the SP network. The following examples describe a developer building a developer application for a merchant user the user could also be an individual an acquirer a processor or an issuer . The developer may be working directly for a merchant or for themselves to sell their application to a merchant. The roles of the developer and merchant are separate. The SP does not have to be part of the relationship between the developer and the merchant. In some embodiments the merchant may be required to have a relationship with the service application being used e.g. MiGS MasterCard Internet Gateway System . The merchant and merchant acquirer would need to be registered with MiGS and have the credentials to prove that relationship is valid prior to using API platform .

In the example embodiment the SP has a trust relationship with an existing merchant. The messages sent by merchant computer device using developer application to API gateway proxy are verified with a key public and private key . The key verifies that the message was not tampered with between the sender and API platform . The transaction in the message is authenticated by the backend service application . During this phase customer authentication is managed by the SO of service application being called.

In the example embodiment SP computer system includes a certificate signing request CSR and a key generation process. This process is started by the developer after registration on API portal . The keys certificates are generated by the developer outside of SP computer system with open source tools like Open SSL . The SP does not own the developer s private or public key. A developer could theoretically use the same key with multiple open API s or programs not just the open API of the SP. The developer owns their private key public key and CSR Certificate Signature Request . The basic steps in the process are as follows 1 the developer uses an open source tool and requests a CSR 2 the tool provides a private and public key pair and the public key is included in the CSR 3 the developer uploads the CSR which contains the public key to API platform 4 API platform assigns a client ID and signs the developer s public key wherein the combination of the client ID and the signed developer s public key comprises the production key 5 the developer then uses the client ID which is included in the production key in each message sent to API platform that is digitally signed with the private key on developer s computer device 6 API platform uses the client ID to identify which public key to use to verify the private key used to sign the message. Tools used to create keys and a CSR typically ask the developer to enter the following information when creating a CSR and key pair name organization organizational unit city state or province and country.

Dashboard is a link enabled system that extracts information from different areas in service provider computer system and displays that information for user reference. Dashboard also organizes and presents links to other web pages that include specific functionality for managing the programmed applications associated with a developer represented by a client ID.

Call metrics group includes a quick link to a web page or a pop up window for managing viewers of a developer s dashboard . Another quick link is used to remove viewers from being able to view the developer s dashboard .

Key management group includes a quick link for downloading a sandbox key. A sandbox is a temporary or segregated memory area in service provider computer system that simulates a portion of service provider computer system but can not make any changes or even access production areas of service provider computer system . The sandbox is a testing location provided to developers for familiarizing developers with the capabilities of the API services offered. The sandbox key allows developer s applications to access an environment where they can test and validate messages using open API service simulators.

Data elements collected from the developer during the sandbox key request process include a Key Alias which is an alias the developer assigns to the key. The Key Alias is used to present a user friendly identifier of the key on dashboard . A description of the key is a required element and is assigned by the developer. The key description is used on dashboard to present the developer with a description of the key. A use for the application is a required data element and identifies if the key is for personal or commercial use. Personal use is an individual that intends to personally use or give to others for their personal use without charge. Commercial use is an individual that is developing for use by their employer or an individual that intends to sell their application to others. A notes element is optional and is a free form notes area the developer can associate with the key. A Calls element is required and represents an expected estimated number of service calls anticipated using the production key. The number of Calls is assigned by the developer and used by the service provider for capacity planning. A profitable data element identifies if the developer intends the key to be used to generate a profit. A Certificate data element is required. The service provider signs the certificate and makes it available to the developer on dashboard to download.

Key management group also includes a quick link for downloading a production key. Once a developer has been given a sandbox key the developer can return to dashboard and request a production key. A production key and client ID will be issued for the key alias used by the developer in their application. The key alias is a nickname or registered name that is an alias for a key also referred to an on dashboard . The client ID identifies which key alias is using the open API platform to process messages and the developer that owns the production key. Further key management group includes a quick link that allows a developer to revoke a production key.

Side bar area includes a quick link that opens a webpage that permits a developer to request an API key which is a first step to using the open API function of service provider computer system . A quick link permits a developer access to an API Explorer application. The API Explorer is a tool on a web page that assists the developer in creating an API request message for a specific API service that is offered. It then allows the developer to view a structure of a return message that fulfills the requirements of the API request message.

The term processor as used herein refers to central processing units microprocessors microcontrollers reduced instruction set circuits RISC application specific integrated circuits ASIC logic circuits and any other circuit or processor capable of executing the functions described herein.

As used herein the terms software and firmware are interchangeable and include any computer program stored in memory for execution by processor including RAM memory ROM memory EPROM memory EEPROM memory and non volatile RAM NVRAM memory. The above memory types are exemplary only and are thus not limiting as to the types of memory usable for storage of a computer program.

As will be appreciated based on the foregoing specification the above described embodiments of the disclosure may be implemented using computer programming or engineering techniques including computer software firmware hardware or any combination or subset thereof wherein the technical effect is includes receiving through a graphical user interface GUI a request for an application programming interface API key associated with a programmed application by a developer wherein the API key permits interaction of the programmed application and an API platform comprising a plurality of APIs. The technical effect also includes receiving through the graphical user interface GUI developer identification data specific to the developer and the programmed application generating a client identification number associated with the key request using the developer identification data and generating at least one of a temporary memory programmed application key and a production programmed application key. Any such resulting program having computer readable code means may be embodied or provided within one or more computer readable media thereby making a computer program product i.e. an article of manufacture according to the discussed embodiments of the disclosure. The computer readable media may be for example but is not limited to a fixed hard drive diskette optical disk magnetic tape semiconductor memory such as read only memory ROM and or any transmitting receiving medium such as the Internet or other communication network or link. The article of manufacture containing the computer code may be made and or used by executing the code directly from one medium by copying the code from one medium to another medium or by transmitting the code over a network.

The above described embodiments of a method and system of managing programmed applications in an open API environment provides a cost effective and reliable means to facilitate interfacing with an API platform and executing the programming application in a sandbox testing environment. More specifically the method and systems described herein facilitates reporting a status of the one or more programmed applications. As a result the method and systems described herein facilitate managing the one or more programmed applications in a cost effective and reliable manner.

This written description uses examples to disclose the invention including the best mode and also to enable any person skilled in the art to practice the invention including making and using any devices or systems and performing any incorporated methods. The patentable scope of the invention is defined by the claims and may include other examples that occur to those skilled in the art. Such other examples are intended to be within the scope of the claims if they have structural elements that do not differ from the literal language of the claims or if they include equivalent structural elements with insubstantial differences from the literal languages of the claims.

