---

title: Hydroelectric power optimization service
abstract: A non-linear power equation may be solved in linear form by locking a variable or variables and iteratively solving to provide a Web service for accurately and quickly estimating optimized power solutions for hydroelectric power stations. Additionally, these iterative calculations may provide for long term water resource planning and more accurate estimation models. Further, such optimized power solutions may be usable to create accurate and timely water management models for the operation and planning of hydroelectric power stations.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08626352&OS=08626352&RS=08626352
owner: Avista Corporation
number: 08626352
owner_city: Spokane
owner_country: US
publication_date: 20110126
---
Hydroelectric power generation generally involves harnessing the force of moving water to generate electricity. In most cases an electric generator generates electricity from the potential energy of dammed water that drives a water turbine. Often a hydroelectric power station may generate electricity for an entire area however some hydroelectric stations are controlled by and for a single entity such as a factory. There are many factors involved in the operation of hydroelectric power stations. For example constraints such as reservoir volume the difference in height i.e. the head between the reservoir forebay and the water s outflow tailrace turbine efficiency water flow rates and even water rights can each have effects on the amount of power generated at any given time.

Managers and operators of hydroelectric power stations are often confronted with difficult operational and planning decisions. For example determining appropriate flow rates through each turbine or combinations of turbines pumped storage times and volumes and turbine replacement options are all decisions that may face each hydroelectric power station manager or operator. Additionally these operators may need to evaluate operational policy optimize the system administer water rights and accounting and prepare long term resource plans. Unfortunately current products do not provide accurate or efficient solutions for handling today s highly competitive water resources needs.

Embodiments of the present disclosure are directed to among other things providing optimized hydroelectric solutions for managing and or operating hydroelectric power stations or other types of water management systems. As an overview hydroelectric power may be generated by harnessing the potential energy contained in dammed water that drives a turbine or water wheel with the aid of an electric generator for converting the mechanical energy of the turbine into electricity. Mechanical gates or sluices may control the flow rate of the dammed water through the turbine. In some instances pumps may channel the water back to the reservoir to store energy for peak hours. Station operators and managers generally face a myriad of challenges when controlling the flow and storage of water while attempting to optimize power production. This is due to the fact that many factors affect power output such as turbine efficiency head and flow. Additionally each of these factors may affect the other such that the equation for calculating power Power 1 11.82 Equation 1 where efficiency h head and Q flow rate is a non linear multi variable equation. For example an increase in flow may directly affect efficiency and or head however the relationships may not be linear. Additionally other factors such as water rights e.g. tribal fishing rights conservation and environmental regulations etc. private licenses public grants reservoir size and rainfall can indirectly affect the power output by directly affecting the equation variables. For example rainfall may affect head while licenses and grants may require changes in flow rate.

In some instances a system of the present disclosure may receive hydroelectric power station data from a local data store or from a remote server for calculating an optimized power solution. Additionally or in the alternative the system may form optimization models for optimizing power over an extended period of time. The system may use an iterative process to calculate the optimized power solution linearly. As such a variable of the power equation Equation 1 may be locked with an estimated value to create a linear estimation. In some instances the locked variable may be the head variable while in other cases the flow or the efficiency variables may be locked. Locking a variable entails setting a particular variable to a predetermined or estimated value so that it is no longer an unknown. As such a solution to a single non linear equation may be computed linearly. In some examples based on locking a variable and solving linearly a solution that historically would have taken hours may now be returned in less than 60 seconds or sometimes less than 10 seconds depending on the sample size of data the accuracy of the desired solution and the speed of the computing system used to compute the solution. Multi year studies that historically were impossible to solve may now be completed in hours or a few days.

In one aspect the head variable may be locked with an estimated head value. The system may then solve the equation for power using the estimated head value and known efficiency and flow data. Additionally the known efficiency and flow data may be accessible or extrapolated from an efficiency curve for a particular turbine. Alternatively the efficiency and flow data may be calculated based on historical data from a known power station or it may be received from the remote server that provided the power station data.

When the head value is locked with an estimated head value the system may then calculate an actual head value based at least in part on other information known about the power station. In one aspect this other information may be flow and efficiency data from an efficiency curve data from a historical spreadsheet or measured data for a particular point in time. The calculated head value may then be compared to the estimated head value used in calculating the optimized power solution. In one aspect if the difference is outside a predetermined tolerance threshold and or an iteration threshold has not been reached the system may re solve the equation for power using the calculated head value. Additionally the system may iteratively repeat these calculations and comparisons until the head value difference between the previously locked head value and the next calculated head value is within the predetermined tolerance threshold or until the iteration threshold is reached.

In some aspects the optimized power solution may be made up of each calculated power solution and or data from each iteration. For example the optimized power solution may include one power solution for a given time a combination of power solutions for different respective times or a combination including one or more power solutions and the associated variable inputs that formed each respective power solution for one or more respective times. The system may then populate a spreadsheet or database with the data provide the data to a local user of the system or provide the data to a remote server.

Additionally the described techniques may also be used on water management systems that are not designed to generate power such as water storage reservoirs for flood control. Alternatively or in addition the described techniques may also be used for providing solutions to systems that both provide power generation and water storage.

The discussion begins with a section entitled Illustrative Architecture which describes a non limiting environment in which optimized power solutions may be iteratively calculated and provided. Next a section entitled Illustrative Data follows and describes example data for implementing the described calculations. Finally the discussion concludes with a section entitled Illustrative Processes and a brief conclusion.

This brief introduction including section titles and corresponding summaries is provided for the reader s convenience and is not intended to limit the scope of the claims nor the proceeding sections. Furthermore the techniques described above and below may be implemented in a number of ways and in a number of contexts. Several example implementations and contexts are provided with reference to the following figures as described below in more detail. However the following implementations and contexts are but a few of many.

As described briefly above system may allow users or to provide hydroelectric power station data hydro data to system . In some aspects the users may provide the hydro data directly to the system via a data receiving module to be stored in memory of the local server . In other aspects however users may provide the hydro data to the remote server . Here the remote server may provide the hydro data to system via the network . As noted above system may be implemented as a website for interacting with users over the network . System may additionally or alternatively be implemented as a Web service or other application programming interface API that allows communication between the system and users of computing devices other than local server . In yet other examples users may provide hydro data in any digital manner known such that system may receive it at the local server . For example users may provide the hydro data to system via email text message compressed file Hypertext Markup Language HTML file Extensible Markup Language XML file data stream or feed etc. Additionally in one example the hydro data may be collected by a sensor network and received by system in real time or substantially real time.

In some examples users may provide data to system and receive power solutions in exchange for fees. The fees may be one time fees fees based on a subscription basis fees based at least in part on the granularity of the optimal power data an amount of exchange of the optimal power data fees based on a frequency of exchange of the optimal power data fees based on a speed with which the optimal power data is provided fees based on a number of clock cycles to determine the optimal power data fees based on a number of computations to determine the optimal power data and or fees based on a power savings achievable using the optimal power data. Additionally in some examples optimal power data may be provided to remote server in the form of potential profit estimates for a hydroelectric power station results of a potential turbine comparison results of a power savings analysis and or in the form of peak shaving data. Hydro data may also include a recommendation to make a change perform an act e.g. maintenance or replacement of turbines open or close sluice gates etc.

Further as noted briefly above hydro data may comprise hydroelectric power station data from a hydroelectric power station or system such as hydro system . In one aspect hydro system represents a hydroelectric power station with one or more dams reservoirs turbines generators and or transformers. The hydro data may be data corresponding to an entire hydro system made up one or more of each of the elements listed above may be data corresponding to a hydro system such as the one shown in i.e. hydro system made up of a single reservoir dam turbine generator and transformer or may be data corresponding to a hydro system of any configuration.

As noted above local server or multiple local servers perhaps arranged in a cluster or as a server farm may host system or website . Other server architectures may also be used to host the system . System is capable of handling requests from many users and serving in response various user interfaces that can be rendered locally by a display device of the local server or at user computing devices such as remote server . System can be any type of software system or website that supports user interaction including interaction with operators managers contractors or other types of users and so forth. However as discussed above the described techniques can similarly be implemented without a website altogether.

Taken together allows users and or users to request that optimized power solutions be calculated based on provided hydro data . To illustrate envision that user accesses system via network and provides hydro data corresponding to at least flow data head data and efficiency data for hydro system over the previous six months. In this example the hydro data may be provided in a spreadsheet file database file or other type of file for organizing data with each respective value corresponding to a particular time of day for the six month period. In other examples however the system may provide a graphical user interface GUI to user including text fields for entering data displayed by the remote server which provides a method for manually entering the hydro data or a method for uploading a file containing the hydro data .

While illustrates local server and remote server as personal computing devices other types of computing devices may include laptop computers portable digital assistants PDAs mobile phones set top boxes game consoles mainframe computers super computers data centers and so forth. In each instance and as illustrated each server is equipped with one or more processors and memory to store applications and data such as the data receiving module that enables hydro data to be provided to system .

Once the data is received by system via the Internet or other network connection such as network the system may iteratively calculate optimized power solutions based on the hydro data and provide the optimized power solutions to the users via the network . In some instances the power solutions may be provided based on iteratively calculating at a predetermined time interval granularity e.g. one week one day or even one minute until a tolerance percentage is reached until an iteration threshold is reached and or until a predetermined time period has elapsed. In one some examples the tolerance percentage may be 1 0.05 or any other percentage based on the intended use of the solution.

Memory may be used to store any number of functional components that are executable on processor s as well as data and content items that are rendered by local server . Thus memory may store an operating system and several modules containing logic.

As noted above a data receiving module located in memory and executable on processor s may facilitate receiving hydroelectric power station data such as hydro data .

Memory may further store variable locking module to lock a variable of the non linear multi variable power equation Equation 1 . In one aspect variable locking module may be configured to lock the head variable by setting the h variable of the power equation to an estimated head value. In some examples the estimated head value may be selected from the hydro data from historical data of another power station randomly or in a pseudo random fashion. In another aspect however variable locking module may be configured to lock the efficiency variable or the flow variable by setting the or Q variables to estimated values respectively.

Memory may also store linear estimation module and iteration module . Linear estimation module may be configured to calculate a linear estimation of the non linear power equation . In other words by locking a single variable the non linear power equation becomes a linear equation and may be solved much faster and much less computationally demanding. While the solution is an estimate the iteration module described will generally converge on a solution that is more accurate than the original estimated solution. In one example once the variable locking module locks the head variable and flow and efficiency data for a given time period are received from the hydro data spreadsheet the linear estimation module may calculate an estimated power solution linearly.

Memory may also store variable calculation module which may be configured to calculate an actual value for the variable that was previously locked by the variable locking module . That is in the example where the head value is locked prior to the linear estimation the variable calculating module will calculate an actual head value. In some aspects variable calculation module may calculate the actual value based on an efficiency curve for a particular turbine. In other examples the actual value may be calculated based on other data from the hydro data spreadsheet or other data known about the hydro system . Additionally in some examples the efficiency curve may chart turbine efficiency against flow. This data may be provided by the manufacturer of the turbine may be known from trials or may be determined from historical data.

Iteration module may be configured to iterate to within a tolerance and or until an iteration threshold is reached. Iteration module may also be configured to operate the linear estimation module and the variable calculation module repeatedly until such tolerance or threshold is reached. For example until the tolerance or threshold are reached the iteration module may continue to instantiate the linear estimation followed by the variable calculation.

Additionally memory may further store a tolerance checking module configured to check whether the linear estimation module has estimated the power solution to within the tolerance or whether the iteration threshold has been reached. In one example an iteration threshold of 5 iterations may be pre selected by users or . In this case the tolerance checking module will determine after the fifth iteration that the condition has been met. The tolerance checking module will then instruct the iteration module to stop iterating. In another example a tolerance of 1 may be pre selected by users or by another user of system . In this example the tolerance checking module will determine if the difference between the calculated actual value for the locked variable is within 1 of the value used for that variable in the last estimation iteration. If so the tolerance check module will instruct the iteration module to stop iterating. In the alternative the iteration module will continue iterating until either the tolerance or the iteration threshold is reached.

In some instances memory may also store a solution providing module configured to provide the optimized power solutions to users users or some other users who have requested the data. In some examples providing optimized power solutions involves storing the solutions in memory or some other memory displaying them to users of the local server transmitting them over network to remote server or preparing them for display to users . Additionally in some aspects the optimized power solutions may be formatted such that they accurately may be represented or displayed within a spreadsheet application.

In one general non limiting example the following calculations may be performed by several of the afore mentioned modules 

Various instructions methods and techniques described herein may be considered in the general context of computer executable instructions such as program modules executed by one or more computers or other devices. Generally program modules include routines programs objects components data structures etc. for performing particular tasks or implementing particular abstract data types. These program modules and the like may be executed as native code or may be downloaded and executed such as in a virtual machine or other just in time compilation execution environment. Typically the functionality of the program modules may be combined or distributed as desired in various embodiments. An implementation of these modules and techniques may be stored on some form of computer readable storage media.

In one example column A of the hydro system data may represent theoretical turbine efficiency for a given turbine for each flow. Additionally column B of the hydro system data may represent each potential flow rate for the power station from 0 to 9 000 cubic feet per minute CFM . In one example column C may represent a benchmarked efficiency which is calculated by dividing the power curve efficiency column A by some historical data regarding the actual turbine or the actual efficiency at each given flow.

In one aspect column D of the hydro system data may represent the calculated power solution based on an estimated head value. Columns E F G H and J may then represent the calculated head value for each of five iterations while columns K L M N and P represent the percent error between each calculated head value and the estimate. Where the percent error was within the pre selected tolerance in this case 1 or 0.01 the calculated head values are shaded grey in columns E J. At these instances the power calculation has been optimized.

As seen here hydro system data may be represented in spreadsheet form. However the data may be stored displayed rendered provided or represented in any other form known. Additionally this spreadsheet may serve as the underlying data to perform the iterations discussed above and or it may be used as a GUI for the user to interact with the system and to present the resulting power solutions to users or .

Process includes receiving a tolerance threshold and data as inputs for making a power calculation at . In one aspect a user of a local computing device may provide the data. In other aspects the data may be provided by a user of a remote computing device accessing process over a network such as the Internet. Further the tolerance threshold may be selected by a user through a GUI pre selected based on operational criteria or set to a standard value. At process may set one of the variables of the power calculation to an estimated value. In one aspect process may set the head variable to an estimated head value however other variables may be locked. At process may solve for an optimal power solution linearly using the estimated value and the data received at . For example when the head variable is locked with an estimated head value values for flow and efficiency may be selected from the received data for calculating the estimated power.

Process may also include calculating an actual value for the locked variable at . In the above example when the head variable is locked i.e. set to an estimated value the process may calculate an actual head value here. At process may determine a difference between the estimated value and the calculated value. That is by way of example only process may determine the percentage difference between estimated head value and the calculated head value. In other aspects however estimated and calculated head values may be used along with the flow and efficiency data used to solve the optimal power solution to determine estimated and actual power. The estimated and actual power may then be used along with market rate information to determine an estimated dollar value and an actual dollar value for electricity at each time period. In some aspects at process may determine a percentage difference between the estimated dollar value and the actual dollar value.

At process may determine whether the percent difference is greater than the tolerance threshold received at . If the percent difference is within the received tolerance threshold process may provide the optimal power solution at . Optionally at process may store the optimal power solution as well. Alternatively if the percent difference is less than the received tolerance threshold process may set the previously locked variable to the most recently calculated actual value for that variable at . Following the same example as above at process may lock the head variable by setting it to the most recently calculated actual value. At process may once again solve for optimal power linearly this time using the most recently calculated actual value.

At process may calculate a next actual value for the newly locked variable. Process may then determine the difference between the calculated actual value from and the next actual value calculated at to determine a percent difference. Again process will determine whether the difference this time between the calculated actual value from and the next actual value from is greater than the received tolerance threshold. As seen here process iterates from to and back to until the desired tolerance is reached. In this way both speed and accuracy can be controlled by selecting appropriate tolerance and iteration thresholds.

Process includes receiving inputs to a non linear equation for calculating power at . At process may set the head variable to an estimated head value. Process may solve a linear equation to produce a power solution based on the estimated head value at . At process may calculate an actual head based at least indirectly on the estimated head. In one example the actual head is calculated by determining a flow rate and turbine efficiency for the original estimated head. In another example however the actual head is calculated by using historical data from a hydro system. At process may compare the calculated head to a predetermined tolerance threshold. In one aspect this comparison involves determining a percent difference between the estimated head and the actual head and comparing the difference against the tolerance threshold.

At process may determine whether the calculated head is within the predetermined threshold. Generally being within a threshold implies that the percent difference between the actual and estimated head values is less than the tolerance threshold when the tolerance threshold is represented as a percentage. If at process determines that the calculated head or percent difference is within the tolerance threshold process may provide the power solution at . On the other hand if the calculated head or percent difference is still greater than the tolerance threshold process may iteratively re calculate the power solution using the previously calculated head value at and return to for calculating a next actual head value based at least in part on the most recently calculated head. Here as in process the iterative process may continue until the tolerance threshold is satisfied.

Process includes receiving a request to calculate an optimal power solution for a hydroelectric turbine at . At process may begin an iterative estimation process for calculating an optimal power solution. Iterative estimation at may include determining a first estimated power based at least in part on a first estimated head value at and determining subsequent estimated power solutions based at least in part on a calculated head value at .

At process may decide whether the percent difference between the estimated value and the calculated value is within a tolerance. If not at process may determine whether an iteration threshold has been reached. If the percent difference is not within the tolerance at and the iteration threshold is not reached at process may return to to implement another iterative estimation. On the other hand if either the percent difference is within the tolerance at or the iteration threshold is reached at process may end the iterative estimation at .

Although embodiments have been described in language specific to structural features and or methodological acts it is to be understood that the disclosure is not necessarily limited to the specific features or acts described. Rather the specific features and acts are disclosed as illustrative forms of implementing the embodiments.

