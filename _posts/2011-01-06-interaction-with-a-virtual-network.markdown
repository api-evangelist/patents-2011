---

title: Interaction with a virtual network
abstract: Systems and method for the management of virtual machine instances are provided. A network data transmission analysis system can host virtual machine networks. A component of a hosted virtual machine network is configured in a manner to receive commands directed towards a simulated network device. The component may then execute a process or processes on the hosted virtual machine network which correspond to the received command.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09009217&OS=09009217&RS=09009217
owner: Amazon Technologies, Inc.
number: 09009217
owner_city: Seattle
owner_country: US
publication_date: 20110106
---
Generally described computing devices utilize a communication network or a series of communication networks to exchange data. Companies and organizations operate computer networks that interconnect a number of computing devices to support operations or provide services to third parties. The computing systems can be located in a single geographic location or located in multiple distinct geographic locations e.g. interconnected via private or public communication networks . Specifically data centers or data processing centers herein generally referred to as a data center may include a number of interconnected computing systems to provide computing resources to users of the data center. The data centers may be private data centers operated on behalf of an organization or public data centers operated on behalf or for the benefit of the general public.

To facilitate increased utilization of data center resources virtualization technologies may allow a single physical computing device to host one or more instances of virtual machines that appear and operate as independent computing devices to users of a data center. With virtualization the single physical computing device can create maintain delete or otherwise manage virtual machines in a dynamic matter. In turn users can request computer resources from a data center including single computing devices or a configuration of networked computing devices and be provided with varying numbers of virtual machine resources.

Generally physical networks include a number of hardware devices that receive packets from a source network component and forward the packets to designated recipient network components. In physical networks packet routing hardware devices are typically referred to as routers which are implemented on stand alone computing devices connected to a physical network. With the advent of virtualization technologies networks and routing for those networks can now be simulated using commodity computing devices rather than actual routers.

Specifically in one aspect individuals such as system administrators wishing to manage a physical network may be familiar with specific methods of interfacing with network devices. For example a routing device may provide a command line interface for administration of the router s functions. However simulated routing devices implemented via virtual instances in a virtual network would not necessarily allow such interfaces.

Generally described aspects of the present disclosure relate to the management of virtual machine instances. Specifically systems and methods are disclosed which facilitate user interaction with virtual networks in a manner similar to interaction with physical networks. In one aspect a networking device interface is simulated by a component of virtual network. A user may access the simulated networking device interface and interact with the virtual network in such a manner that the virtualization of the network is transparent to the user. For example a virtual network may be configured to simulate a physical network having physical devices connected via a physical router. Illustratively the function of the simulated router may be implemented within the virtual network without the need to simulate the router or without any consideration of the actual routing within the virtual network. The user may attempt to send commands to the simulated router interface using an expected interface methods for instance a command line interface. In this aspect an interface component of the virtual network may receive the command and determine the appropriate process or processes corresponding to the received command to be executed within the virtual network. The interface component may where appropriate send a response to the user indicating the results of the command. Illustratively a user may transmit a command requesting that statistical information regarding the operation of the network such as hop times or packet loss be displayed. The component may according to the command determine an appropriate process or processes to be implemented by components of the virtual network in order to obtain the desired information. The interface component would then return the information to the user. In some embodiments this information may be further formatted in accordance with the simulated router interface. As a further illustration the interface component may serve to allow the user to alter simulated routing functionality. For example a user may transmit a command to the simulated router interface specifying that traffic from various simulated network components be shaped in a specified manner. The interface component of the virtual network would then determine an appropriate process or processes to be implemented by components of the virtual network in order to simulate the user s desired functionality.

The following section discusses various embodiments of managed networks for network data transmission analysis. Following that is further discussion of network data transmission analysis systems and methods that can implement management methodologies established by a network user.

With the advent of virtualization technologies networks and routing for those networks can now be simulated using commodity hardware components. For example virtualization technologies can be adapted to allow a single physical computing machine to be shared among multiple virtual networks by hosting one or more virtual machines on the single physical computing machine. Each such virtual machine can be a software simulation acting as a distinct logical computing system that provides users with the illusion that they are the sole operators and administrators of a given hardware computing resource. In addition as routing can be accomplished through software additional routing flexibility can be provided to the virtual network in comparison with traditional routing. As a result in some implementations supplemental information other than packet information can be used to determine network routing.

Aspects of the present disclosure will be described with regard to illustrative logical networking functionality for managed computer networks such as for virtual computer networks that are provided on behalf of users or other entities. In at least some embodiments the techniques enable a user to configure or specify a network topology routing costs routing paths and or other information for a virtual or overlay computer network including logical networking devices that are each associated with a specified group of multiple physical computing nodes. For example a user e.g. a network administrator for an organization or service provider may configure a virtual or overlay network based on detected events processing criteria or upon request. With the network configuration specified for a virtual computer network the functionally and operation of the virtual network can be simulated on physical computing nodes operating virtualization technologies. In some embodiments multiple users or entities e.g. businesses or other organizations can access the system as tenants of the system each having their own virtual network in the system. In one embodiment a user s access and or network traffic is transparent to other users. For example even though physical components of a network may be shared a user of a virtual network may not see another user s network traffic on another virtual network if monitoring traffic on the virtual network. Logical functionality of a managed computer network may be discussed with reference to substrate components. In an illustrative embodiment of the present disclosure a substrate component can refer to one or more physical computing devices which allow the implementation of the discussed logical functionality. Where reference is made to a substrate network such reference refers to one or more networked substrate components.

By way of overview discuss embodiments where communications between multiple computing nodes of the virtual computer network emulate functionality that would be provided by logical networking devices if they were physically present. In some embodiments some or all of the emulation are performed by an overlay network manager system. and B discuss embodiments where substrate routing decisions can be made independently of any simulated routing in the overlay network allowing for example optimization of traffic on the substrate network based on information unavailable to a virtual network user. discuss embodiments where routing decisions implemented on the virtual or overlay network are propagated to the substrate network. One skilled in the relevant art will appreciate however that the disclosed virtual computer network is illustrative in nature and should not be construed as limiting.

The illustrated example includes an example data center with multiple physical computing systems operated on behalf of the ONM system. The example data center is connected to a global internet external to the data center . The global internet can provide access to one or more computing systems via private network to one or more other globally accessible data centers that each have multiple computing systems and to one or more other computing systems . The global internet can be a publicly accessible network of networks such as the Internet and the private network can be an organization s network that is wholly or partially inaccessible from computing systems external to the private network . Computing systems can be home computing systems or mobile computing devices that each connects directly to the global internet e.g. via a telephone line cable modem a Digital Subscriber Line DSL cellular network or other wireless connection etc. .

The example data center includes a number of physical computing systems and a Communication Manager module that executes on one or more other computing systems. The example data center further includes a System Manager module that executes on one or more computing systems. In this example each physical computing system hosts multiple virtual machine computing nodes and includes an associated virtual machine VM communication manager module e.g. as part of a virtual machine hypervisor monitor for the physical computing system . Such VM communications manager modules and VM computing nodes include VM Communication Manager module and virtual machines on host computing system and VM Communication Manager module and virtual machines on host computing system

This illustrative data center further includes multiple physical networking devices such as switches edge router devices and core router devices . Switch is part of a physical sub network that includes physical computing systems and is connected to edge router . Switch is part of a distinct physical sub network that includes the System Manager module and is connected to edge router . The physical sub networks established by switches in turn are connected to each other and other networks e.g. the global internet via an intermediate communication network which includes the edge routers and the core routers . The edge routers provide gateways between two or more sub networks or networks. For example edge router provides a gateway between the physical sub network established by switch and the interconnection network while edge router provides a gateway between the interconnection network and global internet . The core routers manage communications within the interconnection network such as by routing or otherwise forwarding packets or other data transmissions as appropriate based on characteristics of such data transmissions e.g. header information including source and or destination addresses protocol identifiers etc. and or the characteristics of the interconnection network itself e.g. routes based on the physical network topology etc. .

The System Manager module and Communication Manager module can configure authorize and otherwise manage communications between associated computing nodes including providing logical networking functionality for one or more virtual computer networks that are provided using the computing nodes. For example Communication Manager module and manages associated virtual machine computing nodes and and each of the other Communication Manager modules can similarly manage communications for a group of one or more other associated computing nodes. The Communication Manager modules can configure communications between computing nodes so as to overlay a virtual network over one or more intermediate physical networks that are used as a substrate network such as over the interconnection network .

Furthermore a particular virtual network can optionally be extended beyond the data center such as to one or more other data centers which can be at geographical locations distinct from the first data center . Such data centers or other geographical locations of computing nodes can be inter connected in various manners including via one or more public networks via a private connection such as a direct or VPN connection or the like. In addition such data centers can each include one or more other Communication Manager modules that manage communications for computing systems at that data. In some embodiments a central Communication Manager module can coordinate and manage communications among multiple data centers.

Thus as one illustrative example one of the virtual machine computing nodes on computing system can be part of the same virtual local computer network as one of the virtual machine computing nodes on computing system . The virtual machine can then direct an outgoing communication to the destination virtual machine computing node such as by specifying a virtual network address for that destination virtual machine computing node. The Communication Manager module receives the outgoing communication and in at least some embodiments determines whether to authorize the sending of the outgoing communication. By filtering unauthorized communications to computing nodes network isolation and security of entities virtual computer networks can be enhanced.

The Communication Manager module can determine the actual physical network location corresponding to the destination virtual network address for the communication. For example the Communication Manager module can determine the actual destination network address by dynamically interacting with the System Manager module or can have previously determined and stored that information. The Communication Manager module then re headers or otherwise modifies the outgoing communication so that it is directed to Communication Manager module using an actual substrate network address.

When Communication Manager module receives the communication via the interconnection network it obtains the virtual destination network address for the communication e.g. by extracting the virtual destination network address from the communication and determines to which virtual machine computing nodes the communication is directed. The Communication Manager module then re headers or otherwise modifies the incoming communication so that it is directed to the destination virtual machine computing node using an appropriate virtual network address for the virtual computer network such as by using the sending virtual machine computing node s virtual network address as the source network address and by using the destination virtual machine computing node s virtual network address as the destination network address. The Communication Manager module then forwards the modified communication to the destination virtual machine computing node . In at least some embodiments before forwarding the incoming communication to the destination virtual machine the Communication Manager module can also perform additional steps related to security.

Further the Communication Manager modules and or on the host computing systems and can perform additional actions that correspond to one or more logical specified router devices lying between computing nodes and in the virtual network topology. For example the source computing node can direct a packet to a logical router local to computing node e.g. by including a virtual hardware address for the logical router in the packet header with that first logical router being expected to forward the packet to the destination node via the specified logical network topology. The source Communication Manager module receives or intercepts the packet for the logical first router device and can emulate functionality of some or all of the logical router devices in the network topology such as by modifying a TTL time to live hop value for the communication modifying a virtual destination hardware address and or otherwise modify the communication header. Alternatively some or all the emulation functionality can be performed by the destination Communication Manager module after it receives the packet.

By providing logical networking functionality the ONM system provides various benefits. For example because the various Communication Manager modules manage the overlay virtual network and can emulate the functionality of logical networking devices in certain embodiments specified networking devices do not need to be physically implemented to provide virtual computer networks allowing greater flexibility in the design of virtual user networks. Additionally corresponding modifications to the interconnection network or switches are generally not needed to support particular configured network topologies. Nonetheless a particular network topology for the virtual computer network can be transparently provided to the computing nodes and software programs of a virtual computer network.

In this example computing nodes A and H are part of a single virtual computer network for entity Z. However computing nodes can be configured to be part of two distinct sub networks of the virtual computer network and the logical router devices and separate the computing nodes A and H in the virtual network topology. For example logical router device J can be a local router device to computing node A and logical router device L can be a local router device to computing node H.

In computing nodes A and H includes hardware addresses associated with those computing nodes for the virtual computer network such as virtual hardware addresses that are assigned to the computing nodes by the System Manager module and or the Communication Manager modules R and S . In this example computing node A has been assigned hardware address 00 05 02 0B 27 44 and computing node H has been assigned hardware address 00 00 7D A2 34 11. In addition the logical router devices J and L have also each been assigned hardware addresses which in this example are 00 01 42 09 88 73 and 00 01 42 CD 11 01 respectively as well as virtual network addresses which in this example are 10.0.0.1 and 10.1.5.1 respectively. The System Manager module maintains provisioning information that identifies where each computing node is actually located and to which entity and or virtual computer network the computing node belongs.

In this example computing node A first sends an address resolution protocol ARP message request for virtual hardware address information where the message is expected to first pass through a logical device J before being forwarded to computing node H. Accordingly the ARP message request includes the virtual network address for logical router J e.g. 10.0.0.1 and requests the corresponding hardware address for logical router J.

Communication Manager module R intercepts the ARP request and obtains a hardware address to provide to computing node A as part of spoofed ARP response message . The Communication Manager module R can determine the hardware address by for example looking up various hardware address information in stored mapping information which can cache information about previously received communications. Communication Manager module R can communicate with the System Manager module to translate the virtual network address for logical router J.

The System Manager module can maintain information related to the topology and or components of virtual computer networks and provide that information to Communication Manager modules. The Communication Manager module R can then store the received information as part of mapping information for future use. Communication Manager module R then provides computing node A with the hardware address corresponding to logical router J as part of response message . While request and response message actually physically pass between computing node A and Communication Manager module R from the standpoint of computing node A its interactions occur with local router device J.

After receiving the response message computing node A creates and initiates the sending of a communication to computing node H . From the standpoint of computing node A the sent communication will be handled as if logical router J were physically implemented. For example logical router J could modify the header of the communication and forward the modified communication to logical router L which would similarly modify the header of the communication and forward the modified communication to computing node H. However communication is actually intercepted and handled by Communication Manager module R which modifies the communication as appropriate and forwards the modified communication over the interconnection network to computing node H by communication . Communication Manager module R and or Communication Manager module S may take further actions in this example to modify the communication from computing node A to computing node H or vice versa to provide logical networking functionality. For example Communication Manager module S can provides computing node H with the hardware address corresponding to logical router L as part of response message by looking up the hardware address in stored mapping information . In one embodiment a communication manager or computing node encapsulates a packet with another header or label where the additional header specifies the route of the packet. Recipients of the packet can then read the additional header and direct the packet accordingly. A communication manager at the end of the route can remove the additional header.

A user or operator can specify various configuration information for a virtual computer network such as various network topology information and routing costs associated with the virtual and or substrate network . In turn the ONM System Manager can select various computing nodes for the virtual computer network. In some embodiments the selection of a computing node can be based at least in part on a geographical and or network location of the computing node such as an absolute location or a relative location to a resource e.g. other computing nodes of the same virtual network storage resources to be used by the computing node etc. . In addition factors used when selecting a computing node can include constraints related to capabilities of a computing node such as resource related criteria e.g. an amount of memory an amount of processor usage an amount of network bandwidth and or an amount of disk space and or specialized capabilities available only on a subset of available computing nodes constraints related to costs such as based on fees or operating costs associated with use of particular computing nodes or the like.

In nodes A B C and D are associated with a respective Communication Manager module and . The communication manager modules can implement certain of the features described in the Communication Manager and VM Communication manager of . For example the Communication Manager module for node A can operate on a hypervisor monitor of the computing node and can direct the communication of one or more virtual computing nodes of node A. The computing nodes communication managers and Route Manager can be part of the same ONM system. In one embodiment the computing nodes run the XEN operating system OS or similar virtualization OS with the communication managers operating on domain 0 or the first OS instance and the virtual computing nodes being domain U or additional OS instances.

The communication manager modules in are in communication with a Route Manager module operating on one or more computing devices that directs routing for the substrate network . In one embodiment the Route Manager operates as part of the ONM System Manager module of with functionally combined into a single module. The Route Manager can be located within a data center or at a regional level and direct traffic between data centers. In one embodiment multiple Route Managers can operate in a distributed manner to coordinate routing across multiple data centers.

In two virtual networks are associated with the substrate network . Virtual network 1 VN1 has components associated with virtual computing nodes on computing nodes A B and C . Virtual network 2 VN2 has components associated with virtual computing nodes on nodes A C and D .

As the Routing Manager module directs network traffic on the substrate network traffic can be directed flexibly and various network configurations and network costs can be considered. For example routing paths can be determined based on specified performance levels for the virtual networks. In one embodiment if the user for VN1 is entitled to a higher service level such as for faster speed e.g. lower latency and or higher bandwidth traffic associated with VN1 can be routed on a fast path of the substrate network . For example in one embodiment traffic for platinum users is prioritized over traffic for gold and silver users with traffic from gold users prioritized over silver users. In one embodiment at least some packets of the user with the higher service level are prioritized over packets of a user with a lower service level for example during times of network congestion. The user may be entitled to a higher level because the user has purchased the higher service level or earned the higher service level through good behavior such as by paying bills complying with the operator s policies and rules not overusing the network combinations of the same or the like.

The Route Manager can store user information or communicate with a data store containing user information in order to determine the target performance level for a virtual network. The data store can be implemented using databases flat files or any other type of computer storage architecture and can include user network configuration payment data user history service levels and or the like. Typically the Route Manager will have access to node and or link characteristics for the substrate nodes and substrate links collected using various network monitoring technologies or routing protocols. The Route Manager can then select routes that correspond to a selected performance level for the virtual network and send these routes to the computing nodes. For example network W and Y can be built on fiber optic lines while network Y and Z are built on regular copper wire. The Route Manager can receive network metrics data and determine that the optical lines are faster than the copper wires or an administrator can designate the optical lines as a faster path . Thus the Route Manager in generating a route between node A and node C for fast VN1 traffic would select a path going through network W and Y e.g. path A B C .

In another situation where the user for VN2 is not entitled to a higher service level VN2 traffic from node A to node B can be assigned to a slow or default path through network Y and Z e.g. path A D C . In order to track routing assignments the Routing Manager can maintain the routes and or route association in a data store such as a Routing Information Base RIB or routing table . The Route Manager can also track the target performance criteria associated with a particular virtual network.

In order to direct network traffic on the substrate network the Routing Manager can create forwarding entries for one or more of the Communication Manager modules that direct how network traffic is routed by the Communication Manager. The Communication Manager modules can store those entries in forwarding tables or other similar data structure associated with a Communication Manager. For example for VN1 the Route Manager can generate a control signal or message such as a forwarding entry that directs VN1 traffic received or generated on node A through network W on path A B C . Meanwhile for VN2 the Route Manager can generate a control signal or message such as a forwarding entry which directs traffic received on node A through network Z. The Route Manager can send these forwarding entries to the node A Communication Manager which can store them on its forwarding table . Thus network traffic associated with VN1 and VN2 destined for node C received or generated on node A can travel by either path A B C or path A D C based on the designated performance level for VN1 and VN2.

While the example of depicts only two virtual networks the Route Manager can similarly generate and maintain routes for any number of virtual networks. Likewise the substrate network can include any number of computing nodes and or physical network devices. Routes can be determined based on multiple performance criteria such as network bandwidth network security network latency and network reliability. For example traffic for a virtual network suspected of being used for spamming e.g. mass advertisement emailing can be routed through network filters and scanners in order to reduce spam.

In some embodiments the Route Manager or System Manager can optimize or otherwise improve network traffic using other techniques. For example with reference to another instance of I3 can be operated on node B in addition to the instance of I3 on node A. Thus virtual network traffic from I5 I2 I3 and I4 I1 I3 can remain on the same computing node without having to send traffic between computing nodes A and B. In one embodiment substrate traffic can be optimized or otherwise improved without having different forwarding entries on the substrate and the virtual network. For example with reference to I4 can be moved from computing node B to node A thus allowing virtual traffic from I5 and I4 to I2 to remain on the same computing node. In this way a user monitoring traffic on logical router would see that traffic is flowing according the forwarding table in the router that is substrate routing is transparent to the user. Other techniques for optimizing traffic by changing the association of virtual components with virtual machines and or duplicating components can also be used.

In some situations it can be desired that substrate routes reflect routes specified in the virtual table. For example the virtual network user can wish to control how traffic is routed in the substrate network. However rather than giving the user access to the substrate network which could put other users at risk or otherwise compromise security a data center operator can propagate network configuration or virtual network characteristics specified by the user for the virtual network to the substrate network. This propagated data can be used in generating routing paths in the substrate network thus allowing the user to affect substrate routing without exposing the substrate layer to the user.

A user may wish to specify a route for various reasons. For example routing costs through LN2 can be cheaper than LN3 such as when LN2 and LN3 are in different locations with different ISPs and one ISP charges lower rates than another. In another example LN3 can be a backup virtual network for LN2 and used only in some situations such as for handling overflow from LN2.

Referring back to the user can specify preferred routes through the virtual network and or characteristics or costs associated with the virtual components such as monetary costs packet loss rates reliability rate and or other metrics. These characteristics can be assigned to the virtual components such as the virtual computing nodes node links logical routers switches or the like. The Route Manager can then determine routing tables and or forwarding tables for the virtual network.

The network translation devices can serve as a gateway or entry exit point into the virtual network. In some embodiments the network translation devices can translate between a first addressing protocol and a second addressing protocol. For example if the virtual network is using IPv6 and the external networks are using IPv4 the network translation devices can translate from one addressing protocol to the other for traffic in either direction. In one embodiment users connect from their private networks to the data centers via a VPN or other connection to a network translation device which translates and or filters the traffic between networks.

Referring back to network C connects data center 2 to NTD A . Network D connects data center 3 to NTD B . The Route Manager module is in communication with data center 1 data center 2 and data center 3 particularly with the Communication Manager for the computing node .

From information associated with the virtual network the Route Manager can determine that the user wants to route traffic from LN1 to LN2. The Route Manager can then favor substrate routes associated with the LN1 to LN2 virtual path. For example the Route Manager can specify a low routing cost e.g. cost 1 for communications such as data packets travelling on Network C relative to Network D e.g. cost 10 such that during route determination routes through Network C are favored. In one embodiment the Route Manager can apply a coefficient to stored substrate costs in order to favor one route over another. In another example explicit routing paths can be set up corresponding to the virtual route. The Route Manager can identify routes in its routing table and communicate those routes with one or more Communication Managers.

Referring back to when the computing node receives or generates a packet destined for LN2 or a network reachable from LN2 the computing node can be configured by the Route Manager to send packets through NTD A as it lies on the route including network C .

By propagating virtual network configuration data to the substrate and using that configuration data in substrate route calculation a mechanism is provided for a virtual network user to affect substrate routing. In some embodiments the virtual configuration data can be used in determining association of the virtual components with the substrate components. For example components of the same virtual network can be associated with the same substrate computing node or on computing nodes connected to the same switch in order to minimize or otherwise improve substrate network traffic. Configuration data can also be provided the other way and in some embodiments the user and or virtual network can be provided with additional substrate information such as characteristics of the underlying associated substrate components e.g. performance costs in order to make more informed routing decisions.

In the Route Manager receives a network configuration or determines that route A B C is preferred or has a cheaper cost. The Route Manager can store the route in a routing table . The Route Manager can then send forwarding entries to the NTD B that configure it to send traffic through network C . NTD B can contain multiple forwarding entries for multiple virtual networks such that data for one virtual network can be sent through network C while another virtual network sends data through network D. In some cases network packets with the same source and or destination are sent by different networks based on the associated virtual network.

In some embodiments the substrate component may not have a Communication Manager or a Route Determination module and other ways of coordinating routing can be used. For example a substrate component such as an ordinary router or a network translation device can be set up multiply on separate paths. Using blacklists network traffic for a particular virtual network can be allowed on one path but blocked on others. The Route Manager can send a control signal or message updating the blacklists to manage the data flow.

In other embodiments substrate components can implement IP aliasing where for example fast path packets use one set of IP addresses while slow path packets use another set of IP addresses. When the substrate component receives the packet it can determine which path to use based on the IP address. The Route Manager can send a control signal or message to assign IP addresses to the components based on the type of traffic handled.

Other ways of differentiating how packets are handled by substrate components include tagging of packets such as by Multiprotocol Label Switching MPLS MAC stacking where a packet could have multiple MAC addresses the first MAC address for a substrate component such as a switch and a second MAC address for a next component either on the fast or the slow path and using Network Address Translation NAT devices on both ends of a network in order to redirect traffic into the network such as by spoofing or altering an destination address for an incoming packing and or altering an the source address of an outgoing packet. In some embodiments the Route Manager generates control signals or messages for coordinating traffic on the substrate network for the various techniques described above.

At block the Route Manager module receives user configuration and or network configuration data such as for example policy based routing decisions made by the user. In some embodiments a user interface is provided allowing a user to specify configuration data. The Route Manager can receive the configuration data from a data store for example if user configuration and or network configuration data are stored on the data store after being received on the user interface or otherwise generated. In some embodiments the configuration data can include explicit routing paths through the virtual network. In some embodiments the configuration data can specify associated costs for traversing components of the virtual network such as links and or nodes. These costs can be based on monetary costs packet loss rates reliability rate and or other metrics. These costs can be provided by the user to configure the virtual network provided by the data center operator. However costs and other network configuration data can come from the data center operator themselves in addition to or instead of from the user. For example the data center operator can use the virtual network to provide feedback to the user on routing costs such as by associating monetary use costs for the substrate computing nodes and or components. In one example the data center operator can specify a high cost for a high speed network link or high powered computing node so that the virtual network user can take into account that cost in configuring the virtual network.

At block the Route Manager module determines virtual network routes based on the user configuration and or network configuration data. In some embodiments routing protocols or the route determination algorithms of the routing protocols such as BGP OSPF RIP EIGRP or the like can be used to determine virtual routes.

At block the Route Manager determines one or more forwarding entries for substrate network components such as computing nodes network translation devices or the like. As the Route Manager can determine routing paths and propagate routing decisions to the substrate components the Route Manager can coordinate routing within a data center and or between multiple data centers.

At block the Route Manager transmits the forwarding entries to the substrate components. At block the substrate component receives the forwarding entries. The substrate network components can store the forwarding entries in FIB tables or similar structures. Generally a Communication Manager on the substrate component receives and processes the forwarding entry and manages communications of the substrate component.

However as discussed above network traffic can also be coordinated for substrate components without a Communication Manager using instead for example a NAT device or the like. In some embodiments the Route Manager can send blacklist updates manage tagging of the packets generate stacked MAC addresses or the like.

At block the substrate components route packets received or generated according to the stored forwarding entries. Generally a Communication Manager on the substrate component manages the packet routing and refers to the forwarding entries to make forwarding decisions.

At block the Route Manager receives characteristics of the substrate nodes and or node links. The Route Manager can receive the characteristics data from a data store. In some embodiments a user interface is provided allowing a user to specify characteristics data. The characteristics can describe such things as monetary costs network bandwidth network security network latency network reliability and or the like. These characteristics can be used in a cost function for determining substrate routing paths. This information can be kept by the Route Manager or data source accessible by the Route Manager.

At block the Route Manager receives a target network performance for the virtual network. The target performance can be based on a purchased service level by the user user history security data or the like. For example a service level purchased by a user can have minimum bandwidth latency or quality of service requirements. In another example a user can be a new customer with an unknown payment history such that the user is provisioned on a slow virtual network in order to minimize incurred expenses in case the user fails to pay. In another example a user identified as carrying dangerous or prohibited traffic such as viruses spam or the like can be quarantined to particular substrate components. During quarantine the virtual network components can be assigned to specialized substrate components with more robust security features. For example the substrate components can have additional monitoring functionally such as a deep packet scanning ability or have limited connectivity from the rest of the substrate network.

At block the Route Manager determines substrate network routes based on the target network performance and or characteristics of the substrate nodes and or links. In one embodiment the Route Manager can use the characteristic data in a cost function for determining routes. Which characteristic to use or what level of service to provide can be determined by the performance criteria or target performance. For example for a fast route the Route Manager can use bandwidth and or latency data for the substrate network to generate routes that minimize latency maximize available bandwidth and or otherwise improve network performance.

The Route Manager can re determine routes as needed based on changes in the network the configuration data and or the performance level. For example if a user has purchased N gigabits of fast routing but has reached the limit the Route Manager can generate new routes and shift the user to slow routing.

At block the Route Manager transmits forwarding entries for one or more routes to one or more nodes and or network translation devices. In some embodiments the Route Manager determines forwarding entries for the substrate components and sends those forwarding entries to the substrate components on the path. In some embodiments the Route Manager can send blacklist updates manage tagging of data packets and or generate stacked MAC addresses.

At block the Route Manager can optionally update the virtual routing table based on substrate network routes. By changing the virtual network routing table based on the substrate routes the virtual network can stay logically consistent with the behavior of the substrate network. Thus users will not necessarily be confused by discrepancies in the virtual routing.

With reference now to various embodiments for interaction with a virtual network will be described. With reference to a system for interaction with a virtual network topology simulated within the substrate network of is illustrated. The virtual network topology includes any number of logical network components in connection with a logical gateway . The logical components can correspond to one or more physical computing devices typically associated with a physical network such as network devices server devices storage devices and the like. As described previously both the logical gateway and the logical network components may be simulated by physical components of the substrate network . In a manner similar to as described above with reference to the substrate network is connected to an external communications network which is in turn connected to a client computing system . Though for illustrative purposes a single client computing system is shown one of ordinary skill in the art will appreciate that any number of client computing systems may interact with the substrate network .

The logical gateway may obtain commands from a client computing system via the external communications network . Illustratively a client computing device may transmit commands typically associated with the management of a physical computing network. In one aspect the client computing device commands might correspond to passive reporting commands that return information regarding the routing of data or the status of network components . Examples include but are not limited to commands for statistical information regarding the flow of data between network components commands for information corresponding to the current or past status of the logical gateway or commands for retrieval of data transmitted by the logical gateway . In another aspect the client computing device requests can correspond to active commands that modify functional aspects of the logical gateway . Examples include but are not limited to commands to alter interfaces of the logical gateway commands to shape data flowing through logical gateway or commands to alter user configurations stored on the logical gateway . Additionally though system depicts a logical gateway one of ordinary skill in the art will appreciate that substrate network may simulate any number of networking devices including routers multilayer switches and any networking device capable of interaction with a client computing device . Additionally the substrate network may simulate the functionality of networking equipment such as routers without simulating the network device.

As will be described in more detail below once a command is received at the logical gateway a set of processes are determined which are executed by physical components of the substrate network. As will be discussed in more detail below the set of processes are determined by mapping the received command to the set of processes such that the user obtains an expected result from the network simulated by the substrate network . For example a user may issue a command requesting traffic data for all traffic from network component through gateway . In the substrate network logical gateway may be simulated by a number of physical components. For example traffic from network components may flow through substrate physical networks and of .

In some embodiments as is described above traffic which is simulated to originate from network components may have flow through different networks or network components at different time periods as is determined by the substrate network . As such the requested traffic data may not exist completely within any individual component of the substrate network . The logical gateway functions in part to determine which components of the substrate network contain the user requested data. One this determination is made the data may be collected from the various physical components and the information may be returned to the client computing system .

With reference now to a simplified block diagram of the substrate network of will be described for purposes of illustrating the interaction between various components of the substrate network. However one skilled in the relevant art will appreciate that illustrative interaction and communications may include or otherwise involve additional components not illustrated in the illustrative drawing figures.

The substrate network includes a number of physical computing systems that host one or more virtual machine instances . As will be explained in greater detail the number of virtual machine instances hosted on each physical computing system can vary according to the computing device resources associated with each individual physical computing system and in accordance with the management policies of the substrate network . The substrate network also includes a virtual machine manager component such as ONM system manager for managing the allocation of virtual machine instances on the various physical computing systems . Although the virtual machine manager component is illustrated with regard to functionality implemented by a component of the substrate network in an alternative embodiment the virtual machine manager component may be implemented as a stand alone component of the substrate network integrated into a single physical computing system or distributed as functionality implemented among multiple physical computing devices .

In communication with the ONM system manager is an interface module for obtaining requests from various client computing systems via an external communication network such as external communications network of . The interface module can obtain various commands from the client computing system . For example the interface module may simulate the client interface to logical gateway of . The interface module can then facilitate interaction with the substrate network and the physical computing devices . Illustratively the interface module may obtain commands from the client computing systems via multiple interface methods such as simple network management protocol SNIP or command line interface CLI . Although the interface module is illustrated with regard to functionality implemented by a component of the substrate network in an alternative embodiment the interface module may be implemented as a stand alone component of the substrate network integrated into a single physical computing system or distributed as functionality implemented among multiple physical computing devices .

In addition though a single interface module is illustrated some aspects of the present disclosure include multiple interface modules . Such interface modules may communicate in order to implement desired functionality. In some embodiments an interface module may be configured to operate under a specific interface or protocol. For example a first interface module may function to receive commands via a CLI while a second interface module may receive commands via SNMP. As will be appreciated by one of ordinary skill in the art multiple interface modules may be implemented in a variety of manners.

Also in communication with the interface module is one or more storage nodes for archiving or storing information associated with the mapping of client commands into processes. The storage nodes can correspond to various storage media including physical storage media associated specifically with the substrate network . Additionally or alternatively the storage nodes can correspond to various network based storage networks accessible to the substrate network via a communication network.

As shown in the client computing system transmits a command to substrate network . Illustratively the client may transmit a command requesting that logical gateway of redirect all incoming data directed towards network component of to network component of . This request would then be received by interface module . Secondly the interface module maps the received command to a set of processes using information stored within the storage node . For example the storage node may contain information regarding the virtual machine or machines that function in the simulation of network components and . Illustratively the simulation of some functions such as routing functions may not actually be simulated until a command has been received corresponding to the requested routing function. In this example the interface module may determine that new routing information must be sent to one or more virtual machines or their corresponding ONM system managers . Third the interface module causes the execution of the determined processes on the required components of substrate network . Illustratively this may include sending calls to the substrate network via established Application Protocol Interfaces APIs provided by the substrate network . Fourth the interface module generates a set of results based on the executed processes. In the current example this may include responses from an ONM system manager or virtual machines that the new routing information has been received and processed. In the fifth step the interface module transmits the generated results to the client computing system .

With reference now to a flow diagram illustrative of a virtual networking device interface routine executed by an interface module such as interface module will be described. Illustratively routine can be implemented upon determination that a client computing device wishes to interact with a simulated network device such as logical gateway . At block the interface module obtains a command from a client computing device to log on to the simulated gateway . In some embodiments this request may be obtained through various protocols such as via secure shell SSH . In some embodiments the simulated network component with which the client computing device wishes to interact may be determined based on the network address such as an IP address on which a request is received. In other embodiments a simulated network component may be identified based on the log on credentials supplied by the client computing device .

Once a log on request is received the interface module may in some embodiments determine whether the user is authorized to log on. In some embodiments this determination may not occur until configurations are obtained at block . In other embodiments information pertaining to log on requests may be stored separately from client configuration such as in a storage node . If based on the information pertaining to log on requests the interface module determines that the log on request is unauthorized the interface module may end the networking device interface routine. In these embodiments if a log on request is determined to be authorized the routine continues at block .

At block the network configuration client configuration and client permissions are obtained by the interface module . These obtained items allow the function of the interface module to be altered according to the desires of the user or the administrator of the substrate network . For example the client configuration may include information pertaining to the client s interaction with the interface module such as a preferred style of user interface. Additionally the client configuration may contain customized commands which facilitate specialized interaction with the substrate network . In some embodiments the client configuration may include other client data such as provided contact information of the client. Client permissions may specify which commands or results a client is authorized to access. In some embodiments client permissions may specify multiple clients which may access various aspects of the interface module according to the permissions accorded to each client. Such client permissions might be specified by the operator of the substrate network or designated users of the virtual network. The network configuration may contain information regarding the simulated network the substrate network or both. The interface module may use this information for instance to determine which functions a client computing device may invoke or to determine which network devices to allow interaction with. These configurations may be stored in a storage node such as storage nodes . In some embodiments a client computing device may transmit a client configuration or client permissions to the interface module within the obtained request.

Optionally at block a user interface may be caused to be presented on the client computing device . The style of the user interface may be determined based on the client configuration obtained at block . For example a client may prefer to interact with the interface module via a command line interface. The style of interface can be further simulated such that the interface provided to a user is similar to the interface provided by a specific type of networking device or similar to a particular network operating system. In some embodiments a user interface may not be desired or even required such as where the client is already provided with a user interface via an application on the client computing device .

At block a command is received from the client computing device . As discussed above the user may transmit a command requesting that logical gateway redirect all incoming data directed towards network component to network component or that statistical data regarding traffic on logical gateway be returned to the user. In some embodiments the client command may correspond to a request that a simulated component configure a new interface or protocol. As previously discussed this command may relate to any command which may be received on the networking device which is simulated.

At block a set of processes are determined based on the command and the various configurations. As discussed above these processes may be determined based on mapping information stored within a storage node such as storage node . For example the storage node may contain information regarding to the virtual machines or ONM system manager which simulate network components and . The storage node may further contain information allowing user commands to be mapped into specific processes. For example a user command to show IP routes may based on information within the storage node be mapped to the command which would return a routing table of a virtual machine or a ONM system manager . Such mapping information may be specific to a virtual machine or ONM system manager such that show ip routes may result in an Application Protocol Interface API calls when implemented by some components or SNMP commands when implemented by other components. Though API calls and SNMP commands are used for illustrative purposes the determined set of processes may correspond to any command which may be implemented by a network component. In addition mapping may be associated with the make or model of a particular component such that each determined process will carry out the desired function on a particular component. For example the determined set of processes may depend on the manufacturer or operating system of the components toward which each process is directed.

Therefore at block a set of processes would be determined such that the routing of incoming data to network component is redirect to network component . This may involve modifications to virtual machines associated with networking components and . Additionally this may involve modifications to one or more ONM system managers .

The set of processes may also be determined according to the obtained client configuration network configuration and client permissions. For example a received command may correspond to a customized command specified within the client configuration. In some embodiments client permissions may be used to determine whether the user as determined by the log on request is authorized to execute the obtained command. If the interface module determines that the user is unauthorized the routine may be ended. In some embodiments the user may be notified that they are unauthorized to execute such a command. Further unauthorized access attempts may be stored in a data log for review by authorized users or administrators. In this embodiment if the interface module determines that the user is authorized to execute the command the routine proceeds to block .

At block the interface module causes the identified set of processes to be executed on components of the substrate network . For example where the command specifies that all incoming network traffic directed towards networking component be redirected to a process may be executed on the ONM system managers which correspond to networking components and . As described above this may include sending calls to the substrate network via established APIs provided by the substrate network . In some embodiments execution of the set of processes may be caused by other interface methods such as SNMP.

At block the interface module obtains information corresponding to the executed processes. For example a command rerouting traffic from logical network component to may result in a notification that the processes executed successfully. Where other processes are executed such as requests for traffic statistics the information obtained may correspond to network information from various ONM system managers or other components of the substrate network .

At block a response is generated based on the received information corresponding to the executed processes. In some embodiments this may include simply relaying the information obtained at block . For instance where a command corresponds to a routing request both the information received at block and the generated response may indicate that the routing request executed successfully. In some embodiments the generated requests may differ substantially from the information obtained at block . For example where a command corresponds to a request for network traffic the information obtained at block may reflect traffic information of the substrate network . Because the user may not have knowledge of the topology of the substrate network this information may be reformatted in accordance with the configuration of the simulated virtual network as may be provided by the obtained network configuration. This may entail combining or compiling the information such that it corresponds to an expected response from a simulated logical component such as logical gateway . Additionally a response may be modified by the client configuration or the client permissions. For example a style of response for some or all commands may be specified in the client configuration. In some embodiments client permissions may specify that some information may not be divulged to a user. In these embodiments the generated results would omit prohibited information.

At block the generated response is transmitted to the user. Though this flow diagram is illustrative of a single command and response one of ordinary skill in the art will appreciate that the routine or portions of the routine may be repeated for multiple commands. For example at block the routine may return to block in order to receive additional client commands. In some embodiments the routine may incorporate security features such that if a command is not received in a specified period of time the routine may return to block require a user to provide additional log on criteria.

It will be appreciated by those skilled in the art and others that all of the functions described in this disclosure may be embodied in software executed by one or more processors of the disclosed components and mobile communication devices. The software may be persistently stored in any type of non volatile storage.

Conditional language such as among others can could might or may unless specifically stated otherwise or otherwise understood within the context as used is generally intended to convey that certain embodiments include while other embodiments do not include certain features elements and or steps. Thus such conditional language is not generally intended to imply that features elements and or steps are in any way required for one or more embodiments or that one or more embodiments necessarily include logic for deciding with or without user input or prompting whether these features elements and or steps are included or are to be performed in any particular embodiment.

Any process descriptions elements or blocks in the flow diagrams described herein and or depicted in the attached figures should be understood as potentially representing modules segments or portions of code which include one or more executable instructions for implementing specific logical functions or steps in the process. Alternate implementations are included within the scope of the embodiments described herein in which elements or functions may be deleted executed out of order from that shown or discussed including substantially concurrently or in reverse order depending on the functionality involved as would be understood by those skilled in the art. It will further be appreciated that the data and or components described above may be stored on a computer readable medium and loaded into memory of the computing device using a drive mechanism associated with a computer readable storing the computer executable components such as a CD ROM DVD ROM or network interface further the component and or data can be included in a single device or distributed in any manner. Accordingly general purpose computing devices may be configured to implement the processes algorithms and methodology of the present disclosure with the processing and or execution of the various data and or components described above.

It should be emphasized that many variations and modifications may be made to the above described embodiments the elements of which are to be understood as being among other acceptable examples. All such modifications and variations are intended to be included herein within the scope of this disclosure and protected by the following claims.

