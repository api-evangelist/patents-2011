---

title: Method and device for propagating session management events
abstract: A method for propagating session management events between a plurality of machines forming a machine cluster includes generating, with a session management user interface, a session management event on a first machine of the machine cluster; detecting, with an installment of the interface, the generated event; sending, from the installment to a first security service related to the first machine, a set of specific information that is related to the detected event; determining, with the first security service, a set of target machines; sending the specific information from the first security service to target security services that are related to the target machines; and processing the specific information at each target security service of the target machines so as to execute, on each target machine that has received the specific information, the session management event generated on the first machine.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08893245&OS=08893245&RS=08893245
owner: Evidian
number: 08893245
owner_city: Les Clayes sous Bois
owner_country: FR
publication_date: 20110204
---
This application is the U.S. National Stage of PCT FR2011 050229 filed Feb. 4 2011 which in turn claims priority to French Patent Application No. 1051143 filed Feb. 17 2010 the entire contents of all applications are incorporated herein by reference in their entireties.

The object of the present invention is a method for propagating session management events. Another object of the invention is a device capable of implementing a method for propagating session management events. The main purpose of the present invention is to facilitate the taking into account of session management events for a user using a plurality of machines while ensuring optimal security in terms of the control of users of different machines under consideration.

In general the field of the invention is that of the simultaneous use of several machines by a same user. The machines under consideration are mainly of the work station server and router type. In various situations particularly in different professional contexts a same user is led to work simultaneously on several machines. This is the case for example with traders who typically have between four and six machines available in their immediate environment the various machines being immediately accessible from their position of work particularly their office. The operations carried out on the set of machines are visible on different screens visible to the user.

When a user of several machines wishes to operate all of the machines on which he wants to work he inevitably must identify himself on each machine through a session management user interface. Different possibilities corresponding to different levels of security and to different levels of user traceability are offered to a user to identify himself on the machines on which he wishes to work.

The least secured of these possibilities resides in the inputting of an identifier and a password into the session management user interface. A more secured solution enabling better identification of the user resides in the use of a smart card belonging to the user the smart card is inserted into a specific reader and the session management user interface then invites the user to enter a PIN code to be identified. An even more secured solution ensuring even better user traceability smart cards may be stolen or loaned resides in the use of biometric systems The user is identified by means for example of a fingerprint.

If improvements therefore occurred in terms of securing access to machines and user traceability a problem with the ease of identification of users remains. In fact regardless of the type of identification operation entering an identifier and password using a smart card or a biometric system it is necessary for the user to carry out the identification operation on all of the stations that he wishes to use. As these identification operations occur at least on a daily basis their repeated character quickly becomes tiresome to the user and unnecessarily wastes time. In addition the use of smart cards and or biometric systems may necessitate the installation of specific readers or sensors on each of the machines intended to be used by the user. This tiresome character connected to the identification operations is also found for other operations executed by means of the session management user interface this is particularly the case for session locking operations session closing operations or else session reinitializing rebooting operations.

The method and device according to the invention propose a solution to the problems that have just been stated. In the invention a solution is proposed so that a user of a plurality of machines does not have to repeat certain session management operations Thanks to the invention he only has to execute an operation once on a first station so that the operation in question is considered to be performed on all of the other stations on which the user is led to work. For example the operation may be an identification operation a session closing operation a session locking operation or else an operation to reboot one or more machines.

Advantageously in the invention a significant degree of securement is brought to these operations and user traceability is ensured in an optimal manner in respectively limiting access to machines to authorized users and in possibly retaining information relative to the identity of the user. For this purpose the invention particularly provides for defining all of the machines that are capable of communicating between each other so that the session management events executed at the level of a first machine propagate to the other machines of the plurality of machines under consideration.

The invention therefore mainly relates to a method for propagating session management events between a plurality of machines forming a machine cluster characterized in that the method comprises the following various steps 

Machine is understood to refer to any computer equipment comprising a session management user interface by which a user may be authenticated with an identifier and a password. In the non limiting examples a machine may be an individual workstation or a server.

Security service is understood to refer to a background task that operates independently from a user session i.e. even in the absence of a user session. Therefore a security service due to its independence with regard to a user session may continue to operate even when a session management user interface used on the machine associated with the security service under consideration is no longer active such as is the case with some operating systems.

Management event is understood to refer to one of four operations realizable by means of a session management user interface i.e. an identification operation particularly in view of a work session opening a session closing operation a session locking operation and a rebooting operation. A session locking operation is distinguished from a session closing operation insofar as for a session locking operation the session remains open and active the applications operating continue their tasks but no user may intervene via the locked man machine interface. On the other hand following a session closing operation the session is stopped all the applications that were being executed were stopped the user is then disconnected and the session in progress is destroyed.

The method according to the invention may comprise in addition to the main steps that have just been mentioned in the previous paragraph one or more additional characteristics from among the following 

Following the generation by a user of a rebooting command the step of processing specific information at the level of each target security service of the target machines then comprising the operation consisting of executing a rebooting application for each target machine having received the specific information associated with the rebooting event.

The different additional characteristics of the method according to the invention insofar as they are not mutually exclusive are combined according to all combination possibilities to result in different examples of embodiment of the invention.

The invention also extends to a set of machines capable of implementing the method according to the invention the different machines being equipped with any means necessary to carry out the different operations necessary for implementing the method according to the invention.

The invention and its various applications will be better understood upon reading the following description and examining the accompanying figures.

In the example from as in the other examples that will be detailed by means of the other figures only the operations from the first machine and from the second machine are detailed The operation of the other machines from cluster being similar to the operation of the second machine . In their operation for the embodiment of the method according to the invention the first machine is distinguished from the other machines in cluster by designating these other machines as target machines.

The first machine is distinguished from the other machines in cluster and particularly from the target machine insofar as it is this machine that generates particularly by a user a session management event via a session management user interface name abbreviated by the acronym IUGS sometimes simply designated user interface. But in the context of the embodiment of the method according to the invention the operation of various machines in the cluster is completely interchangeable The target machine may absolutely be used as the first machine when the session management event is directly i.e. not through another machine in the cluster generated by a user on said target machine . In such a case the first machine then becomes one of the target machines in the machine cluster .

In the example illustrated by means of the event under consideration is a user authentication or identification type AUTH event. The operation that will be described is similar to the case where the event under consideration is of the session unlocking type. The user generates such an identification or unlocking event either by direct entry on a keyboard associated with the first machine of an identifier Id and a password Pwd or by a hardware interface for example of the smart card reader or biometric sensor type In all cases the step of generating the identification or unlocking type session management event leads to the generation of the identifier Id and password Pwd these two pieces of data when they are not entered manually being associated in a cross reference table not represented stored in the first machine with a smart card or biometric information associated with a user.

An operation to verify the agreement between the identifier and the password is then carried out by the user interface in a following step. If the agreement is correct a plugin of the user interface detects said management event and recovers specific information IS associated with the event detected. In the first example illustrated the specific information IS AUTH comprise at least the identifier Id and the password Pwd. In other examples that will be detailed subsequently the specific information advantageously comprise a command capable of intervening on a session management user interface. Plugin then carries out a transmission of specific information IS AUTH to a first security service associated with the first machine . The transmission is carried out by respecting a TCP IP type protocol or any other protocol of the equivalent client server type for example of the UDP or other type such as for example SPX or TCAP.

The security service then accesses a directory in which it reads the identity of the target machines from the machine cluster. Directory advantageously comprises for each machine referenced at least one of the following pieces of information Globally Unique Identifier a name assigned for example by an administrator and its IP address. Advantageously directory comprises for each machine referenced these three pieces of information. The first security service then transmits specific information IS AUTH to the target machines. This transmission is also carried out according to a protocol of the TCP IP type or any other equivalent protocol of the client server type. Advantageously prior to this transmission as in the other examples that will be described subsequently the specific information transmitted will be encrypted as a security measure.

Each target machine insofar as it is connected to the network constituted by the machine cluster the connection may be of any type whatsoever receives specific information IS at the level of a security service that is specific to it designated for each target machine by the expression target security service. If the specific information IS AUTH had been encrypted previously it is decrypted.

In this example as in the other examples of embodiment that will be described subsequently if a target machine in the machine cluster does not receive the specific information for example because it is not connected to the first machine it will receive said specific information once the connection will be reestablished. For this purpose it is provided that the first security service periodically sends specific information to all of the target machines in the machine cluster .

Once the specific information IS AUTH is received by the target machines particularly by target machine the target security service associated with each of the target machines carries out a belongingness verification operation of the machine from which the specific information is received at the machine cluster . For this purpose the security service accesses a directory identifying all of the machines in the machine cluster . Therefore the directory advantageously comprises for each machine referenced at least one of the following pieces of information Globally Unique Identifier a name assigned for example by an administrator and its IP address. Advantageously directory comprises for each machine referenced these three pieces of information. Such verification enables protection against messages sent erroneously or maliciously to a target machine in the machine cluster from a non authorized machine. This step of the method is advantageously reproduced in the different embodiments of the method according to the invention that will be described subsequently.

Once verification has been carried out the security service transmits a notification NOTIF to request a session opening or unlocking.

In general a notification is an application oriented message that is defined according to the session management user interface of the machine in which the notification under consideration is transmitted. Therefore for example in the case of a Windows session management user interface a notification is an event generated by Windows . In another example in the case of a Linux session management user interface a notification is an event generated by Linux .

The notification NOTIF transmitted causes a session management target user interface to be opened. A plugin called the target plugin of the session management target user interface then transmits a request REQ of the TCP IP type or operating according to any equivalent protocol of the client server type to the target security service to cause specific information IS AUTH and particularly the identifier Id and the password Pwd to be sent from the target security service to the target plugin .

A work session is therefore opened or unlocked on the target machine and on any other machine in the machine cluster having effectively received the specific information IS AUTH .

The example that has just been described mentions the use of directories and that determine the machines that belong to a cluster under consideration. These directories are accessible by the security services of the machines. In general in the different examples of embodiment of the method according to the invention these directories are either stored in each of the machines possibly after having been transmitted by a remote management entity or are stored in a remote management entity the security services then accessing said management entity to consult the directories. In this second possibility it may be considered that a single directory exists for a cluster of machines. Advantageously a user of a machine from a given machine cluster may change the directory by adding or possibly removing certain machines to or from the cluster to which the machine that he uses belongs. For this purpose the user accesses the directory stored in the remote management unit and modifies the list of machines in the cluster advantageously according to the rights that have been previously granted to the user For example the user may only add machines appearing in a list of available machines to a machine cluster.

In an improvement of the method according to the invention it is provided that for each inactive machine in the machine cluster that had not received a signal from another machine in the machine cluster during a previously determined duration a session closing or a session locking of the work session in progress on said machine under consideration is caused. Inactive machine is understood to refer to a machine on which the user does not directly intervene through the conventional man machine interface keyboard mouse etc. . For this purpose the use of a countdown in each machine is provided that measures a duration of inactivity of the machine under consideration the countdown being reinitialized once the machine under consideration receives information from another machine in the machine cluster or once the user directly uses the machine under consideration.

The plugin of the user interface also detects said locking or closing event and recovers specific information IS VER FER associated with the detected event. In the second example illustrated the specific information comprises at least one session locking or closing command instruction. The plugin then transmits specific information IS VER FER to the first security service associated with the first machine . The transmission is carried out by respecting a protocol of the TCP IP type or any other equivalent protocol of the client server type.

The security service then accesses the directory in which it reads the identity of the target machines in the machine cluster . The first security service then transmits specific information IS VER FER to the target machines. The transmission is also carried out according to a protocol of the TCP IP type or any other equivalent protocol of the client server type.

Each target machine insofar as it is connected to the network constituted by the machine cluster the connection may be of any type whatsoever receives specific information IS VER FER at the level of a security service that is specific to it.

Once the specific information IS VER FER is received by the target machines particularly by the target machine the target security service associated with each of the target machines transmits a notification NOTIF to request a session locking or closing. The transmission is advantageously preceded by the belongingness verification operation of the machine from which the specific information is received at the machine cluster .

The notification NOTIF is then transmitted either to the plugin of the session management target user interface if present as is the case for example with Windows XP or Linux operating systems as illustrated in or to a specific application capable of causing the closing or locking of the work session as is the case for example with the Windows Vista operating system .

Advantageously in the invention it is provided that the session management user interface receiving the rebooting event INIT proposes to the user by activating an application a choice between a local rebooting operation or a general rebooting operation. In the first case only the first machine is rebooted. In the second case the rebooting event is intended to propagate according to the invention to all of the target machines in the machine cluster as described below.

Therefore if the general rebooting mode is chosen by the user the plugin of the user interface also carries out detection of said rebooting or closing event and recovers specific information IS INIT associated with the event detected.

In the third example illustrated the specific information comprises at least one session rebooting command instruction. The plugin then transmits specific information IS INIT to the first security service associated with the first machine . The transmission is carried out by respecting a protocol of the TCP IP type or any other equivalent protocol of the client server type.

The security service then accesses the directory in which it reads the identity of the target machines in the machine cluster . The first security service then transmits specific information IS INIT to the target machines. The transmission is also carried out according to a protocol of the TCP IP type or any other equivalent protocol of the client server type.

Each target machine insofar as it is connected to the network constituted by the machine cluster the connection may be of any type whatsoever receives specific information IS INIT at the level of a security service that is specific to it.

Once the specific information IS INIT is received by the target machines particularly target machine the target security service associated with each of the target machines executes a specific application programming interface or API within the target machine under consideration said API called API REBOOT controlling the desired rebooting operation.

The execution of API is advantageously preceded by the belongingness verification operation of the machine from which the specific information is received at the machine cluster .

When a work session is opened on a machine designated as the target machine the session management interface essentially from the authentication information identifier and password that it has causes different applications for example e mail To open. Some of these applications are secured applications and while the authentication information has been sent to the session management user interface of the target machine these secured applications require additional identification by again providing said authentication information.

One difficulty is then posed when one uses secured identification tools of the smart card reader or biometric installation type and these identification tools are installed on a first machine capable of communicating with the target machine under consideration. In fact the target machine under consideration does not have secured identification tools their installation on the target machine under consideration would be very costly.

One solution to enable additional identification on the target machine without having to equip it with secured identification tools is to redirect the USB port. Such a redirection consists of remotely taking control of a USB peripheral device such as for example a smart card reader . But such an operation leads to the local disconnection of the peripheral device and consequently to the closing or locking of the work session of the first machine which is disabling particularly in the case of the implementation of the method for propagating management events that has just been described.

Therefore in the invention a solution is proposed to carry out an additional identification procedure on a target machine so as to not close or lock the work session open on the first machine equipped with secured identification tools.

The solution proposed is advantageously implemented in the context of the propagation of management events that has been described until the present particularly when the management event under consideration is an event. But more generally it may also be implemented in a less sophisticated context in which a first machine and a second machine are capable of exchanging information between each other. It is in this general context that the solution is described with reference to .

In these figures a first machine and a target machine are represented. As represented in these figures the first machine may for example but not necessarily be of the first machine type with in particular a plugin associated with the session management user interface and a security service . The second machine may be for example but not necessarily of the target machine type with in particular the target security service .

In the secured identification tools are of the smart card and associated smart card card reader type. With such secured tools when an additional identification request is requested at the level of the target machine by a secured application the target machine including a work session that was previously opened following the receipt from the first machine a dialog box is opened in which a user is invited to enter a PIN code.

Once entered the PIN code is transmitted to the first machine . The transmission is carried out according to a TCP IP type protocol or any other client server type protocol.

A control operation is then implemented to verify the agreement between the PIN code entered and the PIN code of the smart card by carrying out a dialog with said smart card . In case of agreement a validation message VAL advantageously comprising the identifier Id and the password Pwd necessary for opening the secured application are sent to the target machine by a transmission operation . The transmission is carried out according to a TCP IP type protocol or any other client server type protocol. The secured application is then opened.

In the secured identification tools are of the biometric sensor type. With such secured tools when an additional identification request is requested at the level of the target machine to execute a secured application on the target machine in which a work session was previously opened following the receipt from the first machine a dialog box is opened in which the user is invited to intervene on the biometric sensor connected to the first machine .

The user then uses the biometric sensor connected to the first machine to carry out an identification . Once the identification is made a validation message VAL advantageously comprising the identifier Id and the password Pwd necessary for opening the secured application under consideration on the target machine is transmitted . Transmission is carried out according to a TCP IP type protocol or any other client server type protocol.

In a first example of embodiment the transmission is carried out to all of the machines in a machine cluster to which the first machine belongs. In this example of embodiment it is provided for example that the first machine accesses the directory mentioned in the previous examples of embodiment. In a second example of embodiment the transmission is only carried out to the target machine . For this purpose the target machine previously transmitted identification information to the first machine enabling transmission to be delivered to it.

Such a mechanism therefore performs a secured identification at the level of the machines not equipped with secured identification tools especially at the level of the machines belonging to a machine cluster such as defined in the context of the invention.

